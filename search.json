[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2016 - 20220 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/doseresponse.html","id":"load-the-required-r-packages","dir":"Articles","previous_headings":"","what":"1. Load the required R packages","title":"Dose-response modelling","text":"","code":"library(kwb.qmra) library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union library(knitr) library(ggplot2) library(ggrepel)"},{"path":"/articles/doseresponse.html","id":"dose-response-database-from-qmrawiki","dir":"Articles","previous_headings":"","what":"2. Dose-response database from QMRAwiki","title":"Dose-response modelling","text":"2.1 Download","code":"dr.db <- kwb.qmra::dr.db_download() ## Rows: 37 Columns: 18 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (12): Agent, Best fit model*, Optimized parameter(s), Host type, Agent s... ## dbl  (6): LD50/ID50, # of doses, k, alpha, N50, PathogenID ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."},{"path":"/articles/doseresponse.html","id":"visualise","dir":"Articles","previous_headings":"2. Dose-response database from QMRAwiki","what":"2.2 Visualise","title":"Dose-response modelling","text":"Database: Table 1: Best-fit dose-response parameters (QMRAwiki, 2016) Dose response microbial parameters:  Dose microbial parameters 50% infection probability Figure 3: Dose microbial parameters 50% infection probability","code":"dr.db2 <- dr.db %>% dplyr::select(PathogenGroup,                          PathogenName,                          `Agent strain`,                         `Best fit model*`,                         `Optimized parameter(s)`,                          `LD50/ID50`,                         `Host type`,                          Route,                         `Dose units`,                          Response,                           Reference)  %>%                  dplyr::arrange(PathogenGroup, PathogenName)   caption <- \"Table 1: Best-fit dose-response parameters ([QMRAwiki, 2016](http://qmrawiki.canr.msu.edu/index.php/?title=Table_of_Recommended_Best-Fit_Parameters))\" knitr::kable(dr.db2,caption = caption ) #DT::datatable(doseresponse, caption = caption) dr.model <- kwb.qmra::dr.db_model(dr.db = dr.db)   ggplot( dr.model, aes(x = dose,                        y = infectionProbability,                        col = PathogenGroup)) +    geom_point() +    scale_x_log10() +    theme_bw() ## `summarise()` has grouped output by 'PathogenID', 'PathogenGroup'. You can ## override using the `.groups` argument. ## Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = ## \"none\")` instead."},{"path":"/articles/installation.html","id":"pre-required-software","dir":"Articles","previous_headings":"","what":"1 Pre-required software","title":"Installation","text":"R (>= 3.3.1: development R package kwb.qmra R 3.3.1 used. However, also later R releases (e.g. 3.4) working. Pandoc: required convert reports plain text format (markdown) different formats (docx, html, pdf). Miktex: needs installed case pdf reports created. advanced user recommended install latest version integrated development environment (IDE) RStudio Desktop “open source licence”.","code":""},{"path":"/articles/installation.html","id":"r-packages","dir":"Articles","previous_headings":"","what":"2 R Packages","title":"Installation","text":"pre-required software installed R package installation workflow described can started.","code":""},{"path":"/articles/installation.html","id":"devtools","dir":"Articles","previous_headings":"2 R Packages","what":"2.1 devtools","title":"Installation","text":"R package devtools required downloading installing R package kwb.qmra Github. Installation done executing following lines code R RStudio (now written R(Studio)):","code":"if (!require(\"devtools\")) {   install.packages(\"devtools\", repos = \"https://cloud.r-project.org\") }"},{"path":"/articles/installation.html","id":"kwb-qmra","dir":"Articles","previous_headings":"2 R Packages","what":"2.2 kwb.qmra","title":"Installation","text":"Subsequently R package kwb.qmra can installed R following code:","code":"if(!require(\"devtools\")) { install.packages(\"devtools\") } devtools::install_github(repo = \"KWB-R/kwb.qmra\",                           build_vignettes = TRUE,                          dependencies = TRUE)"},{"path":"/articles/test_random_distributions_inflow.html","id":"installation","dir":"Articles","previous_headings":"","what":"1 Installation","title":"Inflow: Test Random Distributions","text":"","code":"if(FALSE) { Sys.setenv(GITHUB_PAT = \"mysecret_access_token\") install.packages(\"remotes\", repos = \"https://cloud.r-project.org\") library(remotes) remotes::install_github(\"r-lib/remotes@18c7302637053faf21c5b025e1e9243962db1bdc\") remotes::install_github(\"KWB-R/kwb.qmra\") remotes::install_github(\"KWB-R/qmra.db\") } ## Load packages library(kwb.qmra) library(qmra.db) library(ggplot2) library(tibble) library(sessioninfo) library(stringi)"},{"path":"/articles/test_random_distributions_inflow.html","id":"import-data-from-qmra-db","dir":"Articles","previous_headings":"","what":"2 Import data from “qmra.db”","title":"Inflow: Test Random Distributions","text":"See: https://github.com/KWB-R/qmra.db/tree/master/inst/database","code":"create_inflow_metadata <- function(csv_dir = system.file(\"database/qmra-db_accdb\",                                               package = \"qmra.db\")) {  paths_list <- list(   csv_dir = system.file(\"database/qmra-db_accdb\", package = \"qmra.db\"),   inflow = \"<csv_dir>/tbl_inflow.csv\",   pathogen = \"<csv_dir>/tbl_pathogen.csv\",   pathogen_group = \"<csv_dir>/tbl_pathogenGroup.csv\",   references = \"<csv_dir>/tbl_reference.csv\",   water_source = \"<csv_dir>/tbl_waterSource.csv\"   )    paths <- kwb.utils::resolve(paths_list)   inflow <- readr::read_csv(file = paths$inflow) pathogen <- readr::read_csv(file = paths$pathogen) pathogen_group <- readr::read_csv(file = paths$pathogen_group) references <- readr::read_csv(file = paths$references) water_source <- readr::read_csv(file = paths$water_source)  inflow_metadata <- inflow %>%    dplyr::left_join(pathogen) %>%    dplyr::left_join(pathogen_group) %>%    dplyr::left_join(water_source) %>%    dplyr::left_join(references) %>%    dplyr::arrange(.data$WaterSourceName,                   .data$PathogenGroup,                   .data$PathogenName,                   .data$ReferenceName) %>%    dplyr::mutate(row_id = 1:dplyr::n()) }  inflow_metadata <- create_inflow_metadata()  #> Rows: 28 Columns: 11 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (3): distribution, PathogenInReference, Notes #> dbl (6): PathogenID, ReferenceID, WaterSourceID, min, max, mean #> lgl (2): alpha, beta #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 37 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (1): PathogenName #> dbl (2): PathogenID, PathogenGroupID #> lgl (1): PathogenDescription #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 3 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (2): PathogenGroup, PathogenGroupDescription #> dbl (2): PathogenGroupID, DefaultPathogenID #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 50 Columns: 3 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (2): ReferenceName, ReferenceLink #> dbl (1): ReferenceID #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 8 Columns: 3 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (2): WaterSourceName, WaterSourceDescription #> dbl (1): WaterSourceID #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Joining, by = \"PathogenID\" #> Joining, by = \"PathogenGroupID\" #> Joining, by = \"WaterSourceID\" #> Joining, by = \"ReferenceID\" head(inflow_metadata) #> # A tibble: 6 × 22 #>   PathogenID ReferenceID WaterSourceID   min   max distribution  mean alpha #>        <dbl>       <dbl>         <dbl> <dbl> <dbl> <chr>        <dbl> <lgl> #> 1          3          43             7     0 10    log10_norm   NA    NA    #> 2         34          43             7     0  1    log10_norm   NA    NA    #> 3         32          43             7     0  2    log10_norm   NA    NA    #> 4          3          44             5     0 24    log10_norm    3    NA    #> 5         34          44             5     0  0.19 log10_norm    0.06 NA    #> 6         32          44             5     0  0.01 log10_norm   NA    NA    #> # … with 14 more variables: beta <lgl>, PathogenInReference <chr>, Notes <chr>, #> #   PathogenName <chr>, PathogenDescription <lgl>, PathogenGroupID <dbl>, #> #   PathogenGroup <chr>, PathogenGroupDescription <chr>, #> #   DefaultPathogenID <dbl>, WaterSourceName <chr>, #> #   WaterSourceDescription <chr>, ReferenceName <chr>, ReferenceLink <chr>, #> #   row_id <int>"},{"path":[]},{"path":"/articles/test_random_distributions_inflow.html","id":"define-checking-function","dir":"Articles","previous_headings":"3 Test","what":"3.1 Define Checking Function","title":"Inflow: Test Random Distributions","text":"","code":"check_inflow_distribution <- function(inflow_metadata, ### for valid \"type\" parameter values ### see: https://kwb-r.github.io/kwb.qmra/reference/create_random_distribution.html type = \"log10_norm\", number_of_repeatings = 1000,  number_of_events = 365, dbg = TRUE) {    metadata <- inflow_metadata %>%    dplyr::mutate(row_id = 1:dplyr::n()) %>%     dplyr::mutate(distribution_type = type)  percentiles_list <- lapply(seq_len(nrow(inflow_metadata)), FUN = function(i) { sel_dat <- inflow_metadata[i, ]    print(sprintf(\"Water source: %s, Pathogen: %s, Reference: %s, Min: %f, Max: %f\",                stringi::stri_enc_toutf8(sel_dat$WaterSourceName),                stringi::stri_enc_toutf8(sel_dat$PathogenName),                stringi::stri_enc_toutf8(sel_dat$ReferenceName),                sel_dat$min,                sel_dat$max)) inflow <- kwb.qmra::create_random_distribution(type = type,                                      number_of_repeatings = number_of_repeatings,                                      number_of_events = number_of_events,                                      min = sel_dat$min,                                       max = sel_dat$max,                                       debug = dbg)  ## Go ahead even if errors occur try(tibble::enframe(quantile(inflow$events$values, probs = seq(0, 1, by = 0.01))))  })   dplyr::bind_rows(percentiles_list, .id = \"row_id\") %>%  dplyr::rename(percentile = name) %>%  dplyr::mutate(percentile = as.numeric(stringr::str_remove(.data$percentile, \"%\")),                                             distribution_type = type)   }"},{"path":"/articles/test_random_distributions_inflow.html","id":"define-plot-function","dir":"Articles","previous_headings":"3 Test","what":"3.2 Define Plot Function","title":"Inflow: Test Random Distributions","text":"","code":"plot_percentiles <- function(inflow_stats, inflow_metadata) {     n <- unique(inflow_stats$row_id) for (i in seq_along(n)) {  sel_inflow_stats <- inflow_stats[inflow_stats$row_id == i,]  metadata <- inflow_metadata[inflow_metadata$row_id == i, ]  gg <- ggplot(sel_inflow_stats, aes_string(x = \"percentile\",                                      y = \"value\",                                      col = \"distribution_type\")) +   ggplot2::scale_y_log10() +   labs(title = sprintf(\"%s (water source: %s):\\nmin = %f, max = %f\",                                      stringi::stri_enc_toutf8(metadata$PathogenName),                         stringi::stri_enc_toutf8(metadata$WaterSourceName),                        metadata$min,                         metadata$max),        subtitle = sprintf(\"Reference: [%s](%s)\",                            stringi::stri_enc_toutf8(metadata$ReferenceName),                            stringi::stri_enc_toutf8(metadata$ReferenceLink)),        x = \"Percentile\",         y = \"Pathogens Per Litre\") +   geom_line() +   theme_bw() print(gg) } }"},{"path":"/articles/test_random_distributions_inflow.html","id":"run-checking-function-and-plot","dir":"Articles","previous_headings":"3 Test","what":"3.4 Run Checking Function And Plot","title":"Inflow: Test Random Distributions","text":"","code":"inflow_stats_list <- lapply(c(\"log10_norm\", \"log10_uniform\", \"lognorm\", \"norm\", \"uniform\", \"triangle\"),                              function(type) {                               check_inflow_distribution(inflow_metadata,                                            type = type)                               }) #> [1] \"Water source: groundwater, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 10.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: -0.500000, sd: 0.911935) #> [1] \"Water source: groundwater, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: -1.000000, sd: 0.607957) #> [1] \"Water source: groundwater, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 2.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: -0.849485, sd: 0.699463) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Campylobacter jejuni, Reference: KWR 2016.081, Min: 0.000000, Max: 24.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: -0.309894, sd: 1.027511) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Cryptosporidium parvum, Reference: KWR 2016.081, Min: 0.000000, Max: 0.190000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: -1.721246, sd: 0.607957) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Rotavirus, Reference: KWR 2016.081, Min: 0.000000, Max: 0.010000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: -3.000000, sd: 0.607957) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Campylobacter jejuni, Reference: Sales Ortells 2015, Min: 13.869428, Max: 287.039359\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 1.800000, sd: 0.400000) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Cryptosporidium parvum, Reference: Sales Ortells 2015, Min: 0.000045, Max: 0.088075\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: -1.527573, sd: 0.287215) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Rotavirus, Reference: Sales Ortells 2015, Min: 9.745107, Max: 64.746069\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 1.400000, sd: 0.250000) #> [1] \"Water source: sewage, raw, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 4.000000, sd: 1.215914) #> [1] \"Water source: sewage, raw, Pathogen: Escherichia coli, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1000000.000000, Max: 10000000000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 8.000000, sd: 1.215914) #> [1] \"Water source: sewage, raw, Pathogen: Vibrio cholerae, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 4.000000, sd: 1.215914) #> [1] \"Water source: sewage, raw, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 2.000000, sd: 1.215914) #> [1] \"Water source: sewage, raw, Pathogen: Giardia duodenalis, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 2.000000, sd: 1.215914) #> [1] \"Water source: sewage, raw, Pathogen: Enteroviruses, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 1.500000, sd: 0.911935) #> [1] \"Water source: sewage, raw, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 50.000000, Max: 5000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 2.698970, sd: 0.607957) #> [1] \"Water source: sewage, treated, Pathogen: Campylobacter jejuni, Reference: WHO (2006) safe use wastewater V2, Min: 0.001000, Max: 1000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 0.000000, sd: 1.823870) #> [1] \"Water source: sewage, treated, Pathogen: Cryptosporidium parvum, Reference: WHO (2006) safe use wastewater V2, Min: 0.010000, Max: 10000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 1.000000, sd: 1.823870) #> [1] \"Water source: sewage, treated, Pathogen: Rotavirus, Reference: WHO (2006) safe use wastewater V2, Min: 0.100000, Max: 1000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 1.000000, sd: 1.215914) #> [1] \"Water source: surface water, contaminated, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 90.000000, Max: 2500.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 2.676091, sd: 0.438853) #> [1] \"Water source: surface water, contaminated, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 480.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 1.491136, sd: 0.723533) #> [1] \"Water source: surface water, contaminated, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 30.000000, Max: 60.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 1.627636, sd: 0.091507) #> [1] \"Water source: surface water, general, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 3.000000, sd: 0.607957) #> [1] \"Water source: surface water, general, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 0.500000, sd: 1.519892) #> [1] \"Water source: surface water, general, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.010000, Max: 100.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 0.000000, sd: 1.215914) #> [1] \"Water source: surface water, protected, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1100.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 0.520696, sd: 1.532475) #> [1] \"Water source: surface water, protected, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 240.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: 1.340621, sd: 0.632026) #> [1] \"Water source: surface water, protected, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 3.000000\" #> Create 1000 random distribution(s): 10^rnorm  (n: 365, mean: -0.761439, sd: 0.752991) #> [1] \"Water source: groundwater, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 10.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -2.000000, max: 1.000000) #> [1] \"Water source: groundwater, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -2.000000, max: 0.000000) #> [1] \"Water source: groundwater, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 2.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -2.000000, max: 0.301030) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Campylobacter jejuni, Reference: KWR 2016.081, Min: 0.000000, Max: 24.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -2.000000, max: 1.380211) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Cryptosporidium parvum, Reference: KWR 2016.081, Min: 0.000000, Max: 0.190000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -2.721246, max: -0.721246) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Rotavirus, Reference: KWR 2016.081, Min: 0.000000, Max: 0.010000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -4.000000, max: -2.000000) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Campylobacter jejuni, Reference: Sales Ortells 2015, Min: 13.869428, Max: 287.039359\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 1.142059, max: 2.457941) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Cryptosporidium parvum, Reference: Sales Ortells 2015, Min: 0.000045, Max: 0.088075\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -2.000000, max: -1.055146) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Rotavirus, Reference: Sales Ortells 2015, Min: 9.745107, Max: 64.746069\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 0.988787, max: 1.811213) #> [1] \"Water source: sewage, raw, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 2.000000, max: 6.000000) #> [1] \"Water source: sewage, raw, Pathogen: Escherichia coli, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1000000.000000, Max: 10000000000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 6.000000, max: 10.000000) #> [1] \"Water source: sewage, raw, Pathogen: Vibrio cholerae, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 2.000000, max: 6.000000) #> [1] \"Water source: sewage, raw, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 0.000000, max: 4.000000) #> [1] \"Water source: sewage, raw, Pathogen: Giardia duodenalis, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 0.000000, max: 4.000000) #> [1] \"Water source: sewage, raw, Pathogen: Enteroviruses, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 0.000000, max: 3.000000) #> [1] \"Water source: sewage, raw, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 50.000000, Max: 5000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 1.698970, max: 3.698970) #> [1] \"Water source: sewage, treated, Pathogen: Campylobacter jejuni, Reference: WHO (2006) safe use wastewater V2, Min: 0.001000, Max: 1000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -3.000000, max: 3.000000) #> [1] \"Water source: sewage, treated, Pathogen: Cryptosporidium parvum, Reference: WHO (2006) safe use wastewater V2, Min: 0.010000, Max: 10000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -2.000000, max: 4.000000) #> [1] \"Water source: sewage, treated, Pathogen: Rotavirus, Reference: WHO (2006) safe use wastewater V2, Min: 0.100000, Max: 1000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -1.000000, max: 3.000000) #> [1] \"Water source: surface water, contaminated, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 90.000000, Max: 2500.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 1.954243, max: 3.397940) #> [1] \"Water source: surface water, contaminated, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 480.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 0.301030, max: 2.681241) #> [1] \"Water source: surface water, contaminated, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 30.000000, Max: 60.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 1.477121, max: 1.778151) #> [1] \"Water source: surface water, general, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 2.000000, max: 4.000000) #> [1] \"Water source: surface water, general, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -2.000000, max: 3.000000) #> [1] \"Water source: surface water, general, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.010000, Max: 100.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -2.000000, max: 2.000000) #> [1] \"Water source: surface water, protected, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1100.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -2.000000, max: 3.041393) #> [1] \"Water source: surface water, protected, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 240.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: 0.301030, max: 2.380211) #> [1] \"Water source: surface water, protected, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 3.000000\" #> Create 1000 random distribution(s): 10^runif (n: 365, min: -2.000000, max: 0.477121) #> [1] \"Water source: groundwater, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 10.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 1.151792, sdlog: 4.884521) #> [1] \"Water source: groundwater, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 0.004975, sdlog: 3.256347) #> [1] \"Water source: groundwater, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 2.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 0.349067, sdlog: 3.746476) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Campylobacter jejuni, Reference: KWR 2016.081, Min: 0.000000, Max: 24.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 1.589235, sdlog: 5.503570) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Cryptosporidium parvum, Reference: KWR 2016.081, Min: 0.000000, Max: 0.190000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: -0.825390, sdlog: 3.256347) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Rotavirus, Reference: KWR 2016.081, Min: 0.000000, Max: 0.010000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: -2.297610, sdlog: 3.256347) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Campylobacter jejuni, Reference: Sales Ortells 2015, Min: 13.869428, Max: 287.039359\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 2.853404, sdlog: 2.142486) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Cryptosporidium parvum, Reference: Sales Ortells 2015, Min: 0.000045, Max: 0.088075\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: -1.161010, sdlog: 1.538386) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Rotavirus, Reference: Sales Ortells 2015, Min: 9.745107, Max: 64.746069\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 2.155340, sdlog: 1.339054) #> [1] \"Water source: sewage, raw, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 6.907805, sdlog: 6.512694) #> [1] \"Water source: sewage, raw, Pathogen: Escherichia coli, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1000000.000000, Max: 10000000000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 11.512975, sdlog: 6.512694) #> [1] \"Water source: sewage, raw, Pathogen: Vibrio cholerae, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 6.907805, sdlog: 6.512694) #> [1] \"Water source: sewage, raw, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 4.605220, sdlog: 6.512694) #> [1] \"Water source: sewage, raw, Pathogen: Giardia duodenalis, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 4.605220, sdlog: 6.512694) #> [1] \"Water source: sewage, raw, Pathogen: Enteroviruses, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 3.454377, sdlog: 4.884521) #> [1] \"Water source: sewage, raw, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 50.000000, Max: 5000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 4.263572, sdlog: 3.256347) #> [1] \"Water source: sewage, treated, Pathogen: Campylobacter jejuni, Reference: WHO (2006) safe use wastewater V2, Min: 0.001000, Max: 1000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 3.453878, sdlog: 9.769041) #> [1] \"Water source: sewage, treated, Pathogen: Cryptosporidium parvum, Reference: WHO (2006) safe use wastewater V2, Min: 0.010000, Max: 10000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 4.605171, sdlog: 9.769041) #> [1] \"Water source: sewage, treated, Pathogen: Rotavirus, Reference: WHO (2006) safe use wastewater V2, Min: 0.100000, Max: 1000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 3.453928, sdlog: 6.512694) #> [1] \"Water source: surface water, contaminated, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 90.000000, Max: 2500.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 3.929707, sdlog: 2.350590) #> [1] \"Water source: surface water, contaminated, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 480.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 3.088972, sdlog: 3.875397) #> [1] \"Water source: surface water, contaminated, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 30.000000, Max: 60.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 2.249905, sdlog: 0.490129) #> [1] \"Water source: surface water, general, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 4.610145, sdlog: 3.256347) #> [1] \"Water source: surface water, general, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 3.453883, sdlog: 8.140868) #> [1] \"Water source: surface water, general, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.010000, Max: 100.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 2.302635, sdlog: 6.512694) #> [1] \"Water source: surface water, protected, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1100.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 3.501537, sdlog: 8.208262) #> [1] \"Water source: surface water, protected, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 240.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 2.744469, sdlog: 3.385268) #> [1] \"Water source: surface water, protected, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 3.000000\" #> Create 1000 random distribution(s): lognorm (n: 365, meanlog: 0.550970, sdlog: 4.033183) #> [1] \"Water source: groundwater, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 10.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 5.005000, sd: 3.036744) #> [1] \"Water source: groundwater, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 0.505000, sd: 0.300939) #> [1] \"Water source: groundwater, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 2.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 1.005000, sd: 0.604917) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Campylobacter jejuni, Reference: KWR 2016.081, Min: 0.000000, Max: 24.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 12.005000, sd: 7.292442) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Cryptosporidium parvum, Reference: KWR 2016.081, Min: 0.000000, Max: 0.190000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 0.095950, sd: 0.057178) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Rotavirus, Reference: KWR 2016.081, Min: 0.000000, Max: 0.010000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 0.005050, sd: 0.003009) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Campylobacter jejuni, Reference: Sales Ortells 2015, Min: 13.869428, Max: 287.039359\" #> Create 1000 random distribution(s): norm (n: 365, mean: 150.454393, sd: 83.037763) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Cryptosporidium parvum, Reference: Sales Ortells 2015, Min: 0.000045, Max: 0.088075\" #> Create 1000 random distribution(s): norm (n: 365, mean: 0.049038, sd: 0.023733) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Rotavirus, Reference: Sales Ortells 2015, Min: 9.745107, Max: 64.746069\" #> Create 1000 random distribution(s): norm (n: 365, mean: 37.245588, sd: 16.719105) #> [1] \"Water source: sewage, raw, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 500050.000000, sd: 303948.018114) #> [1] \"Water source: sewage, raw, Pathogen: Escherichia coli, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1000000.000000, Max: 10000000000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 5000500000.000000, sd: 3039480181.142891) #> [1] \"Water source: sewage, raw, Pathogen: Vibrio cholerae, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 500050.000000, sd: 303948.018114) #> [1] \"Water source: sewage, raw, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 5000.500000, sd: 3039.480181) #> [1] \"Water source: sewage, raw, Pathogen: Giardia duodenalis, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 5000.500000, sd: 3039.480181) #> [1] \"Water source: sewage, raw, Pathogen: Enteroviruses, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 500.500000, sd: 303.674438) #> [1] \"Water source: sewage, raw, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 50.000000, Max: 5000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 2525.000000, sd: 1504.693159) #> [1] \"Water source: sewage, treated, Pathogen: Campylobacter jejuni, Reference: WHO (2006) safe use wastewater V2, Min: 0.001000, Max: 1000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 500.000500, sd: 303.978112) #> [1] \"Water source: sewage, treated, Pathogen: Cryptosporidium parvum, Reference: WHO (2006) safe use wastewater V2, Min: 0.010000, Max: 10000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 5000.005000, sd: 3039.781120) #> [1] \"Water source: sewage, treated, Pathogen: Rotavirus, Reference: WHO (2006) safe use wastewater V2, Min: 0.100000, Max: 1000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 500.050000, sd: 303.948018) #> [1] \"Water source: surface water, contaminated, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 90.000000, Max: 2500.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 1295.000000, sd: 732.587982) #> [1] \"Water source: surface water, contaminated, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 480.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 241.000000, sd: 145.301683) #> [1] \"Water source: surface water, contaminated, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 30.000000, Max: 60.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 45.000000, sd: 9.119352) #> [1] \"Water source: surface water, general, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 5050.000000, sd: 3009.386318) #> [1] \"Water source: surface water, general, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 500.005000, sd: 303.975376) #> [1] \"Water source: surface water, general, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.010000, Max: 100.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 50.005000, sd: 30.394802) #> [1] \"Water source: surface water, protected, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1100.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 550.005000, sd: 334.373218) #> [1] \"Water source: surface water, protected, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 240.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 121.000000, sd: 72.346863) #> [1] \"Water source: surface water, protected, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 3.000000\" #> Create 1000 random distribution(s): norm (n: 365, mean: 1.505000, sd: 0.908895) #> [1] \"Water source: groundwater, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 10.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.000000, max: 10.000000) #> [1] \"Water source: groundwater, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.000000, max: 1.000000) #> [1] \"Water source: groundwater, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 2.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.000000, max: 2.000000) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Campylobacter jejuni, Reference: KWR 2016.081, Min: 0.000000, Max: 24.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.000000, max: 24.000000) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Cryptosporidium parvum, Reference: KWR 2016.081, Min: 0.000000, Max: 0.190000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.000000, max: 0.190000) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Rotavirus, Reference: KWR 2016.081, Min: 0.000000, Max: 0.010000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.000000, max: 0.010000) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Campylobacter jejuni, Reference: Sales Ortells 2015, Min: 13.869428, Max: 287.039359\" #> Create 1000 random distribution(s): uniform (n: 365, min: 13.869428, max: 287.039359) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Cryptosporidium parvum, Reference: Sales Ortells 2015, Min: 0.000045, Max: 0.088075\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.000045, max: 0.088075) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Rotavirus, Reference: Sales Ortells 2015, Min: 9.745107, Max: 64.746069\" #> Create 1000 random distribution(s): uniform (n: 365, min: 9.745107, max: 64.746069) #> [1] \"Water source: sewage, raw, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 100.000000, max: 1000000.000000) #> [1] \"Water source: sewage, raw, Pathogen: Escherichia coli, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1000000.000000, Max: 10000000000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 1000000.000000, max: 10000000000.000000) #> [1] \"Water source: sewage, raw, Pathogen: Vibrio cholerae, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 100.000000, max: 1000000.000000) #> [1] \"Water source: sewage, raw, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 1.000000, max: 10000.000000) #> [1] \"Water source: sewage, raw, Pathogen: Giardia duodenalis, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 1.000000, max: 10000.000000) #> [1] \"Water source: sewage, raw, Pathogen: Enteroviruses, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 1.000000, max: 1000.000000) #> [1] \"Water source: sewage, raw, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 50.000000, Max: 5000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 50.000000, max: 5000.000000) #> [1] \"Water source: sewage, treated, Pathogen: Campylobacter jejuni, Reference: WHO (2006) safe use wastewater V2, Min: 0.001000, Max: 1000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.001000, max: 1000.000000) #> [1] \"Water source: sewage, treated, Pathogen: Cryptosporidium parvum, Reference: WHO (2006) safe use wastewater V2, Min: 0.010000, Max: 10000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.010000, max: 10000.000000) #> [1] \"Water source: sewage, treated, Pathogen: Rotavirus, Reference: WHO (2006) safe use wastewater V2, Min: 0.100000, Max: 1000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.100000, max: 1000.000000) #> [1] \"Water source: surface water, contaminated, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 90.000000, Max: 2500.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 90.000000, max: 2500.000000) #> [1] \"Water source: surface water, contaminated, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 480.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 2.000000, max: 480.000000) #> [1] \"Water source: surface water, contaminated, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 30.000000, Max: 60.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 30.000000, max: 60.000000) #> [1] \"Water source: surface water, general, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 100.000000, max: 10000.000000) #> [1] \"Water source: surface water, general, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.000000, max: 1000.000000) #> [1] \"Water source: surface water, general, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.010000, Max: 100.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.010000, max: 100.000000) #> [1] \"Water source: surface water, protected, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1100.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.000000, max: 1100.000000) #> [1] \"Water source: surface water, protected, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 240.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 2.000000, max: 240.000000) #> [1] \"Water source: surface water, protected, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 3.000000\" #> Create 1000 random distribution(s): uniform (n: 365, min: 0.000000, max: 3.000000) #> [1] \"Water source: groundwater, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 10.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.000000, max: 10.000000, mode = 5.005000) #> [1] \"Water source: groundwater, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.000000, max: 1.000000, mode = 0.505000) #> [1] \"Water source: groundwater, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 2.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.000000, max: 2.000000, mode = 1.005000) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Campylobacter jejuni, Reference: KWR 2016.081, Min: 0.000000, Max: 24.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.000000, max: 24.000000, mode = 12.005000) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Cryptosporidium parvum, Reference: KWR 2016.081, Min: 0.000000, Max: 0.190000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.000000, max: 0.190000, mode = 0.095950) #> [1] \"Water source: rainwater, rooftop harvesting, Pathogen: Rotavirus, Reference: KWR 2016.081, Min: 0.000000, Max: 0.010000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.000000, max: 0.010000, mode = 0.005050) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Campylobacter jejuni, Reference: Sales Ortells 2015, Min: 13.869428, Max: 287.039359\" #> Create 1000 random distribution(s): triangle (n: 365, min: 13.869428, max: 287.039359, mode = 150.454393) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Cryptosporidium parvum, Reference: Sales Ortells 2015, Min: 0.000045, Max: 0.088075\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.000045, max: 0.088075, mode = 0.049038) #> [1] \"Water source: rainwater, stormwater harvesting, Pathogen: Rotavirus, Reference: Sales Ortells 2015, Min: 9.745107, Max: 64.746069\" #> Create 1000 random distribution(s): triangle (n: 365, min: 9.745107, max: 64.746069, mode = 37.245588) #> [1] \"Water source: sewage, raw, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 100.000000, max: 1000000.000000, mode = 500050.000000) #> [1] \"Water source: sewage, raw, Pathogen: Escherichia coli, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1000000.000000, Max: 10000000000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 1000000.000000, max: 10000000000.000000, mode = 5000500000.000000) #> [1] \"Water source: sewage, raw, Pathogen: Vibrio cholerae, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 1000000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 100.000000, max: 1000000.000000, mode = 500050.000000) #> [1] \"Water source: sewage, raw, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 1.000000, max: 10000.000000, mode = 5000.500000) #> [1] \"Water source: sewage, raw, Pathogen: Giardia duodenalis, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 1.000000, max: 10000.000000, mode = 5000.500000) #> [1] \"Water source: sewage, raw, Pathogen: Enteroviruses, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 1.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 1.000000, max: 1000.000000, mode = 500.500000) #> [1] \"Water source: sewage, raw, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 50.000000, Max: 5000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 50.000000, max: 5000.000000, mode = 2525.000000) #> [1] \"Water source: sewage, treated, Pathogen: Campylobacter jejuni, Reference: WHO (2006) safe use wastewater V2, Min: 0.001000, Max: 1000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.001000, max: 1000.000000, mode = 500.000500) #> [1] \"Water source: sewage, treated, Pathogen: Cryptosporidium parvum, Reference: WHO (2006) safe use wastewater V2, Min: 0.010000, Max: 10000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.010000, max: 10000.000000, mode = 5000.005000) #> [1] \"Water source: sewage, treated, Pathogen: Rotavirus, Reference: WHO (2006) safe use wastewater V2, Min: 0.100000, Max: 1000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.100000, max: 1000.000000, mode = 500.050000) #> [1] \"Water source: surface water, contaminated, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 90.000000, Max: 2500.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 90.000000, max: 2500.000000, mode = 1295.000000) #> [1] \"Water source: surface water, contaminated, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 480.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 2.000000, max: 480.000000, mode = 241.000000) #> [1] \"Water source: surface water, contaminated, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 30.000000, Max: 60.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 30.000000, max: 60.000000, mode = 45.000000) #> [1] \"Water source: surface water, general, Pathogen: Campylobacter jejuni, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 100.000000, Max: 10000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 100.000000, max: 10000.000000, mode = 5050.000000) #> [1] \"Water source: surface water, general, Pathogen: Cryptosporidium parvum, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.000000, Max: 1000.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.000000, max: 1000.000000, mode = 500.005000) #> [1] \"Water source: surface water, general, Pathogen: Rotavirus, Reference: WHO (2011): Drinking water guideline, Table 7.6, Min: 0.010000, Max: 100.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.010000, max: 100.000000, mode = 50.005000) #> [1] \"Water source: surface water, protected, Pathogen: Campylobacter jejuni, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 1100.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.000000, max: 1100.000000, mode = 550.005000) #> [1] \"Water source: surface water, protected, Pathogen: Cryptosporidium parvum, Reference: WHO GDWQ (2004), Min: 2.000000, Max: 240.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 2.000000, max: 240.000000, mode = 121.000000) #> [1] \"Water source: surface water, protected, Pathogen: Rotavirus, Reference: WHO GDWQ (2004), Min: 0.000000, Max: 3.000000\" #> Create 1000 random distribution(s): triangle (n: 365, min: 0.000000, max: 3.000000, mode = 1.505000)  inflow_stats_list_df <- dplyr::bind_rows(inflow_stats_list)    plot_percentiles(inflow_stats_list_df, inflow_metadata) #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 4 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 2 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 2 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 4 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 1 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path)."},{"path":"/articles/test_random_distributions_inflow.html","id":"export-distribution-plots-to-pdf","dir":"Articles","previous_headings":"3 Test","what":"3.5 Export Distribution Plots to PDF","title":"Inflow: Test Random Distributions","text":"plots shown also available PDF document can downloaded clicking link: inflow_test_random_distributions.pdf","code":"pdff <- kwb.utils::preparePdf(\"inflow_test_random_distributions.pdf\") plot_percentiles(inflow_stats_list_df, inflow_metadata) #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 4 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 2 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 2 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 6 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 4 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 1 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). #> Warning in self$trans$transform(x): NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 5 row(s) containing missing values (geom_path). dev.off() #> agg_png  #>       2 #kwb.utils::finishAndShowPdf(pdff)"},{"path":"/articles/test_random_distributions_inflow.html","id":"session-info","dir":"Articles","previous_headings":"","what":"4 Session Info","title":"Inflow: Test Random Distributions","text":"reproducibility","code":"sessioninfo::session_info() #> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.2.0 (2022-04-22) #>  os       macOS Big Sur/Monterey 10.16 #>  system   x86_64, darwin17.0 #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       UTC #>  date     2022-06-08 #>  pandoc   2.7.3 @ /usr/local/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package      * version date (UTC) lib source #>  bit            4.0.4   2020-08-04 [1] CRAN (R 4.2.0) #>  bit64          4.0.5   2020-08-30 [1] CRAN (R 4.2.0) #>  bslib          0.3.1   2021-10-06 [1] CRAN (R 4.2.0) #>  cachem         1.0.6   2021-08-19 [1] CRAN (R 4.2.0) #>  cli            3.3.0   2022-04-25 [1] CRAN (R 4.2.0) #>  colorspace     2.0-3   2022-02-21 [1] CRAN (R 4.2.0) #>  crayon         1.5.1   2022-03-26 [1] CRAN (R 4.2.0) #>  desc           1.4.1   2022-03-06 [1] CRAN (R 4.2.0) #>  digest         0.6.29  2021-12-01 [1] CRAN (R 4.2.0) #>  dplyr          1.0.9   2022-04-28 [1] CRAN (R 4.2.0) #>  ellipsis       0.3.2   2021-04-29 [1] CRAN (R 4.2.0) #>  EnvStats       2.7.0   2022-03-07 [1] CRAN (R 4.2.0) #>  evaluate       0.15    2022-02-18 [1] CRAN (R 4.2.0) #>  fansi          1.0.3   2022-03-24 [1] CRAN (R 4.2.0) #>  farver         2.1.0   2021-02-28 [1] CRAN (R 4.2.0) #>  fastmap        1.1.0   2021-01-25 [1] CRAN (R 4.2.0) #>  fs             1.5.2   2021-12-08 [1] CRAN (R 4.2.0) #>  generics       0.1.2   2022-01-31 [1] CRAN (R 4.2.0) #>  ggplot2      * 3.3.6   2022-05-03 [1] CRAN (R 4.2.0) #>  glue           1.6.2   2022-02-24 [1] CRAN (R 4.2.0) #>  gtable         0.3.0   2019-03-25 [1] CRAN (R 4.2.0) #>  highr          0.9     2021-04-16 [1] CRAN (R 4.2.0) #>  hms            1.1.1   2021-09-26 [1] CRAN (R 4.2.0) #>  htmltools      0.5.2   2021-08-25 [1] CRAN (R 4.2.0) #>  httpuv         1.6.5   2022-01-05 [1] CRAN (R 4.2.0) #>  jquerylib      0.1.4   2021-04-26 [1] CRAN (R 4.2.0) #>  jsonlite       1.8.0   2022-02-22 [1] CRAN (R 4.2.0) #>  knitr          1.39    2022-04-26 [1] CRAN (R 4.2.0) #>  kwb.datetime   0.5.0   2022-06-08 [1] Github (kwb-r/kwb.datetime@5f2b2c4) #>  kwb.db         0.6.0   2022-06-08 [1] Github (kwb-r/kwb.db@358aa98) #>  kwb.qmra     * 0.3.1   2022-06-08 [1] local #>  kwb.utils      0.13.0  2022-06-08 [1] Github (kwb-r/kwb.utils@6218b79) #>  labeling       0.4.2   2020-10-20 [1] CRAN (R 4.2.0) #>  later          1.3.0   2021-08-18 [1] CRAN (R 4.2.0) #>  lifecycle      1.0.1   2021-09-24 [1] CRAN (R 4.2.0) #>  magrittr       2.0.3   2022-03-30 [1] CRAN (R 4.2.0) #>  memoise        2.0.1   2021-11-26 [1] CRAN (R 4.2.0) #>  mime           0.12    2021-09-28 [1] CRAN (R 4.2.0) #>  munsell        0.5.0   2018-06-12 [1] CRAN (R 4.2.0) #>  pillar         1.7.0   2022-02-01 [1] CRAN (R 4.2.0) #>  pkgconfig      2.0.3   2019-09-22 [1] CRAN (R 4.2.0) #>  pkgdown        2.0.3   2022-04-24 [1] CRAN (R 4.2.0) #>  plyr           1.8.7   2022-03-24 [1] CRAN (R 4.2.0) #>  promises       1.2.0.1 2021-02-11 [1] CRAN (R 4.2.0) #>  purrr          0.3.4   2020-04-17 [1] CRAN (R 4.2.0) #>  qmra.db      * 0.10.0  2022-06-08 [1] Github (kwb-r/qmra.db@5a3d9bd) #>  R6             2.5.1   2021-08-19 [1] CRAN (R 4.2.0) #>  ragg           1.2.2   2022-02-21 [1] CRAN (R 4.2.0) #>  Rcpp           1.0.8.3 2022-03-17 [1] CRAN (R 4.2.0) #>  readr          2.1.2   2022-01-30 [1] CRAN (R 4.2.0) #>  rlang          1.0.2   2022-03-04 [1] CRAN (R 4.2.0) #>  rmarkdown      2.14    2022-04-25 [1] CRAN (R 4.2.0) #>  RODBC          1.3-16  2019-09-03 [1] Github (cran/RODBC@275b1a6) #>  rprojroot      2.0.3   2022-04-02 [1] CRAN (R 4.2.0) #>  sass           0.4.1   2022-03-23 [1] CRAN (R 4.2.0) #>  scales         1.2.0   2022-04-13 [1] CRAN (R 4.2.0) #>  sessioninfo  * 1.2.2   2021-12-06 [1] CRAN (R 4.2.0) #>  sfsmisc        1.1-13  2022-04-02 [1] CRAN (R 4.2.0) #>  shiny          1.7.1   2021-10-02 [1] CRAN (R 4.2.0) #>  stringi      * 1.7.6   2021-11-29 [1] CRAN (R 4.2.0) #>  stringr        1.4.0   2019-02-10 [1] CRAN (R 4.2.0) #>  systemfonts    1.0.4   2022-02-11 [1] CRAN (R 4.2.0) #>  textshaping    0.3.6   2021-10-13 [1] CRAN (R 4.2.0) #>  tibble       * 3.1.7   2022-05-03 [1] CRAN (R 4.2.0) #>  tidyr          1.2.0   2022-02-01 [1] CRAN (R 4.2.0) #>  tidyselect     1.1.2   2022-02-21 [1] CRAN (R 4.2.0) #>  tzdb           0.3.0   2022-03-28 [1] CRAN (R 4.2.0) #>  utf8           1.2.2   2021-07-24 [1] CRAN (R 4.2.0) #>  vctrs          0.4.1   2022-04-13 [1] CRAN (R 4.2.0) #>  vroom          1.5.7   2021-11-30 [1] CRAN (R 4.2.0) #>  withr          2.5.0   2022-03-03 [1] CRAN (R 4.2.0) #>  xfun           0.31    2022-05-10 [1] CRAN (R 4.2.0) #>  xtable         1.8-4   2019-04-21 [1] CRAN (R 4.2.0) #>  yaml           2.3.5   2022-02-21 [1] CRAN (R 4.2.0) #>  zip            2.2.0   2021-05-31 [1] CRAN (R 4.2.0) #>  #>  [1] /Users/runner/work/_temp/Library #>  [2] /Library/Frameworks/R.framework/Versions/4.2/Resources/library #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"/articles/usage.html","id":"location-of-dummy-configuration","dir":"Articles","previous_headings":"1 Input data","what":"1.1 Location of ‘dummy’ configuration","title":"Usage (Uniform Inflow)","text":"folder csv configuration files hypothetical use case located : following screenshot shows required configuration files located confDir (: /Users/runner/work/_temp/Library/kwb.qmra/extdata/configs/dummy): Screenshot required configuration files","code":"#### DEFINE DIRECTORY ################ confDir <- system.file(\"extdata/configs/dummy\", package = \"kwb.qmra\") confDir ## [1] \"/Users/runner/work/_temp/Library/kwb.qmra/extdata/configs/dummy\""},{"path":"/articles/usage.html","id":"import-configuration-into-r","dir":"Articles","previous_headings":"1 Input data","what":"1.2 Import configuration into R","title":"Usage (Uniform Inflow)","text":"csv files input data hypothetical u dummy (shown ) imported R following function:","code":"#### LOAD ############################ config <- config_read(confDir)"},{"path":"/articles/usage.html","id":"check-input-data","dir":"Articles","previous_headings":"","what":"2 Check input data","title":"Usage (Uniform Inflow)","text":"QMRA performed - case user modify R - based imported input data, defined configuration folder. case dummy configuration, Monte carlo simulation (n = 10) 365 exposure events per year three pathogens following input parameters performed: Simulated pathogens QMRA (defined : ‘inflow.csv’ simulated = 1): Inflow concentrations (defined : ‘inflow.csv’) pathogens used QMRA: Treatment schemes (defined : ‘treatment_schemes.csv’) used QMRA: Treatment processes (defined : ‘treatment_proecesses.csv’) assumed log-reductions used QMRA (, 2011): Ingested volume per event (defined : row 3 ‘volume_perEvent’ ‘exposure.csv’) (source: assumption)): Dose-response models (defined : ‘doseresponse.csv’) used QMRA (QMRAwiki): Health parameters (defined : ‘health.csv’) simulated pathogens (, 2011):","code":""},{"path":"/articles/usage.html","id":"run-risk-calculation","dir":"Articles","previous_headings":"","what":"4 Run risk calculation","title":"Usage (Uniform Inflow)","text":"Subsequently risk calculation can performed R(Studio) executing following code, uses config imported inspected : (input & output) data saved resulting R object risk easily inspected user, e.g.: Input data Output data Thus user access ","code":"risk <- kwb.qmra::simulate_risk(config) ##  ## # STEP 0: BASIC CONFIGURATION ##  ## Simulated 3 pathogen(s): Campylobacter jejuni and Campylobacter coli, Rotavirus, Giardia duodenalis ## Number of random distribution repeatings: 10 ## Number of exposure events: 365 ##  ## # STEP 1: INFLOW ##  ## Simulated pathogen: Campylobacter jejuni and Campylobacter coli ## Create 10 random distribution(s): uniform (n: 365, min: 10.000000, max: 10000.000000) ## Simulated pathogen: Rotavirus ## Create 10 random distribution(s): uniform (n: 365, min: 10.000000, max: 10000.000000) ## Simulated pathogen: Giardia duodenalis ## Create 10 random distribution(s): uniform (n: 365, min: 10.000000, max: 10000.000000) ## Providing inflow events ... ok. (0.00s)  ## Providing inflow paras ... ok. (0.00s)  ##  ## # STEP 2: TREATMENT SCHEMES ##  ## Create 10 random distribution(s): uniform (n: 365, min: 0.200000, max: 2.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 1.000000, max: 2.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.100000, max: 3.400000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.200000, max: 4.400000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.400000, max: 3.300000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.000000, max: 3.500000) ## Create 10 random distribution(s): uniform (n: 365, min: 2.000000, max: 6.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.300000, max: 5.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.250000, max: 4.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 2.000000, max: 6.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 1.000000, max: 2.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 2.100000, max: 8.300000) ## Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) ## Simulated treatment: Conventional clarification for Bacteria ## Simulated treatment: Conventional clarification for Protozoa ## Simulated treatment: Conventional clarification for Viruses ## Simulated treatment: Granular high-rate filtration for Bacteria ## Simulated treatment: Granular high-rate filtration for Protozoa ## Simulated treatment: Granular high-rate filtration for Viruses ## Simulated treatment: Slow sand filtration for Bacteria ## Simulated treatment: Slow sand filtration for Protozoa ## Simulated treatment: Slow sand filtration for Viruses ## Simulated treatment: Bank filtration for Bacteria ## Simulated treatment: Bank filtration for Protozoa ## Simulated treatment: Bank filtration for Viruses ## Simulated treatment: UV for Bacteria ## Simulated treatment: UV for Protozoa ## Simulated treatment: UV for Viruses ## Simulated treatment: Conventional clarification for Bacteria ## Simulated treatment: Conventional clarification for Protozoa ## Simulated treatment: Conventional clarification for Viruses ## Simulated treatment: Granular high-rate filtration for Bacteria ## Simulated treatment: Granular high-rate filtration for Protozoa ## Simulated treatment: Granular high-rate filtration for Viruses ## Simulated treatment: Slow sand filtration for Bacteria ## Simulated treatment: Slow sand filtration for Protozoa ## Simulated treatment: Slow sand filtration for Viruses ## Simulated treatment: Bank filtration for Bacteria ## Simulated treatment: Bank filtration for Protozoa ## Simulated treatment: Bank filtration for Viruses ## Simulated treatment: UV for Bacteria ## Simulated treatment: UV for Protozoa ## Simulated treatment: UV for Viruses ## Joining, by = \"TreatmentID\" ## Joining, by = \"TreatmentID\" ##  ## # STEP 3: EXPOSURE ##  ## Simulated exposure: volume per event ## Create 10 random distribution(s): triangle (n: 365, min: 0.500000, max: 3.000000, mode = 1.500000) ## Joining, by = c(\"PathogenGroup\", \"eventID\", \"repeatID\") ## Joining, by = c(\"eventID\", \"repeatID\") ##  ## # STEP 4: DOSE RESPONSE ##  ## # A tibble: 3 × 13 ##   PathogenID PathogenName   PathogenGroup `Best fit mode…`       k  alpha    N50 ##        <dbl> <chr>          <chr>         <chr>              <dbl>  <dbl>  <dbl> ## 1          3 Campylobacter… Bacteria      beta-Poisson     NA       0.144 890    ## 2         32 Rotavirus      Viruses       beta-Poisson     NA       0.253   6.17 ## 3         36 Giardia duode… Protozoa      exponential       0.0199 NA      NA    ## # … with 6 more variables: `Host type` <chr>, `Dose units` <chr>, Route <chr>, ## #   Response <chr>, Reference <chr>, Link <chr> ##  ## # STEP 5: HEALTH ##  ## # A tibble: 3 × 4 ##   PathogenID PathogenName                        infection_to_il… dalys_per_case ##        <dbl> <chr>                                          <dbl>          <dbl> ## 1          3 Campylobacter jejuni and Campyloba…             0.7          0.0046 ## 2         32 Rotavirus                                       0.03         0.014  ## 3         36 Giardia duodenalis                              0.3          0.0015 ## Joining, by = c(\"PathogenID\", \"PathogenName\") str(risk$input, 1) ## List of 5 ##  $ inflow      :List of 1 ##  $ treatment   :List of 1 ##  $ exposure    :List of 1 ##  $ doseresponse:List of 1 ##  $ health      : tibble [3 × 4] (S3: tbl_df/tbl/data.frame) str(risk$output, 1) ## List of 4 ##  $ events          : tibble [54,750 × 20] (S3: tbl_df/tbl/data.frame) ##  $ total           : grouped_df [60 × 15] (S3: grouped_df/tbl_df/tbl/data.frame) ##   ..- attr(*, \"groups\")= tibble [60 × 6] (S3: tbl_df/tbl/data.frame) ##   .. ..- attr(*, \".drop\")= logi TRUE ##  $ stats_total     : grouped_df [54 × 14] (S3: grouped_df/tbl_df/tbl/data.frame) ##   ..- attr(*, \"groups\")= tibble [6 × 6] (S3: tbl_df/tbl/data.frame) ##   .. ..- attr(*, \".drop\")= logi TRUE ##  $ stats_logremoval: grouped_df [15 × 13] (S3: grouped_df/tbl_df/tbl/data.frame) ##   ..- attr(*, \"groups\")= tibble [5 × 5] (S3: tbl_df/tbl/data.frame) ##   .. ..- attr(*, \".drop\")= logi TRUE"},{"path":"/articles/usage.html","id":"visualise-results","dir":"Articles","previous_headings":"","what":"5 Visualise results","title":"Usage (Uniform Inflow)","text":"Finally results QMRA can visualised system component shown :","code":""},{"path":"/articles/usage.html","id":"inflow","dir":"Articles","previous_headings":"5 Visualise results","what":"5.1 Inflow","title":"Usage (Uniform Inflow)","text":"Simulated inflow concentrations","code":"kwb.qmra::plot_inflow(risk)"},{"path":"/articles/usage.html","id":"treatment","dir":"Articles","previous_headings":"5 Visualise results","what":"5.2 Treatment","title":"Usage (Uniform Inflow)","text":"Simulated reductions treatment plant","code":"kwb.qmra::plot_reduction(risk)"},{"path":"/articles/usage.html","id":"effluent","dir":"Articles","previous_headings":"5 Visualise results","what":"5.3 Effluent","title":"Usage (Uniform Inflow)","text":"Simulated effluent concentrations","code":"kwb.qmra::plot_effluent(risk)"},{"path":"/articles/usage.html","id":"exposure","dir":"Articles","previous_headings":"5 Visualise results","what":"5.4 Exposure","title":"Usage (Uniform Inflow)","text":"Simulated dose per event Simulated ingested volume per event","code":"kwb.qmra::plot_event_dose(risk) kwb.qmra::plot_event_volume(risk)"},{"path":[]},{"path":"/articles/usage.html","id":"per-event","dir":"Articles","previous_headings":"5 Visualise results > 5.5 Health results","what":"5.5.1 Per event","title":"Usage (Uniform Inflow)","text":"Simulated infection probability per event Simulated illness probability per event Simulated DALYs per event","code":"kwb.qmra::plot_event_infectionProb(risk) kwb.qmra::plot_event_illnessProb(risk) kwb.qmra::plot_event_dalys(risk)"},{"path":"/articles/usage.html","id":"total","dir":"Articles","previous_headings":"5 Visualise results > 5.5 Health results","what":"5.5.2 Total","title":"Usage (Uniform Inflow)","text":"Simulated total infection probability (events) Simulated total illness probability (events Simulated total DALYs (events) addtion tables summary statistics, e.g. total risk can generated easily shown : Total risk (first repeat random generation)","code":"kwb.qmra::plot_total_infectionProb(risk) kwb.qmra::plot_total_illnessProb(risk) kwb.qmra::plot_total_dalys(risk)"},{"path":"/articles/usage.html","id":"export-results","dir":"Articles","previous_headings":"5 Visualise results","what":"6 Export results","title":"Usage (Uniform Inflow)","text":"E.g. Write reports configurations package subfolder extdata/configs/ (: /Users/runner/work/_temp/Library/kwb.qmra/extdata/configs/):","code":"confDirs <- system.file(\"extdata/configs/\", package = \"kwb.qmra\") kwb.qmra::report_workflow(confDirs)"},{"path":[]},{"path":"/articles/usage_log10_norm_inflow.html","id":"location-of-dummy-configuration","dir":"Articles","previous_headings":"1 Input data","what":"1.1 Location of ‘dummy’ configuration","title":"Usage (Log10 Norm Inflow)","text":"folder csv configuration files hypothetical use case located : following screenshot shows required configuration files located confDir (: /Users/runner/work/_temp/Library/kwb.qmra/extdata/configs/dummy_log10_norm): Screenshot required configuration files","code":"#### DEFINE DIRECTORY ################ confDir <- system.file(\"extdata/configs/dummy_log10_norm\", package = \"kwb.qmra\") confDir ## [1] \"/Users/runner/work/_temp/Library/kwb.qmra/extdata/configs/dummy_log10_norm\""},{"path":"/articles/usage_log10_norm_inflow.html","id":"import-configuration-into-r","dir":"Articles","previous_headings":"1 Input data","what":"1.2 Import configuration into R","title":"Usage (Log10 Norm Inflow)","text":"csv files input data hypothetical u dummy (shown ) imported R following function:","code":"#### LOAD ############################ config <- config_read(confDir)"},{"path":"/articles/usage_log10_norm_inflow.html","id":"check-input-data","dir":"Articles","previous_headings":"","what":"2 Check input data","title":"Usage (Log10 Norm Inflow)","text":"QMRA performed - case user modify R - based imported input data, defined configuration folder. case dummy configuration, Monte carlo simulation (n = 10) 365 exposure events per year three pathogens following input parameters performed: Simulated pathogens QMRA (defined : ‘inflow.csv’ simulated = 1): Inflow concentrations (defined : ‘inflow.csv’) pathogens used QMRA: Treatment schemes (defined : ‘treatment_schemes.csv’) used QMRA: Treatment processes (defined : ‘treatment_proecesses.csv’) assumed log-reductions used QMRA (, 2011): Ingested volume per event (defined : row 3 ‘volume_perEvent’ ‘exposure.csv’) (source: assumption)): Dose-response models (defined : ‘doseresponse.csv’) used QMRA (QMRAwiki): Health parameters (defined : ‘health.csv’) simulated pathogens (, 2011):","code":""},{"path":"/articles/usage_log10_norm_inflow.html","id":"run-risk-calculation","dir":"Articles","previous_headings":"","what":"4 Run risk calculation","title":"Usage (Log10 Norm Inflow)","text":"Subsequently risk calculation can performed R(Studio) executing following code, uses config imported inspected : (input & output) data saved resulting R object risk easily inspected user, e.g.: Input data Output data Thus user access ","code":"risk <- kwb.qmra::simulate_risk(config) ##  ## # STEP 0: BASIC CONFIGURATION ##  ## Simulated 3 pathogen(s): Campylobacter jejuni and Campylobacter coli, Rotavirus, Giardia duodenalis ## Number of random distribution repeatings: 10 ## Number of exposure events: 365 ##  ## # STEP 1: INFLOW ##  ## Simulated pathogen: Campylobacter jejuni and Campylobacter coli ## Create 10 random distribution(s): 10^rnorm  (n: 365, mean: 2.500000, sd: 0.911935) ## Simulated pathogen: Rotavirus ## Create 10 random distribution(s): 10^rnorm  (n: 365, mean: 2.500000, sd: 0.911935) ## Simulated pathogen: Giardia duodenalis ## Create 10 random distribution(s): 10^rnorm  (n: 365, mean: 2.500000, sd: 0.911935) ## Providing inflow events ... ok. (0.00s)  ## Providing inflow paras ... ok. (0.00s)  ##  ## # STEP 2: TREATMENT SCHEMES ##  ## Create 10 random distribution(s): uniform (n: 365, min: 0.200000, max: 2.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 1.000000, max: 2.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.100000, max: 3.400000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.200000, max: 4.400000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.400000, max: 3.300000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.000000, max: 3.500000) ## Create 10 random distribution(s): uniform (n: 365, min: 2.000000, max: 6.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.300000, max: 5.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.250000, max: 4.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 2.000000, max: 6.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 1.000000, max: 2.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 2.100000, max: 8.300000) ## Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) ## Simulated treatment: Conventional clarification for Bacteria ## Simulated treatment: Conventional clarification for Protozoa ## Simulated treatment: Conventional clarification for Viruses ## Simulated treatment: Granular high-rate filtration for Bacteria ## Simulated treatment: Granular high-rate filtration for Protozoa ## Simulated treatment: Granular high-rate filtration for Viruses ## Simulated treatment: Slow sand filtration for Bacteria ## Simulated treatment: Slow sand filtration for Protozoa ## Simulated treatment: Slow sand filtration for Viruses ## Simulated treatment: Bank filtration for Bacteria ## Simulated treatment: Bank filtration for Protozoa ## Simulated treatment: Bank filtration for Viruses ## Simulated treatment: UV for Bacteria ## Simulated treatment: UV for Protozoa ## Simulated treatment: UV for Viruses ## Simulated treatment: Conventional clarification for Bacteria ## Simulated treatment: Conventional clarification for Protozoa ## Simulated treatment: Conventional clarification for Viruses ## Simulated treatment: Granular high-rate filtration for Bacteria ## Simulated treatment: Granular high-rate filtration for Protozoa ## Simulated treatment: Granular high-rate filtration for Viruses ## Simulated treatment: Slow sand filtration for Bacteria ## Simulated treatment: Slow sand filtration for Protozoa ## Simulated treatment: Slow sand filtration for Viruses ## Simulated treatment: Bank filtration for Bacteria ## Simulated treatment: Bank filtration for Protozoa ## Simulated treatment: Bank filtration for Viruses ## Simulated treatment: UV for Bacteria ## Simulated treatment: UV for Protozoa ## Simulated treatment: UV for Viruses ## Joining, by = \"TreatmentID\" ## Joining, by = \"TreatmentID\" ##  ## # STEP 3: EXPOSURE ##  ## Simulated exposure: volume per event ## Create 10 random distribution(s): triangle (n: 365, min: 0.500000, max: 3.000000, mode = 1.500000) ## Joining, by = c(\"PathogenGroup\", \"eventID\", \"repeatID\") ## Joining, by = c(\"eventID\", \"repeatID\") ##  ## # STEP 4: DOSE RESPONSE ##  ## # A tibble: 3 × 13 ##   PathogenID PathogenName   PathogenGroup `Best fit mode…`       k  alpha    N50 ##        <dbl> <chr>          <chr>         <chr>              <dbl>  <dbl>  <dbl> ## 1          3 Campylobacter… Bacteria      beta-Poisson     NA       0.144 890    ## 2         32 Rotavirus      Viruses       beta-Poisson     NA       0.253   6.17 ## 3         36 Giardia duode… Protozoa      exponential       0.0199 NA      NA    ## # … with 6 more variables: `Host type` <chr>, `Dose units` <chr>, Route <chr>, ## #   Response <chr>, Reference <chr>, Link <chr> ##  ## # STEP 5: HEALTH ##  ## # A tibble: 3 × 4 ##   PathogenID PathogenName                        infection_to_il… dalys_per_case ##        <dbl> <chr>                                          <dbl>          <dbl> ## 1          3 Campylobacter jejuni and Campyloba…             0.7          0.0046 ## 2         32 Rotavirus                                       0.03         0.014  ## 3         36 Giardia duodenalis                              0.3          0.0015 ## Joining, by = c(\"PathogenID\", \"PathogenName\") str(risk$input, 1) ## List of 5 ##  $ inflow      :List of 1 ##  $ treatment   :List of 1 ##  $ exposure    :List of 1 ##  $ doseresponse:List of 1 ##  $ health      : tibble [3 × 4] (S3: tbl_df/tbl/data.frame) str(risk$output, 1) ## List of 4 ##  $ events          : tibble [54,750 × 20] (S3: tbl_df/tbl/data.frame) ##  $ total           : grouped_df [60 × 15] (S3: grouped_df/tbl_df/tbl/data.frame) ##   ..- attr(*, \"groups\")= tibble [60 × 6] (S3: tbl_df/tbl/data.frame) ##   .. ..- attr(*, \".drop\")= logi TRUE ##  $ stats_total     : grouped_df [54 × 14] (S3: grouped_df/tbl_df/tbl/data.frame) ##   ..- attr(*, \"groups\")= tibble [6 × 6] (S3: tbl_df/tbl/data.frame) ##   .. ..- attr(*, \".drop\")= logi TRUE ##  $ stats_logremoval: grouped_df [15 × 13] (S3: grouped_df/tbl_df/tbl/data.frame) ##   ..- attr(*, \"groups\")= tibble [5 × 5] (S3: tbl_df/tbl/data.frame) ##   .. ..- attr(*, \".drop\")= logi TRUE"},{"path":"/articles/usage_log10_norm_inflow.html","id":"visualise-results","dir":"Articles","previous_headings":"","what":"5 Visualise results","title":"Usage (Log10 Norm Inflow)","text":"Finally results QMRA can visualised system component shown :","code":""},{"path":"/articles/usage_log10_norm_inflow.html","id":"inflow","dir":"Articles","previous_headings":"5 Visualise results","what":"5.1 Inflow","title":"Usage (Log10 Norm Inflow)","text":"Simulated inflow concentrations","code":"kwb.qmra::plot_inflow(risk)"},{"path":"/articles/usage_log10_norm_inflow.html","id":"treatment","dir":"Articles","previous_headings":"5 Visualise results","what":"5.2 Treatment","title":"Usage (Log10 Norm Inflow)","text":"Simulated reductions treatment plant","code":"kwb.qmra::plot_reduction(risk)"},{"path":"/articles/usage_log10_norm_inflow.html","id":"effluent","dir":"Articles","previous_headings":"5 Visualise results","what":"5.3 Effluent","title":"Usage (Log10 Norm Inflow)","text":"Simulated effluent concentrations","code":"kwb.qmra::plot_effluent(risk)"},{"path":"/articles/usage_log10_norm_inflow.html","id":"exposure","dir":"Articles","previous_headings":"5 Visualise results","what":"5.4 Exposure","title":"Usage (Log10 Norm Inflow)","text":"Simulated dose per event Simulated ingested volume per event","code":"kwb.qmra::plot_event_dose(risk) kwb.qmra::plot_event_volume(risk)"},{"path":[]},{"path":"/articles/usage_log10_norm_inflow.html","id":"per-event","dir":"Articles","previous_headings":"5 Visualise results > 5.5 Health results","what":"5.5.1 Per event","title":"Usage (Log10 Norm Inflow)","text":"Simulated infection probability per event Simulated illness probability per event Simulated DALYs per event","code":"kwb.qmra::plot_event_infectionProb(risk) kwb.qmra::plot_event_illnessProb(risk) kwb.qmra::plot_event_dalys(risk)"},{"path":"/articles/usage_log10_norm_inflow.html","id":"total","dir":"Articles","previous_headings":"5 Visualise results > 5.5 Health results","what":"5.5.2 Total","title":"Usage (Log10 Norm Inflow)","text":"Simulated total infection probability (events) Simulated total illness probability (events Simulated total DALYs (events) addtion tables summary statistics, e.g. total risk can generated easily shown : Total risk (first repeat random generation)","code":"kwb.qmra::plot_total_infectionProb(risk) kwb.qmra::plot_total_illnessProb(risk) kwb.qmra::plot_total_dalys(risk)"},{"path":"/articles/usage_log10_norm_inflow.html","id":"export-results","dir":"Articles","previous_headings":"5 Visualise results","what":"6 Export results","title":"Usage (Log10 Norm Inflow)","text":"E.g. Write reports configurations package subfolder extdata/configs/ (: /Users/runner/work/_temp/Library/kwb.qmra/extdata/configs/):","code":"confDirs <- system.file(\"extdata/configs/\", package = \"kwb.qmra\") kwb.qmra::report_workflow(confDirs)"},{"path":[]},{"path":"/articles/usage_log10_uniform_inflow.html","id":"location-of-dummy-configuration","dir":"Articles","previous_headings":"1 Input data","what":"1.1 Location of ‘dummy’ configuration","title":"Usage (Log10 Uniform Inflow)","text":"folder csv configuration files hypothetical use case located : following screenshot shows required configuration files located confDir (: /Users/runner/work/_temp/Library/kwb.qmra/extdata/configs/dummy_log10_uniform): Screenshot required configuration files","code":"#### DEFINE DIRECTORY ################ confDir <- system.file(\"extdata/configs/dummy_log10_uniform\", package = \"kwb.qmra\") confDir ## [1] \"/Users/runner/work/_temp/Library/kwb.qmra/extdata/configs/dummy_log10_uniform\""},{"path":"/articles/usage_log10_uniform_inflow.html","id":"import-configuration-into-r","dir":"Articles","previous_headings":"1 Input data","what":"1.2 Import configuration into R","title":"Usage (Log10 Uniform Inflow)","text":"csv files input data hypothetical u dummy (shown ) imported R following function:","code":"#### LOAD ############################ config <- config_read(confDir)"},{"path":"/articles/usage_log10_uniform_inflow.html","id":"check-input-data","dir":"Articles","previous_headings":"","what":"2 Check input data","title":"Usage (Log10 Uniform Inflow)","text":"QMRA performed - case user modify R - based imported input data, defined configuration folder. case dummy configuration, Monte carlo simulation (n = 10) 365 exposure events per year three pathogens following input parameters performed: Simulated pathogens QMRA (defined : ‘inflow.csv’ simulated = 1): Inflow concentrations (defined : ‘inflow.csv’) pathogens used QMRA: Treatment schemes (defined : ‘treatment_schemes.csv’) used QMRA: Treatment processes (defined : ‘treatment_proecesses.csv’) assumed log-reductions used QMRA (, 2011): Ingested volume per event (defined : row 3 ‘volume_perEvent’ ‘exposure.csv’) (source: assumption)): Dose-response models (defined : ‘doseresponse.csv’) used QMRA (QMRAwiki): Health parameters (defined : ‘health.csv’) simulated pathogens (, 2011):","code":""},{"path":"/articles/usage_log10_uniform_inflow.html","id":"run-risk-calculation","dir":"Articles","previous_headings":"","what":"4 Run risk calculation","title":"Usage (Log10 Uniform Inflow)","text":"Subsequently risk calculation can performed R(Studio) executing following code, uses config imported inspected : (input & output) data saved resulting R object risk easily inspected user, e.g.: Input data Output data Thus user access ","code":"risk <- kwb.qmra::simulate_risk(config) ##  ## # STEP 0: BASIC CONFIGURATION ##  ## Simulated 3 pathogen(s): Campylobacter jejuni and Campylobacter coli, Rotavirus, Giardia duodenalis ## Number of random distribution repeatings: 10 ## Number of exposure events: 365 ##  ## # STEP 1: INFLOW ##  ## Simulated pathogen: Campylobacter jejuni and Campylobacter coli ## Create 10 random distribution(s): 10^runif (n: 365, min: 1.000000, max: 4.000000) ## Simulated pathogen: Rotavirus ## Create 10 random distribution(s): 10^runif (n: 365, min: 1.000000, max: 4.000000) ## Simulated pathogen: Giardia duodenalis ## Create 10 random distribution(s): 10^runif (n: 365, min: 1.000000, max: 4.000000) ## Providing inflow events ... ok. (0.00s)  ## Providing inflow paras ... ok. (0.00s)  ##  ## # STEP 2: TREATMENT SCHEMES ##  ## Create 10 random distribution(s): uniform (n: 365, min: 0.200000, max: 2.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 1.000000, max: 2.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.100000, max: 3.400000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.200000, max: 4.400000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.400000, max: 3.300000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.000000, max: 3.500000) ## Create 10 random distribution(s): uniform (n: 365, min: 2.000000, max: 6.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.300000, max: 5.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 0.250000, max: 4.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 2.000000, max: 6.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 1.000000, max: 2.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 2.100000, max: 8.300000) ## Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) ## Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) ## Simulated treatment: Conventional clarification for Bacteria ## Simulated treatment: Conventional clarification for Protozoa ## Simulated treatment: Conventional clarification for Viruses ## Simulated treatment: Granular high-rate filtration for Bacteria ## Simulated treatment: Granular high-rate filtration for Protozoa ## Simulated treatment: Granular high-rate filtration for Viruses ## Simulated treatment: Slow sand filtration for Bacteria ## Simulated treatment: Slow sand filtration for Protozoa ## Simulated treatment: Slow sand filtration for Viruses ## Simulated treatment: Bank filtration for Bacteria ## Simulated treatment: Bank filtration for Protozoa ## Simulated treatment: Bank filtration for Viruses ## Simulated treatment: UV for Bacteria ## Simulated treatment: UV for Protozoa ## Simulated treatment: UV for Viruses ## Simulated treatment: Conventional clarification for Bacteria ## Simulated treatment: Conventional clarification for Protozoa ## Simulated treatment: Conventional clarification for Viruses ## Simulated treatment: Granular high-rate filtration for Bacteria ## Simulated treatment: Granular high-rate filtration for Protozoa ## Simulated treatment: Granular high-rate filtration for Viruses ## Simulated treatment: Slow sand filtration for Bacteria ## Simulated treatment: Slow sand filtration for Protozoa ## Simulated treatment: Slow sand filtration for Viruses ## Simulated treatment: Bank filtration for Bacteria ## Simulated treatment: Bank filtration for Protozoa ## Simulated treatment: Bank filtration for Viruses ## Simulated treatment: UV for Bacteria ## Simulated treatment: UV for Protozoa ## Simulated treatment: UV for Viruses ## Joining, by = \"TreatmentID\" ## Joining, by = \"TreatmentID\" ##  ## # STEP 3: EXPOSURE ##  ## Simulated exposure: volume per event ## Create 10 random distribution(s): triangle (n: 365, min: 0.500000, max: 3.000000, mode = 1.500000) ## Joining, by = c(\"PathogenGroup\", \"eventID\", \"repeatID\") ## Joining, by = c(\"eventID\", \"repeatID\") ##  ## # STEP 4: DOSE RESPONSE ##  ## # A tibble: 3 × 13 ##   PathogenID PathogenName   PathogenGroup `Best fit mode…`       k  alpha    N50 ##        <dbl> <chr>          <chr>         <chr>              <dbl>  <dbl>  <dbl> ## 1          3 Campylobacter… Bacteria      beta-Poisson     NA       0.144 890    ## 2         32 Rotavirus      Viruses       beta-Poisson     NA       0.253   6.17 ## 3         36 Giardia duode… Protozoa      exponential       0.0199 NA      NA    ## # … with 6 more variables: `Host type` <chr>, `Dose units` <chr>, Route <chr>, ## #   Response <chr>, Reference <chr>, Link <chr> ##  ## # STEP 5: HEALTH ##  ## # A tibble: 3 × 4 ##   PathogenID PathogenName                        infection_to_il… dalys_per_case ##        <dbl> <chr>                                          <dbl>          <dbl> ## 1          3 Campylobacter jejuni and Campyloba…             0.7          0.0046 ## 2         32 Rotavirus                                       0.03         0.014  ## 3         36 Giardia duodenalis                              0.3          0.0015 ## Joining, by = c(\"PathogenID\", \"PathogenName\") str(risk$input, 1) ## List of 5 ##  $ inflow      :List of 1 ##  $ treatment   :List of 1 ##  $ exposure    :List of 1 ##  $ doseresponse:List of 1 ##  $ health      : tibble [3 × 4] (S3: tbl_df/tbl/data.frame) str(risk$output, 1) ## List of 4 ##  $ events          : tibble [54,750 × 20] (S3: tbl_df/tbl/data.frame) ##  $ total           : grouped_df [60 × 15] (S3: grouped_df/tbl_df/tbl/data.frame) ##   ..- attr(*, \"groups\")= tibble [60 × 6] (S3: tbl_df/tbl/data.frame) ##   .. ..- attr(*, \".drop\")= logi TRUE ##  $ stats_total     : grouped_df [54 × 14] (S3: grouped_df/tbl_df/tbl/data.frame) ##   ..- attr(*, \"groups\")= tibble [6 × 6] (S3: tbl_df/tbl/data.frame) ##   .. ..- attr(*, \".drop\")= logi TRUE ##  $ stats_logremoval: grouped_df [15 × 13] (S3: grouped_df/tbl_df/tbl/data.frame) ##   ..- attr(*, \"groups\")= tibble [5 × 5] (S3: tbl_df/tbl/data.frame) ##   .. ..- attr(*, \".drop\")= logi TRUE"},{"path":"/articles/usage_log10_uniform_inflow.html","id":"visualise-results","dir":"Articles","previous_headings":"","what":"5 Visualise results","title":"Usage (Log10 Uniform Inflow)","text":"Finally results QMRA can visualised system component shown :","code":""},{"path":"/articles/usage_log10_uniform_inflow.html","id":"inflow","dir":"Articles","previous_headings":"5 Visualise results","what":"5.1 Inflow","title":"Usage (Log10 Uniform Inflow)","text":"Simulated inflow concentrations","code":"kwb.qmra::plot_inflow(risk)"},{"path":"/articles/usage_log10_uniform_inflow.html","id":"treatment","dir":"Articles","previous_headings":"5 Visualise results","what":"5.2 Treatment","title":"Usage (Log10 Uniform Inflow)","text":"Simulated reductions treatment plant","code":"kwb.qmra::plot_reduction(risk)"},{"path":"/articles/usage_log10_uniform_inflow.html","id":"effluent","dir":"Articles","previous_headings":"5 Visualise results","what":"5.3 Effluent","title":"Usage (Log10 Uniform Inflow)","text":"Simulated effluent concentrations","code":"kwb.qmra::plot_effluent(risk)"},{"path":"/articles/usage_log10_uniform_inflow.html","id":"exposure","dir":"Articles","previous_headings":"5 Visualise results","what":"5.4 Exposure","title":"Usage (Log10 Uniform Inflow)","text":"Simulated dose per event Simulated ingested volume per event","code":"kwb.qmra::plot_event_dose(risk) kwb.qmra::plot_event_volume(risk)"},{"path":[]},{"path":"/articles/usage_log10_uniform_inflow.html","id":"per-event","dir":"Articles","previous_headings":"5 Visualise results > 5.5 Health results","what":"5.5.1 Per event","title":"Usage (Log10 Uniform Inflow)","text":"Simulated infection probability per event Simulated illness probability per event Simulated DALYs per event","code":"kwb.qmra::plot_event_infectionProb(risk) kwb.qmra::plot_event_illnessProb(risk) kwb.qmra::plot_event_dalys(risk)"},{"path":"/articles/usage_log10_uniform_inflow.html","id":"total","dir":"Articles","previous_headings":"5 Visualise results > 5.5 Health results","what":"5.5.2 Total","title":"Usage (Log10 Uniform Inflow)","text":"Simulated total infection probability (events) Simulated total illness probability (events Simulated total DALYs (events) addtion tables summary statistics, e.g. total risk can generated easily shown : Total risk (first repeat random generation)","code":"kwb.qmra::plot_total_infectionProb(risk) kwb.qmra::plot_total_illnessProb(risk) kwb.qmra::plot_total_dalys(risk)"},{"path":"/articles/usage_log10_uniform_inflow.html","id":"export-results","dir":"Articles","previous_headings":"5 Visualise results","what":"6 Export results","title":"Usage (Log10 Uniform Inflow)","text":"E.g. Write reports configurations package subfolder extdata/configs/ (: /Users/runner/work/_temp/Library/kwb.qmra/extdata/configs/):","code":"confDirs <- system.file(\"extdata/configs/\", package = \"kwb.qmra\") kwb.qmra::report_workflow(confDirs)"},{"path":"/articles/web_app.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Web-app development with OpenCpu","text":"developing web application, based R package kwb.qmra OpenCPU API can used. lot great features author Jeroen Ooms describes follows (Source): \"OpenCPU mature put test production many years now, private public organizations. system developed need reliable, scalable system embedding R used UCLA teaching R students, sometimes several classes (think classroom settings 100+ concurrent students). core implementation OpenCPU opencpu-server stack based systems native Apache2 webserver. opencpu-server stack packaged deb/rpm packages can installed box popular Linux systems. really provides super stable production ready system ---box. easily scale can configure server (want add auth, proxies, etc) via standard Apache configuration server. incredible amount time energy invested optimizing internals opencpu-server security, reliability performance. opencpu-server, incoming request gets processed temporary process fork serves sandbox controls memory/cpu limits, access control, timeouts, etc. critical ensure stability server get compromised users packages (accidentally) messing system using excessive resources. aware R server system . details OpenCPU available papers:\" Towards Universal Interface Scientific Computing Separation Concerns Enforcing Security Policies R Using Dynamic Sandboxing Linux kwb.qmra R package tiny example app (source code GitHub) developed uses OpenCPU framework. web app performs quantitative microbiological risk assessment (QMRA) dummy configuration can tested : https://kwb-r.ocpu.io/kwb.qmra/www/ advanced web-apps can easily developed using OpenCPU API probably need backend server hosts OpenCPU server, publically freely available OpenCPU server might limited.","code":""},{"path":"/articles/web_app.html","id":"run-risk-simulatation","dir":"Articles","previous_headings":"","what":"Run risk simulatation","title":"Web-app development with OpenCpu","text":"need provide input parameters kwb.qmra::opencpu_simulate_risk() required JSON data structure provided example data config_dummy.json (details see: kwb.qmra::config_dummy_json), needs converted R list data structure (see ) structure optimisation results stored JSON format R object predictions also saved. inspecting please open risk_dummy.json file. Real calculations performed using config_default.json configuration developed Christoph Sprenger (@chsprenger). However, due large size resulting risk_default.json object (~ 275MB) default example hosted GitHub (maximum single file size <100MB). Thus workflow limited dummy configuration !","code":"### Convert \"config.json\" to R list config <- jsonlite::fromJSON(\"config_dummy.json\")  ### Optionally directly import a configuration from CSV files ### for details see: https://github.com/KWB-R/kwb.qmra/tree/master/inst/extdata/configs # config_dir <- system.file(\"extdata/configs/dummy\", package = \"kwb.qmra\") # config <- kwb.qmra::config_read(confDir = config_dir)  # Run risk simulation risk_dummy <- kwb.qmra::opencpu_simulate_risk(config) #>  #> # STEP 0: BASIC CONFIGURATION #>  #> Simulated 3 pathogen(s): Campylobacter jejuni and Campylobacter coli, Rotavirus, Giardia duodenalis #> Number of random distribution repeatings: 10 #> Number of exposure events: 365 #>  #> # STEP 1: INFLOW #>  #> Simulated pathogen: Campylobacter jejuni and Campylobacter coli #> Create 10 random distribution(s): uniform (n: 365, min: 10.000000, max: 10000.000000) #> Warning in data.frame(..., check.names = FALSE): row names were found from a #> short variable and have been discarded #> Simulated pathogen: Rotavirus #> Create 10 random distribution(s): uniform (n: 365, min: 10.000000, max: 10000.000000) #> Warning in data.frame(..., check.names = FALSE): row names were found from a #> short variable and have been discarded #> Simulated pathogen: Giardia duodenalis #> Create 10 random distribution(s): uniform (n: 365, min: 10.000000, max: 10000.000000) #> Warning in data.frame(..., check.names = FALSE): row names were found from a #> short variable and have been discarded #> Providing inflow events ... ok. (0.00s)  #>  #> # STEP 2: TREATMENT SCHEMES #>  #> Create 10 random distribution(s): uniform (n: 365, min: 0.200000, max: 2.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 1.000000, max: 2.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.100000, max: 3.400000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.200000, max: 4.400000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.400000, max: 3.300000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.000000, max: 3.500000) #> Create 10 random distribution(s): uniform (n: 365, min: 2.000000, max: 6.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.300000, max: 5.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.250000, max: 4.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 2.000000, max: 6.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 1.000000, max: 2.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 2.100000, max: 8.300000) #> Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) #>  #> # STEP 3: EXPOSURE #>  #> Simulated exposure: volume per event #> Create 10 random distribution(s): triangle (n: 365, min: 0.500000, max: 3.000000, mode = 1.500000) #>  #> # STEP 4: DOSE RESPONSE #>  #>  #> # STEP 5: HEALTH risk_dummy_json <- jsonlite::toJSON(risk_dummy, pretty = TRUE)  # Save simulation results in JSON format writeLines(text = risk_dummy_json, \"risk_dummy.json\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Rustler. Author, maintainer. Hauke Sonnenberg. Author. Wolfgang Seis. Contributor, reviewer. Ralf Junghanns. Contributor. . Copyright holder. . Funder. . Funder. . Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rustler M, Sonnenberg H (2022). kwb.qmra: QMRA (quantitative microbial risk assessment). R package version 0.3.1, http://github.com/KWB-R/kwb.qmra/.","code":"@Manual{,   title = {kwb.qmra: QMRA (quantitative microbial risk assessment)},   author = {Michael Rustler and Hauke Sonnenberg},   year = {2022},   note = {R package version 0.3.1},   url = {http://github.com/KWB-R/kwb.qmra/}, }"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"QMRA (quantitative microbial risk assessment)","text":"installing latest release R package run following code :","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))    # Download and install kwb.qmra in R install.packages('kwb.qmra')  # Browse the kwb.qmra manual pages help(package = 'kwb.qmra')"},{"path":"/reference/backcalcHelper_infectionRisk_perDay.html","id":null,"dir":"Reference","previous_headings":"","what":"Backcalculate risk: infection (helper function) — backcalcHelper_infectionRisk_perDay","title":"Backcalculate risk: infection (helper function) — backcalcHelper_infectionRisk_perDay","text":"Backcalculate risk: infection (helper function)","code":""},{"path":"/reference/backcalcHelper_infectionRisk_perDay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backcalculate risk: infection (helper function) — backcalcHelper_infectionRisk_perDay","text":"","code":"backcalcHelper_infectionRisk_perDay(   infectionRisk_perDay,   exposure_daysPerYear,   target_infectionRisk_perYear = 1/10000 )"},{"path":"/reference/backcalcHelper_infectionRisk_perDay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backcalculate risk: infection (helper function) — backcalcHelper_infectionRisk_perDay","text":"infectionRisk_perDay default. set function backcalc_infectionRisk_perDay() exposure_daysPerYear exposure days per year target_infectionRisk_perYear target infection risk per per year (default: 1/10000)","code":""},{"path":"/reference/backcalcHelper_infectionRisk_perDay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backcalculate risk: infection (helper function) — backcalcHelper_infectionRisk_perDay","text":"absolute offset \"target_infectionRisk_perYear\"   \"infectionRisk_perYear\"","code":""},{"path":"/reference/backcalc_infectionRisk_perDay.html","id":null,"dir":"Reference","previous_headings":"","what":"Backcalculate risk: infection (using optimise() function) — backcalc_infectionRisk_perDay","title":"Backcalculate risk: infection (using optimise() function) — backcalc_infectionRisk_perDay","text":"Based exposure days per year target infection risk per year acceptable daily infection risk backcalculated","code":""},{"path":"/reference/backcalc_infectionRisk_perDay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backcalculate risk: infection (using optimise() function) — backcalc_infectionRisk_perDay","text":"","code":"backcalc_infectionRisk_perDay(   target_infectionRisk_perYear = 1/10000,   exposures_daysPerYear = 1:365 )"},{"path":"/reference/backcalc_infectionRisk_perDay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backcalculate risk: infection (using optimise() function) — backcalc_infectionRisk_perDay","text":"target_infectionRisk_perYear target infection risk per per year (default: 1/10000) exposures_daysPerYear exposure days per year (default: 1 365)","code":""},{"path":"/reference/backcalc_infectionRisk_perDay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backcalculate risk: infection (using optimise() function) — backcalc_infectionRisk_perDay","text":"acceptable daily infection risk given exposures per year   target infection risk per year","code":""},{"path":"/reference/calc_health_risk.html","id":null,"dir":"Reference","previous_headings":"","what":"Risk calculation: health — calc_health_risk","title":"Risk calculation: health — calc_health_risk","text":"Risk calculation: health","code":""},{"path":"/reference/calc_health_risk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Risk calculation: health — calc_health_risk","text":"","code":"calc_health_risk(   infectionRisk_perYear = 9.5 * 10^-4,   infection_to_illness = 0.7,   diseaseBurden_dalyPerCase = 1.5 * 10^-3,   fraction_population = 1,   target_dalyPerYearPerPerson = 1/1e+06 )"},{"path":"/reference/calc_health_risk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Risk calculation: health — calc_health_risk","text":"infectionRisk_perYear retrieved calc_infection_risk()$events$infectionRisk_perYear user defined input (default: 9.5 * 10 ^ - 4 infections/year) infection_to_illness probability illness given infection (default: 0.7, .e. 70 percent illness probability giving infection) diseaseBurden_dalyPerCase disabled adjusted life years per case. Value depends multiple parameters illness type (default: 1.5*10 ^ -3) fraction_population fraction population risk getting illness (default: 1, .e. 100 percent population can possibly get illness, worst-case assumption assuming prior immunization!) target_dalyPerYearPerPerson target disabled adjusted life years (DALY) per person per year (default: 1/1000000 DALY per per person per year, standard)","code":""},{"path":"/reference/calc_health_risk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Risk calculation: health — calc_health_risk","text":"data frame input parameters calculated health risk outputs","code":""},{"path":[]},{"path":"/reference/calc_infection_risk.html","id":null,"dir":"Reference","previous_headings":"","what":"Risk calculation: infection — calc_infection_risk","title":"Risk calculation: infection — calc_infection_risk","text":"Risk calculation: infection","code":""},{"path":"/reference/calc_infection_risk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Risk calculation: infection — calc_infection_risk","text":"","code":"calc_infection_risk(   inflow_orgPerLitre = 10,   treatment_logRemoval = 5.8,   exposure_daysPerYear = 365,   doseresponse_modelType = \"dr.expo\",   waterConsumption_LitrePerDay = 1,   target_infectionRisk_perYear = 1/10000,   ... )"},{"path":"/reference/calc_infection_risk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Risk calculation: infection — calc_infection_risk","text":"inflow_orgPerLitre concentration microbiological parameter inflow water treatment plant (default: 10 Org/L) treatment_logRemoval reduction microbiological concentration water treatment plant (default: 5.8 log) exposure_daysPerYear exposure days per year (default: 365) doseresponse_modelType dose response model used: \"dr.expo\" exponential \"dr.betapoisson\" beta-poisson model waterConsumption_LitrePerDay daily water consumption (default: 1 L/day) target_infectionRisk_perYear IMPLEMENTED YET!!!! target infection risk per per year. used one following input parameters (.e. \"inflow_orgPerLitre\", \"treatment_logRemoval\", \"exposure_daysPerYear\", \"waterConsumption_LitrePerDay\") defined (default: 1/10000). ... additional parameters used dose response modelling. Depends used dose-response model","code":""},{"path":"/reference/calc_infection_risk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Risk calculation: infection — calc_infection_risk","text":"list input parameters calculated infection risk","code":""},{"path":[]},{"path":"/reference/config_default_json.html","id":null,"dir":"Reference","previous_headings":"","what":"config_dummy_json: dummy configuration for kwb.qmra::opencpu_simulate_risk() in JSON format — config_default_json","title":"config_dummy_json: dummy configuration for kwb.qmra::opencpu_simulate_risk() in JSON format — config_default_json","text":"JSON input configuration generated R script (data-raw/config_json.R)","code":""},{"path":"/reference/config_default_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"config_dummy_json: dummy configuration for kwb.qmra::opencpu_simulate_risk() in JSON format — config_default_json","text":"","code":"data(config_dummy_json)"},{"path":"/reference/config_default_json.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"config_dummy_json: dummy configuration for kwb.qmra::opencpu_simulate_risk() in JSON format — config_default_json","text":"json list configuration parameters used opencpu_simulate_risk,  passed simulate_risk","code":""},{"path":"/reference/config_default_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"config_dummy_json: dummy configuration for kwb.qmra::opencpu_simulate_risk() in JSON format — config_default_json","text":"","code":"data(\"config_dummy_json\") config_dummy_json #> { #>   \"exposure\": [ #>     { #>       \"name\": \"number_of_repeatings\", #>       \"type\": \"value\", #>       \"value\": 10 #>     }, #>     { #>       \"name\": \"number_of_exposures\", #>       \"type\": \"value\", #>       \"value\": 365 #>     }, #>     { #>       \"name\": \"volume_perEvent\", #>       \"type\": \"triangle\", #>       \"min\": 0.5, #>       \"max\": 3, #>       \"mode\": 1.5, #>       \"mean\": 2 #>     } #>   ], #>   \"inflow\": [ #>     { #>       \"PathogenID\": 1, #>       \"PathogenName\": \"Bacillus anthracis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 2, #>       \"PathogenName\": \"Burkholderia pseudomallei\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 1, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 4, #>       \"PathogenName\": \"Coxiella burnetii\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 5, #>       \"PathogenName\": \"Escherichia coli enterohemorrhagic (EHEC)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 6, #>       \"PathogenName\": \"Escherichia coli\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 7, #>       \"PathogenName\": \"Francisella tularensis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 8, #>       \"PathogenName\": \"Legionella pneumophila\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 9, #>       \"PathogenName\": \"Listeria monocytogenes (Death as response)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 10, #>       \"PathogenName\": \"Listeria monocytogenes (Infection)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 11, #>       \"PathogenName\": \"Listeria monocytogenes (Stillbirths)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 12, #>       \"PathogenName\": \"Mycobacterium avium\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 13, #>       \"PathogenName\": \"Pseudomonas aeruginosa (Contact lens)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 14, #>       \"PathogenName\": \"Pseudomonas aeruginosa (bacterimia)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 15, #>       \"PathogenName\": \"Rickettsia rickettsi\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 16, #>       \"PathogenName\": \"Salmonella Typhi\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 17, #>       \"PathogenName\": \"Salmonella anatum\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 18, #>       \"PathogenName\": \"Salmonella meleagridis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 19, #>       \"PathogenName\": \"Salmonella nontyphoid\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 20, #>       \"PathogenName\": \"Salmonella serotype newport\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 21, #>       \"PathogenName\": \"Shigella\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 22, #>       \"PathogenName\": \"Staphylococcus aureus\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 23, #>       \"PathogenName\": \"Vibrio cholerae\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 24, #>       \"PathogenName\": \"Yersinia pestis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 25, #>       \"PathogenName\": \"Adenovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 26, #>       \"PathogenName\": \"Echovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 27, #>       \"PathogenName\": \"Enteroviruses\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 28, #>       \"PathogenName\": \"Influenza\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 29, #>       \"PathogenName\": \"Lassa virus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 30, #>       \"PathogenName\": \"Poliovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 31, #>       \"PathogenName\": \"Rhinovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 1, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 33, #>       \"PathogenName\": \"SARS\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 34, #>       \"PathogenName\": \"Cryptosporidium parvum and Cryptosporidium hominis\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 35, #>       \"PathogenName\": \"Endamoeba coli\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"simulate\": 1, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     }, #>     { #>       \"PathogenID\": 37, #>       \"PathogenName\": \"Naegleria fowleri\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"simulate\": 0, #>       \"type\": \"uniform\", #>       \"min\": 10, #>       \"max\": 10000 #>     } #>   ], #>   \"treatment\": { #>     \"processes\": [ #>       { #>         \"TreatmentID\": 1, #>         \"TreatmentName\": \"Conventional clarification\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0.2, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 1, #>         \"TreatmentName\": \"Conventional clarification\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 1, #>         \"TreatmentName\": \"Conventional clarification\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 0.1, #>         \"max\": 3.4 #>       }, #>       { #>         \"TreatmentID\": 2, #>         \"TreatmentName\": \"Dissolved air flotation\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0.6, #>         \"max\": 2.6 #>       }, #>       { #>         \"TreatmentID\": 3, #>         \"TreatmentName\": \"High-rate clarification\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2.8 #>       }, #>       { #>         \"TreatmentID\": 4, #>         \"TreatmentName\": \"Lime softening\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 4 #>       }, #>       { #>         \"TreatmentID\": 4, #>         \"TreatmentName\": \"Lime softening\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 4, #>         \"TreatmentName\": \"Lime softening\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 4 #>       }, #>       { #>         \"TreatmentID\": 5, #>         \"TreatmentName\": \"Granular high-rate filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0.2, #>         \"max\": 4.4 #>       }, #>       { #>         \"TreatmentID\": 5, #>         \"TreatmentName\": \"Granular high-rate filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0.4, #>         \"max\": 3.3 #>       }, #>       { #>         \"TreatmentID\": 5, #>         \"TreatmentName\": \"Granular high-rate filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 0, #>         \"max\": 3.5 #>       }, #>       { #>         \"TreatmentID\": 6, #>         \"TreatmentName\": \"Membrane filtration (micro, ultra-, nanofiltration, reverse osmosis)\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 7 #>       }, #>       { #>         \"TreatmentID\": 6, #>         \"TreatmentName\": \"Membrane filtration (micro, ultra-, nanofiltration, reverse osmosis)\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 2.3, #>         \"max\": 7 #>       }, #>       { #>         \"TreatmentID\": 6, #>         \"TreatmentName\": \"Membrane filtration (micro, ultra-, nanofiltration, reverse osmosis)\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 6.5 #>       }, #>       { #>         \"TreatmentID\": 7, #>         \"TreatmentName\": \"Precoat filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0.2, #>         \"max\": 2.3 #>       }, #>       { #>         \"TreatmentID\": 7, #>         \"TreatmentName\": \"Precoat filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 3, #>         \"max\": 6.7 #>       }, #>       { #>         \"TreatmentID\": 7, #>         \"TreatmentName\": \"Precoat filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 1.7 #>       }, #>       { #>         \"TreatmentID\": 8, #>         \"TreatmentName\": \"Slow sand filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 6 #>       }, #>       { #>         \"TreatmentID\": 8, #>         \"TreatmentName\": \"Slow sand filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0.3, #>         \"max\": 5 #>       }, #>       { #>         \"TreatmentID\": 8, #>         \"TreatmentName\": \"Slow sand filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 0.25, #>         \"max\": 4 #>       }, #>       { #>         \"TreatmentID\": 9, #>         \"TreatmentName\": \"Bank filtration\", #>         \"TreatmentGroup\": \"Pretreatment\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 6 #>       }, #>       { #>         \"TreatmentID\": 9, #>         \"TreatmentName\": \"Bank filtration\", #>         \"TreatmentGroup\": \"Pretreatment\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 9, #>         \"TreatmentName\": \"Bank filtration\", #>         \"TreatmentGroup\": \"Pretreatment\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2.1, #>         \"max\": 8.3 #>       }, #>       { #>         \"TreatmentID\": 10, #>         \"TreatmentName\": \"Roughing filters\", #>         \"TreatmentGroup\": \"Pretreatment\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0.2, #>         \"max\": 2.3 #>       }, #>       { #>         \"TreatmentID\": 11, #>         \"TreatmentName\": \"Storage reservoirs\", #>         \"TreatmentGroup\": \"Pretreatment\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0.7, #>         \"max\": 2.2 #>       }, #>       { #>         \"TreatmentID\": 11, #>         \"TreatmentName\": \"Storage reservoirs\", #>         \"TreatmentGroup\": \"Pretreatment\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 1.4, #>         \"max\": 2.3 #>       }, #>       { #>         \"TreatmentID\": 12, #>         \"TreatmentName\": \"Chlorine\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 12, #>         \"TreatmentName\": \"Chlorine\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 12, #>         \"TreatmentName\": \"Chlorine\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 13, #>         \"TreatmentName\": \"Chlorine dioxide\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 13, #>         \"TreatmentName\": \"Chlorine dioxide\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 13, #>         \"TreatmentName\": \"Chlorine dioxide\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 14, #>         \"TreatmentName\": \"Ozone\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 14, #>         \"TreatmentName\": \"Ozone\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 14, #>         \"TreatmentName\": \"Ozone\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2 #>       }, #>       { #>         \"TreatmentID\": 15, #>         \"TreatmentName\": \"UV\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 4, #>         \"max\": 4 #>       }, #>       { #>         \"TreatmentID\": 15, #>         \"TreatmentName\": \"UV\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 4, #>         \"max\": 4 #>       }, #>       { #>         \"TreatmentID\": 15, #>         \"TreatmentName\": \"UV\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 4, #>         \"max\": 4 #>       } #>     ], #>     \"schemes\": [ #>       { #>         \"TreatmentSchemeID\": 1, #>         \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>         \"TreatmentID\": 8, #>         \"TreatmentName\": \"Slow sand filtration\" #>       }, #>       { #>         \"TreatmentSchemeID\": 1, #>         \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>         \"TreatmentID\": 9, #>         \"TreatmentName\": \"Bank filtration\" #>       }, #>       { #>         \"TreatmentSchemeID\": 2, #>         \"TreatmentSchemeName\": \"Depth & surface filtration\", #>         \"TreatmentID\": 1, #>         \"TreatmentName\": \"Conventional clarification\" #>       }, #>       { #>         \"TreatmentSchemeID\": 2, #>         \"TreatmentSchemeName\": \"Depth & surface filtration\", #>         \"TreatmentID\": 5, #>         \"TreatmentName\": \"Granular high-rate filtration\" #>       }, #>       { #>         \"TreatmentSchemeID\": 2, #>         \"TreatmentSchemeName\": \"Depth & surface filtration\", #>         \"TreatmentID\": 15, #>         \"TreatmentName\": \"UV\" #>       } #>     ] #>   }, #>   \"doseresponse\": [ #>     { #>       \"PathogenID\": 1, #>       \"PathogenName\": \"Bacillus anthracis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0, #>       \"Host type\": \"guinea pig\", #>       \"Dose units\": \"spores\", #>       \"Route\": \"inhalation\", #>       \"Response\": \"death\", #>       \"Reference\": \"Druett 1953\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Bacillus_anthracis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 2, #>       \"PathogenName\": \"Burkholderia pseudomallei\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.328, #>       \"N50\": 5430, #>       \"Host type\": \"C57BL/6 mice and diabetic rat\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"intranasal,intraperitoneal\", #>       \"Response\": \"death\", #>       \"Reference\": \"Liu, Koo et al. 2002 and Brett and Woods 1996\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Burkholderia_pseudomallei:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.144, #>       \"N50\": 890, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral (in milk)\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Black et al 1988\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Campylobacter_jejuni_and_Campylobacter_coli:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 4, #>       \"PathogenName\": \"Coxiella burnetii\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.357, #>       \"N50\": 493000000, #>       \"Host type\": \"C57BL/1OScN mice\", #>       \"Dose units\": \"PFU\", #>       \"Route\": \"intraperitoneal\", #>       \"Response\": \"death\", #>       \"Reference\": \"Williams et al, 1982\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Coxiella_burnetii:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 5, #>       \"PathogenName\": \"Escherichia coli enterohemorrhagic (EHEC)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0002, #>       \"Host type\": \"pig\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral (in food)\", #>       \"Response\": \"shedding in feces\", #>       \"Reference\": \"Cornick & Helgerson (2004)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Escherichia_coli_enterohemorrhagic_(EHEC):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 6, #>       \"PathogenName\": \"Escherichia coli\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.155, #>       \"N50\": 2110000, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral (in milk)\", #>       \"Response\": \"positive stool isolation\", #>       \"Reference\": \"DuPont et al. (1971)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Escherichia_coli:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 7, #>       \"PathogenName\": \"Francisella tularensis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0473, #>       \"Host type\": \"monkeys\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"inhalation\", #>       \"Response\": \"death\", #>       \"Reference\": \"Day and Berendt, 1972\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Francisella_tularensis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 8, #>       \"PathogenName\": \"Legionella pneumophila\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0599, #>       \"Host type\": \"guinea pig\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"inhalation\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Muller et al. (1983)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Legionella_pneumophila:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 9, #>       \"PathogenName\": \"Listeria monocytogenes (Death as response)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0, #>       \"Host type\": \"C57B1/6J mice\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"death\", #>       \"Reference\": \"Golnazarian, Donnelly et al. 1989\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Listeria_monocytogenes_(Death_as_response):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 10, #>       \"PathogenName\": \"Listeria monocytogenes (Infection)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.253, #>       \"N50\": 277, #>       \"Host type\": \"C57Bl/6J mice\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Golnazarian\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Listeria_monocytogenes_(Infection):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 11, #>       \"PathogenName\": \"Listeria monocytogenes (Stillbirths)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.0422, #>       \"N50\": 1780000000, #>       \"Host type\": \"pooled\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"stillbirths\", #>       \"Reference\": \"Smith, Williams2007\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Listeria_monocytogenes_(Stillbirths):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 12, #>       \"PathogenName\": \"Mycobacterium avium\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0007, #>       \"Host type\": \"deer\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"O'Brien et al(1976)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Mycobacterium_avium:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 13, #>       \"PathogenName\": \"Pseudomonas aeruginosa (Contact lens)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.19, #>       \"N50\": 18500, #>       \"Host type\": \"white rabbit\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"contact lens\", #>       \"Response\": \"corneal ulceration\", #>       \"Reference\": \"Lawin-Brussel et al. (1993)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Pseudomonas_aeruginosa_(Contact_lens):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 14, #>       \"PathogenName\": \"Pseudomonas aeruginosa (bacterimia)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0001, #>       \"Host type\": \"Swiss webster mice (5day old)\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"injected in eyelids\", #>       \"Response\": \"death\", #>       \"Reference\": \"Hazlett, Rosen et al. 1978\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Pseudomonas_aeruginosa_(bacterimia):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 15, #>       \"PathogenName\": \"Rickettsia rickettsi\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.777, #>       \"N50\": 21.3, #>       \"Host type\": \"Pooled data\", #>       \"Dose units\": \"CFU\", #>       \"Response\": \"morbidity\", #>       \"Reference\": \"Saslaw and Carlisle 1966 and Dupont, Hornick et al. 1973\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Rickettsia_rickettsi:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 16, #>       \"PathogenName\": \"Salmonella Typhi\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.175, #>       \"N50\": 1110000, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral, in milk\", #>       \"Response\": \"disease\", #>       \"Reference\": \"Hornick et al. (1966),Hornick et al. (1970)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Salmonella_Typhi:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 17, #>       \"PathogenName\": \"Salmonella anatum\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.318, #>       \"N50\": 37100, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral, with eggnog\", #>       \"Response\": \"positive stool culture\", #>       \"Reference\": \"McCullough and Elsele,1951\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Salmonella_anatum:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 18, #>       \"PathogenName\": \"Salmonella meleagridis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.389, #>       \"N50\": 16800, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral, with eggnog\", #>       \"Response\": \"infection\", #>       \"Reference\": \"McCullough and Eisele 1951,2\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Salmonella_meleagridis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 19, #>       \"PathogenName\": \"Salmonella nontyphoid\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.21, #>       \"N50\": 49.8, #>       \"Host type\": \"mice\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"intraperitoneal\", #>       \"Response\": \"death\", #>       \"Reference\": \"Meynell and Meynell,1958\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Salmonella_nontyphoid:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 20, #>       \"PathogenName\": \"Salmonella serotype newport\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 3.97e-06, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"McCullough and Elsele,1951\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Salmonella_serotype_newport:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 21, #>       \"PathogenName\": \"Shigella\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.265, #>       \"N50\": 1480, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral (in milk)\", #>       \"Response\": \"positive stool isolation\", #>       \"Reference\": \"DuPont et al. (1972b)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Shigella:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 22, #>       \"PathogenName\": \"Staphylococcus aureus\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 7.64e-08, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU/cm2\", #>       \"Route\": \"subcutaneous\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Rose and Haas 1999\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Staphylococcus_aureus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 23, #>       \"PathogenName\": \"Vibrio cholerae\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.25, #>       \"N50\": 243, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral (with NaHCO3)\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Hornick et al., (1971)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Vibrio_cholerae:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 24, #>       \"PathogenName\": \"Yersinia pestis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0016, #>       \"Host type\": \"mice\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"intranasal\", #>       \"Response\": \"death\", #>       \"Reference\": \"Lathem et al. 2005\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Yersinia_pestis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 25, #>       \"PathogenName\": \"Adenovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.607, #>       \"Host type\": \"human\", #>       \"Dose units\": \"TCID50\", #>       \"Route\": \"inhalation\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Couch, Cate et al. 1966\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Adenovirus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 26, #>       \"PathogenName\": \"Echovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 1.06, #>       \"N50\": 922, #>       \"Host type\": \"human\", #>       \"Dose units\": \"PFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Schiff et al.,1984\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Echovirus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 27, #>       \"PathogenName\": \"Enteroviruses\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0037, #>       \"Host type\": \"pig\", #>       \"Dose units\": \"PFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Cliver, 1981\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Enteroviruses:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 28, #>       \"PathogenName\": \"Influenza\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.581, #>       \"N50\": 945000, #>       \"Host type\": \"human\", #>       \"Dose units\": \"TCID50\", #>       \"Route\": \"intranasal\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Murphy et al., 1984 & Murphy et al., 1985\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Influenza:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 29, #>       \"PathogenName\": \"Lassa virus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 2.95, #>       \"Host type\": \"guinea pig\", #>       \"Dose units\": \"PFU\", #>       \"Route\": \"subcutaneous\", #>       \"Response\": \"death\", #>       \"Reference\": \"Jahrling et al., 1982\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Lassa_virus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 30, #>       \"PathogenName\": \"Poliovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.491, #>       \"Host type\": \"human\", #>       \"Dose units\": \"PD50 (mouse paralytic doses)\", #>       \"Route\": \"oral (capsule)\", #>       \"Response\": \"alimentary infection\", #>       \"Reference\": \"Koprowski\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Poliovirus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 31, #>       \"PathogenName\": \"Rhinovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.221, #>       \"N50\": 1.81, #>       \"Host type\": \"human\", #>       \"Dose units\": \"TCID50 doses\", #>       \"Route\": \"intranasal\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Hendley et al., 1972\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Rhinovirus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.253, #>       \"N50\": 6.17, #>       \"Host type\": \"human\", #>       \"Dose units\": \"FFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Ward et al, 1986\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Rotavirus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 33, #>       \"PathogenName\": \"SARS\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0025, #>       \"Host type\": \"mice hACE-2 and A/J\", #>       \"Dose units\": \"PFU\", #>       \"Route\": \"intranasal\", #>       \"Response\": \"death\", #>       \"Reference\": \"DeDiego et al., 2008 &  De Albuquerque et al., 2006\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/SARS:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 34, #>       \"PathogenName\": \"Cryptosporidium parvum and Cryptosporidium hominis\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0572, #>       \"Host type\": \"human\", #>       \"Dose units\": \"oocysts\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Messner et al. 2001\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Cryptosporidium_parvum_and_Cryptosporidium_hominis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 35, #>       \"PathogenName\": \"Endamoeba coli\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.101, #>       \"N50\": 341, #>       \"Host type\": \"human\", #>       \"Dose units\": \"Cysts\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Rendtorff 1954\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Endamoeba_coli:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0199, #>       \"Host type\": \"human\", #>       \"Dose units\": \"Cysts\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Rendtorff 1954\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Giardia_duodenalis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 37, #>       \"PathogenName\": \"Naegleria fowleri\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 3.42e-07, #>       \"Host type\": \"mice\", #>       \"Dose units\": \"no of trophozoites\", #>       \"Route\": \"intravenous\", #>       \"Response\": \"death\", #>       \"Reference\": \"Adams et al. 1976 & Haggerty and John 1978\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Naegleria_fowleri:_Dose_Response_Models\" #>     } #>   ], #>   \"health\": [ #>     { #>       \"PathogenID\": 1, #>       \"PathogenName\": \"Bacillus anthracis\" #>     }, #>     { #>       \"PathogenID\": 2, #>       \"PathogenName\": \"Burkholderia pseudomallei\" #>     }, #>     { #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"infection_to_illness\": 0.7, #>       \"dalys_per_case\": 0.0046 #>     }, #>     { #>       \"PathogenID\": 4, #>       \"PathogenName\": \"Coxiella burnetii\" #>     }, #>     { #>       \"PathogenID\": 5, #>       \"PathogenName\": \"Escherichia coli enterohemorrhagic (EHEC)\" #>     }, #>     { #>       \"PathogenID\": 6, #>       \"PathogenName\": \"Escherichia coli\" #>     }, #>     { #>       \"PathogenID\": 7, #>       \"PathogenName\": \"Francisella tularensis\" #>     }, #>     { #>       \"PathogenID\": 8, #>       \"PathogenName\": \"Legionella pneumophila\" #>     }, #>     { #>       \"PathogenID\": 9, #>       \"PathogenName\": \"Listeria monocytogenes (Death as response)\" #>     }, #>     { #>       \"PathogenID\": 10, #>       \"PathogenName\": \"Listeria monocytogenes (Infection)\" #>     }, #>     { #>       \"PathogenID\": 11, #>       \"PathogenName\": \"Listeria monocytogenes (Stillbirths)\" #>     }, #>     { #>       \"PathogenID\": 12, #>       \"PathogenName\": \"Mycobacterium avium\" #>     }, #>     { #>       \"PathogenID\": 13, #>       \"PathogenName\": \"Pseudomonas aeruginosa (Contact lens)\" #>     }, #>     { #>       \"PathogenID\": 14, #>       \"PathogenName\": \"Pseudomonas aeruginosa (bacterimia)\" #>     }, #>     { #>       \"PathogenID\": 15, #>       \"PathogenName\": \"Rickettsia rickettsi\" #>     }, #>     { #>       \"PathogenID\": 16, #>       \"PathogenName\": \"Salmonella Typhi\" #>     }, #>     { #>       \"PathogenID\": 17, #>       \"PathogenName\": \"Salmonella anatum\" #>     }, #>     { #>       \"PathogenID\": 18, #>       \"PathogenName\": \"Salmonella meleagridis\" #>     }, #>     { #>       \"PathogenID\": 19, #>       \"PathogenName\": \"Salmonella nontyphoid\" #>     }, #>     { #>       \"PathogenID\": 20, #>       \"PathogenName\": \"Salmonella serotype newport\" #>     }, #>     { #>       \"PathogenID\": 21, #>       \"PathogenName\": \"Shigella\" #>     }, #>     { #>       \"PathogenID\": 22, #>       \"PathogenName\": \"Staphylococcus aureus\" #>     }, #>     { #>       \"PathogenID\": 23, #>       \"PathogenName\": \"Vibrio cholerae\" #>     }, #>     { #>       \"PathogenID\": 24, #>       \"PathogenName\": \"Yersinia pestis\" #>     }, #>     { #>       \"PathogenID\": 25, #>       \"PathogenName\": \"Adenovirus\" #>     }, #>     { #>       \"PathogenID\": 26, #>       \"PathogenName\": \"Echovirus\" #>     }, #>     { #>       \"PathogenID\": 27, #>       \"PathogenName\": \"Enteroviruses\" #>     }, #>     { #>       \"PathogenID\": 28, #>       \"PathogenName\": \"Influenza\" #>     }, #>     { #>       \"PathogenID\": 29, #>       \"PathogenName\": \"Lassa virus\" #>     }, #>     { #>       \"PathogenID\": 30, #>       \"PathogenName\": \"Poliovirus\" #>     }, #>     { #>       \"PathogenID\": 31, #>       \"PathogenName\": \"Rhinovirus\" #>     }, #>     { #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"infection_to_illness\": 0.03, #>       \"dalys_per_case\": 0.014 #>     }, #>     { #>       \"PathogenID\": 33, #>       \"PathogenName\": \"SARS\" #>     }, #>     { #>       \"PathogenID\": 34, #>       \"PathogenName\": \"Cryptosporidium parvum and Cryptosporidium hominis\" #>     }, #>     { #>       \"PathogenID\": 35, #>       \"PathogenName\": \"Endamoeba coli\" #>     }, #>     { #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"infection_to_illness\": 0.3, #>       \"dalys_per_case\": 0.0015 #>     }, #>     { #>       \"PathogenID\": 37, #>       \"PathogenName\": \"Naegleria fowleri\" #>     } #>   ] #> }"},{"path":"/reference/config_dummy_json.html","id":null,"dir":"Reference","previous_headings":"","what":"config_default_json: default configuration developed by Christoph Sprenger \nfor kwb.qmra::opencpu_simulate_risk() in JSON format — config_dummy_json","title":"config_default_json: default configuration developed by Christoph Sprenger \nfor kwb.qmra::opencpu_simulate_risk() in JSON format — config_dummy_json","text":"JSON input configuration generated R script (data-raw/config_json.R)","code":""},{"path":"/reference/config_dummy_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"config_default_json: default configuration developed by Christoph Sprenger \nfor kwb.qmra::opencpu_simulate_risk() in JSON format — config_dummy_json","text":"","code":"data(config_default_json)"},{"path":"/reference/config_dummy_json.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"config_default_json: default configuration developed by Christoph Sprenger \nfor kwb.qmra::opencpu_simulate_risk() in JSON format — config_dummy_json","text":"json list configuration parameters used opencpu_simulate_risk,  passed simulate_risk","code":""},{"path":"/reference/config_dummy_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"config_default_json: default configuration developed by Christoph Sprenger \nfor kwb.qmra::opencpu_simulate_risk() in JSON format — config_dummy_json","text":"","code":"data(\"config_default_json\") config_default_json #> { #>   \"exposure\": [ #>     { #>       \"name\": \"number_of_repeatings\", #>       \"type\": \"value\", #>       \"value\": 1000 #>     }, #>     { #>       \"name\": \"number_of_exposures\", #>       \"type\": \"value\", #>       \"value\": 100 #>     }, #>     { #>       \"name\": \"volume_perEvent\", #>       \"type\": \"triangle\", #>       \"min\": 0.001, #>       \"max\": 0.01, #>       \"mode\": 0.005 #>     } #>   ], #>   \"inflow\": [ #>     { #>       \"PathogenID\": 1, #>       \"PathogenName\": \"Bacillus anthracis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 2, #>       \"PathogenName\": \"Burkholderia pseudomallei\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 100, #>       \"max\": 1000000, #>       \"Notes\": \"Raw wastewater Campylobacter spp.\", #>       \"ReferenceName\": \"WHO (2011): Guidelines for drinking-water quality. World Health Organisation, Table 7.6\", #>       \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=159\" #>     }, #>     { #>       \"PathogenID\": 4, #>       \"PathogenName\": \"Coxiella burnetii\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 5, #>       \"PathogenName\": \"Escherichia coli enterohemorrhagic (EHEC)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 6, #>       \"PathogenName\": \"Escherichia coli\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 1, #>       \"type\": \"log10_norm\", #>       \"min\": 170000, #>       \"max\": 1700000000, #>       \"Notes\": \"Raw wastewater 17% pathogenic fraction\", #>       \"ReferenceName\": \"WHO (2011): Guidelines for drinking-water quality. World Health Organisation, Table 7.6, Grant et al. (1996)\", #>       \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=159, https://doi.org/10.1128/AEM.62.9.3466-3469.1996\" #>     }, #>     { #>       \"PathogenID\": 7, #>       \"PathogenName\": \"Francisella tularensis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 8, #>       \"PathogenName\": \"Legionella pneumophila\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 9, #>       \"PathogenName\": \"Listeria monocytogenes (Death as response)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 10, #>       \"PathogenName\": \"Listeria monocytogenes (Infection)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 11, #>       \"PathogenName\": \"Listeria monocytogenes (Stillbirths)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 12, #>       \"PathogenName\": \"Mycobacterium avium\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 13, #>       \"PathogenName\": \"Pseudomonas aeruginosa (Contact lens)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 14, #>       \"PathogenName\": \"Pseudomonas aeruginosa (bacterimia)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 15, #>       \"PathogenName\": \"Rickettsia rickettsi\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 16, #>       \"PathogenName\": \"Salmonella Typhi\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 17, #>       \"PathogenName\": \"Salmonella anatum\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 18, #>       \"PathogenName\": \"Salmonella meleagridis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 19, #>       \"PathogenName\": \"Salmonella nontyphoid\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 20, #>       \"PathogenName\": \"Salmonella serotype newport\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 21, #>       \"PathogenName\": \"Shigella\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 22, #>       \"PathogenName\": \"Staphylococcus aureus\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 23, #>       \"PathogenName\": \"Vibrio cholerae\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 100, #>       \"max\": 1000000, #>       \"Notes\": \"Raw wastewater\", #>       \"ReferenceName\": \"WHO (2011): Guidelines for drinking-water quality. World Health Organisation, Table 7.6\", #>       \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=159\" #>     }, #>     { #>       \"PathogenID\": 24, #>       \"PathogenName\": \"Yersinia pestis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 25, #>       \"PathogenName\": \"Adenovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 26, #>       \"PathogenName\": \"Echovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 27, #>       \"PathogenName\": \"Enteroviruses\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 1, #>       \"max\": 1000, #>       \"Notes\": \"Raw wastewater\", #>       \"ReferenceName\": \"WHO (2011): Guidelines for drinking-water quality. World Health Organisation, Table 7.6\", #>       \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=159\" #>     }, #>     { #>       \"PathogenID\": 28, #>       \"PathogenName\": \"Influenza\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 29, #>       \"PathogenName\": \"Lassa virus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 30, #>       \"PathogenName\": \"Poliovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 31, #>       \"PathogenName\": \"Rhinovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 1, #>       \"type\": \"log10_norm\", #>       \"min\": 50, #>       \"max\": 5000, #>       \"Notes\": \"Raw wastewater\", #>       \"ReferenceName\": \"WHO (2011): Guidelines for drinking-water quality. World Health Organisation, Table 7.6\", #>       \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=159\" #>     }, #>     { #>       \"PathogenID\": 33, #>       \"PathogenName\": \"SARS\", #>       \"PathogenGroup\": \"Viruses\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 34, #>       \"PathogenName\": \"Cryptosporidium parvum and Cryptosporidium hominis\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 1, #>       \"max\": 10000, #>       \"sdlog\": \"NA\\\"Raw wastewater\\\"\", #>       \"Notes\": \"WHO (2011): Guidelines for drinking-water quality. World Health Organisation, Table 7.6\", #>       \"ReferenceName\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=159\" #>     }, #>     { #>       \"PathogenID\": 35, #>       \"PathogenName\": \"Endamoeba coli\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     }, #>     { #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"simulate\": 1, #>       \"type\": \"log10_norm\", #>       \"min\": 1, #>       \"max\": 10000, #>       \"Notes\": \"Raw wastewater\", #>       \"ReferenceName\": \"WHO (2011): Guidelines for drinking-water quality. World Health Organisation, Table 7.6\", #>       \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=159\" #>     }, #>     { #>       \"PathogenID\": 37, #>       \"PathogenName\": \"Naegleria fowleri\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"simulate\": 0, #>       \"type\": \"log10_norm\", #>       \"min\": 10, #>       \"max\": 10000, #>       \"Notes\": \"default\" #>     } #>   ], #>   \"treatment\": { #>     \"processes\": [ #>       { #>         \"TreatmentID\": 1, #>         \"TreatmentName\": \"Conventional clarification\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0.2, #>         \"max\": 2, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 1, #>         \"TreatmentName\": \"Conventional clarification\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 2, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 1, #>         \"TreatmentName\": \"Conventional clarification\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 0.1, #>         \"max\": 3.4, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 2, #>         \"TreatmentName\": \"Dissolved air flotation\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0.6, #>         \"max\": 2.6, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 3, #>         \"TreatmentName\": \"High-rate clarification\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2.8, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 4, #>         \"TreatmentName\": \"Lime softening\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 4, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 4, #>         \"TreatmentName\": \"Lime softening\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0, #>         \"max\": 2, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 4, #>         \"TreatmentName\": \"Lime softening\", #>         \"TreatmentGroup\": \"Coagulation, flocculation and sedimentation\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 4, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 5, #>         \"TreatmentName\": \"Granular high-rate filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0.2, #>         \"max\": 4.4, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 5, #>         \"TreatmentName\": \"Granular high-rate filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0.4, #>         \"max\": 3.3, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 5, #>         \"TreatmentName\": \"Granular high-rate filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 0, #>         \"max\": 3.5, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 7, #>         \"TreatmentName\": \"Precoat filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0.2, #>         \"max\": 2.3, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 7, #>         \"TreatmentName\": \"Precoat filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 3, #>         \"max\": 6.7, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 7, #>         \"TreatmentName\": \"Precoat filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 1.7, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 8, #>         \"TreatmentName\": \"Slow sand filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 6, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 8, #>         \"TreatmentName\": \"Slow sand filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0.3, #>         \"max\": 5, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 8, #>         \"TreatmentName\": \"Slow sand filtration\", #>         \"TreatmentGroup\": \"Filtration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 0.25, #>         \"max\": 4, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 9, #>         \"TreatmentName\": \"Bank filtration\", #>         \"TreatmentGroup\": \"Natural attenuation\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 6, #>         \"mean\": 4, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 9, #>         \"TreatmentName\": \"Bank filtration\", #>         \"TreatmentGroup\": \"Natural attenuation\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 2, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 9, #>         \"TreatmentName\": \"Bank filtration\", #>         \"TreatmentGroup\": \"Natural attenuation\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2.1, #>         \"max\": 8.3, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 10, #>         \"TreatmentName\": \"Roughing filters\", #>         \"TreatmentGroup\": \"Pretreatment\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0.2, #>         \"max\": 2.3, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 11, #>         \"TreatmentName\": \"Storage reservoirs\", #>         \"TreatmentGroup\": \"Pretreatment\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0.7, #>         \"max\": 2.2, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 11, #>         \"TreatmentName\": \"Storage reservoirs\", #>         \"TreatmentGroup\": \"Pretreatment\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 1.4, #>         \"max\": 2.3, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 12, #>         \"TreatmentName\": \"Chlorine\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 12, #>         \"TreatmentName\": \"Chlorine\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 12, #>         \"TreatmentName\": \"Chlorine\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 13, #>         \"TreatmentName\": \"Chlorine dioxide\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 6, #>         \"ReferenceName\": \"NRMMC-EPHC-AHMC (2006)\", #>         \"ReferenceLink\": \"Australian Guidelines for Water Recycling: Managing Health and Environmental Risks (Phase 1) Natural Resource Ministerial Management Council, Environment Protection and Heritage Council and National Health and Medical Research Council, Canberra\" #>       }, #>       { #>         \"TreatmentID\": 13, #>         \"TreatmentName\": \"Chlorine dioxide\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0.5, #>         \"max\": 1.5, #>         \"ReferenceName\": \"NRMMC-EPHC-AHMC (2006)\", #>         \"ReferenceLink\": \"Australian Guidelines for Water Recycling: Managing Health and Environmental Risks (Phase 1) Natural Resource Ministerial Management Council, Environment Protection and Heritage Council and National Health and Medical Research Council, Canberra\" #>       }, #>       { #>         \"TreatmentID\": 13, #>         \"TreatmentName\": \"Chlorine dioxide\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 3, #>         \"ReferenceName\": \"NRMMC-EPHC-AHMC (2006)\", #>         \"ReferenceLink\": \"Australian Guidelines for Water Recycling: Managing Health and Environmental Risks (Phase 1) Natural Resource Ministerial Management Council, Environment Protection and Heritage Council and National Health and Medical Research Council, Canberra\" #>       }, #>       { #>         \"TreatmentID\": 14, #>         \"TreatmentName\": \"Ozone\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 14, #>         \"TreatmentName\": \"Ozone\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 14, #>         \"TreatmentName\": \"Ozone\", #>         \"TreatmentGroup\": \"Primary disinfection\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 2, #>         \"ReferenceName\": \"WHO (2011): Drinking water guideline, Table 7.7\", #>         \"ReferenceLink\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=162\" #>       }, #>       { #>         \"TreatmentID\": 15, #>         \"TreatmentName\": \"Primary disinfection\", #>         \"TreatmentGroup\": \"UV disinfection, wastewater\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"unifor\", #>         \"value\": 2, #>         \"min\": 4, #>         \"sdlog\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceName\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 15, #>         \"TreatmentName\": \"Primary disinfection\", #>         \"TreatmentGroup\": \"UV disinfection, wastewater\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"value\": 1, #>         \"min\": 3, #>         \"sdlog\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceName\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 15, #>         \"TreatmentName\": \"Primary disinfection\", #>         \"TreatmentGroup\": \"UV disinfection, wastewater\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"value\": 3, #>         \"min\": 3, #>         \"sdlog\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceName\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 16, #>         \"TreatmentName\": \"Primary treatment\", #>         \"TreatmentGroup\": \"Quiescent basin\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0, #>         \"max\": 0.5, #>         \"ReferenceName\": \"NRMMC-EPHC-AHMC (2006)\", #>         \"ReferenceLink\": \"Australian Guidelines for Water Recycling: Managing Health and Environmental Risks (Phase 1) Natural Resource Ministerial Management Council, Environment Protection and Heritage Council and National Health and Medical Research Council, Canberra\" #>       }, #>       { #>         \"TreatmentID\": 16, #>         \"TreatmentName\": \"Primary treatment\", #>         \"TreatmentGroup\": \"Quiescent basin\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0.5, #>         \"max\": 1, #>         \"ReferenceName\": \"NRMMC-EPHC-AHMC (2006)\", #>         \"ReferenceLink\": \"Australian Guidelines for Water Recycling: Managing Health and Environmental Risks (Phase 1) Natural Resource Ministerial Management Council, Environment Protection and Heritage Council and National Health and Medical Research Council, Canberra\" #>       }, #>       { #>         \"TreatmentID\": 16, #>         \"TreatmentName\": \"Primary treatment\", #>         \"TreatmentGroup\": \"Quiescent basin\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 0, #>         \"max\": 0.1, #>         \"ReferenceName\": \"NRMMC-EPHC-AHMC (2006)\", #>         \"ReferenceLink\": \"Australian Guidelines for Water Recycling: Managing Health and Environmental Risks (Phase 1) Natural Resource Ministerial Management Council, Environment Protection and Heritage Council and National Health and Medical Research Council, Canberra\" #>       }, #>       { #>         \"TreatmentID\": 17, #>         \"TreatmentName\": \"Secondary treatment\", #>         \"TreatmentGroup\": \"Activated sludge\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 3, #>         \"ReferenceName\": \"NRMMC-EPHC-AHMC (2006)\", #>         \"ReferenceLink\": \"Australian Guidelines for Water Recycling: Managing Health and Environmental Risks (Phase 1) Natural Resource Ministerial Management Council, Environment Protection and Heritage Council and National Health and Medical Research Council, Canberra\" #>       }, #>       { #>         \"TreatmentID\": 17, #>         \"TreatmentName\": \"Secondary treatment\", #>         \"TreatmentGroup\": \"Activated sludge\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0.5, #>         \"max\": 1.5, #>         \"ReferenceName\": \"NRMMC-EPHC-AHMC (2006)\", #>         \"ReferenceLink\": \"Australian Guidelines for Water Recycling: Managing Health and Environmental Risks (Phase 1) Natural Resource Ministerial Management Council, Environment Protection and Heritage Council and National Health and Medical Research Council, Canberra\" #>       }, #>       { #>         \"TreatmentID\": 17, #>         \"TreatmentName\": \"Secondary treatment\", #>         \"TreatmentGroup\": \"Activated sludge\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 0.5, #>         \"max\": 2, #>         \"ReferenceName\": \"NRMMC-EPHC-AHMC (2006)\", #>         \"ReferenceLink\": \"Australian Guidelines for Water Recycling: Managing Health and Environmental Risks (Phase 1) Natural Resource Ministerial Management Council, Environment Protection and Heritage Council and National Health and Medical Research Council, Canberra\" #>       }, #>       { #>         \"TreatmentID\": 18, #>         \"TreatmentName\": \"Soil-Aquifer passage\", #>         \"TreatmentGroup\": \"Natural attenuation\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 1, #>         \"ReferenceName\": \"Sharma and Kennedy (2016)\", #>         \"ReferenceLink\": \"https://10.1016/j.ibiod.2016.09.013\" #>       }, #>       { #>         \"TreatmentID\": 18, #>         \"TreatmentName\": \"Soil-Aquifer passage\", #>         \"TreatmentGroup\": \"Natural attenuation\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 1, #>         \"ReferenceName\": \"Sharma and Kennedy (2016)\", #>         \"ReferenceLink\": \"https://10.1016/j.ibiod.2016.09.013\" #>       }, #>       { #>         \"TreatmentID\": 18, #>         \"TreatmentName\": \"Soil-Aquifer passage\", #>         \"TreatmentGroup\": \"Natural attenuation\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 1, #>         \"max\": 1, #>         \"ReferenceName\": \"Sharma and Kennedy (2016)\", #>         \"ReferenceLink\": \"https://10.1016/j.ibiod.2016.09.013\" #>       }, #>       { #>         \"TreatmentID\": 19, #>         \"TreatmentName\": \"Primary disinfection\", #>         \"TreatmentGroup\": \"UV disinfection 20 mJ/cm2, drinking\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 4.6, #>         \"max\": 6, #>         \"ReferenceName\": \"Hijnen et al. (2006)\", #>         \"ReferenceLink\": \"https://doi.org/10.1016/j.watres.2005.10.030\" #>       }, #>       { #>         \"TreatmentID\": 19, #>         \"TreatmentName\": \"Primary disinfection\", #>         \"TreatmentGroup\": \"UV disinfection 20 mJ/cm2, drinking\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2, #>         \"max\": 3.1, #>         \"ReferenceName\": \"Hijnen et al. (2006)\", #>         \"ReferenceLink\": \"https://doi.org/10.1016/j.watres.2005.10.030\" #>       }, #>       { #>         \"TreatmentID\": 19, #>         \"TreatmentName\": \"Primary disinfection\", #>         \"TreatmentGroup\": \"UV disinfection 20 mJ/cm2, drinking\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 2.4, #>         \"max\": 3, #>         \"ReferenceName\": \"Hijnen et al. (2006)\", #>         \"ReferenceLink\": \"https://doi.org/10.1016/j.watres.2005.10.030\" #>       }, #>       { #>         \"TreatmentID\": 20, #>         \"TreatmentName\": \"Primary disinfection\", #>         \"TreatmentGroup\": \"UV disinfection 40 mJ/cm2, drinking\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 4.6, #>         \"max\": 6, #>         \"ReferenceName\": \"Hijnen et al. (2006)\", #>         \"ReferenceLink\": \"https://doi.org/10.1016/j.watres.2005.10.030\" #>       }, #>       { #>         \"TreatmentID\": 20, #>         \"TreatmentName\": \"Primary disinfection\", #>         \"TreatmentGroup\": \"UV disinfection 40 mJ/cm2, drinking\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 4.1, #>         \"max\": 5.9, #>         \"ReferenceName\": \"Hijnen et al. (2006)\", #>         \"ReferenceLink\": \"https://doi.org/10.1016/j.watres.2005.10.030\" #>       }, #>       { #>         \"TreatmentID\": 20, #>         \"TreatmentName\": \"Primary disinfection\", #>         \"TreatmentGroup\": \"UV disinfection 40 mJ/cm2, drinking\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 2.5, #>         \"max\": 3, #>         \"ReferenceName\": \"Hijnen et al. (2006)\", #>         \"ReferenceLink\": \"https://doi.org/10.1016/j.watres.2005.10.030\" #>       }, #>       { #>         \"TreatmentID\": 21, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Microfiltration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0, #>         \"max\": 4.3, #>         \"ReferenceName\": \"MICRORISK final report chapter 4 Table 4.11\", #>         \"ReferenceLink\": \"https://www.kwrwater.nl/wp-content/uploads/2016/09/MICRORISK-FINAL-REPORT-Quantitative-microbial-risk-assessment-in-the-Water-Safety-Plan.pdf\" #>       }, #>       { #>         \"TreatmentID\": 21, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Microfiltration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 0, #>         \"max\": 3.7, #>         \"ReferenceName\": \"MICRORISK final report chapter 4 Table 4.11\", #>         \"ReferenceLink\": \"https://www.kwrwater.nl/wp-content/uploads/2016/09/MICRORISK-FINAL-REPORT-Quantitative-microbial-risk-assessment-in-the-Water-Safety-Plan.pdf\" #>       }, #>       { #>         \"TreatmentID\": 21, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Microfiltration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 2.3, #>         \"max\": 6, #>         \"ReferenceName\": \"MICRORISK final report chapter 4 Table 4.11\", #>         \"ReferenceLink\": \"https://www.kwrwater.nl/wp-content/uploads/2016/09/MICRORISK-FINAL-REPORT-Quantitative-microbial-risk-assessment-in-the-Water-Safety-Plan.pdf\" #>       }, #>       { #>         \"TreatmentID\": 22, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Ultrafiltration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 5.5, #>         \"max\": 6, #>         \"ReferenceName\": \"NSF/ANSI 419  validation\", #>         \"ReferenceLink\": \"http://info.nsf.org/Certified/pdwe/Listings.asp\" #>       }, #>       { #>         \"TreatmentID\": 22, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Ultrafiltration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2.69, #>         \"max\": 5.14, #>         \"ReferenceName\": \"NSF/ANSI 419  validation\", #>         \"ReferenceLink\": \"http://info.nsf.org/Certified/pdwe/Listings.asp\" #>       }, #>       { #>         \"TreatmentID\": 22, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Ultrafiltration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 5.3, #>         \"max\": 6.5, #>         \"ReferenceName\": \"NSF/ANSI 419  validation\", #>         \"ReferenceLink\": \"http://info.nsf.org/Certified/pdwe/Listings.asp\" #>       }, #>       { #>         \"TreatmentID\": 23, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Nanofiltration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 5.44, #>         \"max\": 6, #>         \"ReferenceName\": \"NSF/ANSI 419  validation\", #>         \"ReferenceLink\": \"http://info.nsf.org/Certified/pdwe/Listings.asp\" #>       }, #>       { #>         \"TreatmentID\": 23, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Nanofiltration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 5.44, #>         \"max\": 6, #>         \"ReferenceName\": \"NSF/ANSI 419  validation\", #>         \"ReferenceLink\": \"http://info.nsf.org/Certified/pdwe/Listings.asp\" #>       }, #>       { #>         \"TreatmentID\": 23, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Nanofiltration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 5.75, #>         \"max\": 6.32, #>         \"ReferenceName\": \"NSF/ANSI 419  validation\", #>         \"ReferenceLink\": \"http://info.nsf.org/Certified/pdwe/Listings.asp\" #>       }, #>       { #>         \"TreatmentID\": 24, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Reverse osmosis\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 5.44, #>         \"max\": 6, #>         \"ReferenceName\": \"NSF/ANSI 419  validation\", #>         \"ReferenceLink\": \"http://info.nsf.org/Certified/pdwe/Listings.asp\" #>       }, #>       { #>         \"TreatmentID\": 24, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Reverse osmosis\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 5.44, #>         \"max\": 6, #>         \"ReferenceName\": \"NSF/ANSI 419  validation\", #>         \"ReferenceLink\": \"http://info.nsf.org/Certified/pdwe/Listings.asp\" #>       }, #>       { #>         \"TreatmentID\": 24, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Reverse osmosis\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 5.75, #>         \"max\": 6.32, #>         \"ReferenceName\": \"NSF/ANSI 419  validation\", #>         \"ReferenceLink\": \"http://info.nsf.org/Certified/pdwe/Listings.asp\" #>       }, #>       { #>         \"TreatmentID\": 25, #>         \"TreatmentName\": \"Wetlands\", #>         \"TreatmentGroup\": \"Wetlands, surface flow\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 1.5, #>         \"max\": 2.5, #>         \"ReferenceName\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceLink\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 25, #>         \"TreatmentName\": \"Wetlands\", #>         \"TreatmentGroup\": \"Wetlands, surface flow\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0.5, #>         \"max\": 1.5, #>         \"ReferenceName\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceLink\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 26, #>         \"TreatmentName\": \"Wetlands\", #>         \"TreatmentGroup\": \"Wetlands, subsurface flow\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0.5, #>         \"max\": 3, #>         \"ReferenceName\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceLink\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 26, #>         \"TreatmentName\": \"Wetlands\", #>         \"TreatmentGroup\": \"Wetlands, subsurface flow\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 0.5, #>         \"max\": 2, #>         \"ReferenceName\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceLink\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 27, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Dual media filtration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 0, #>         \"max\": 1, #>         \"ReferenceName\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceLink\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 27, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Dual media filtration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 0.5, #>         \"max\": 3, #>         \"ReferenceName\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceLink\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 27, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Dual media filtration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 1.5, #>         \"max\": 2.5, #>         \"ReferenceName\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceLink\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 28, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Membrane filtration\", #>         \"PathogenGroup\": \"Bacteria\", #>         \"type\": \"uniform\", #>         \"min\": 3.5, #>         \"max\": 6, #>         \"ReferenceName\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceLink\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 28, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Membrane filtration\", #>         \"PathogenGroup\": \"Viruses\", #>         \"type\": \"uniform\", #>         \"min\": 2.5, #>         \"max\": 6, #>         \"ReferenceName\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceLink\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       }, #>       { #>         \"TreatmentID\": 28, #>         \"TreatmentName\": \"Filtration\", #>         \"TreatmentGroup\": \"Membrane filtration\", #>         \"PathogenGroup\": \"Protozoa\", #>         \"type\": \"uniform\", #>         \"min\": 6, #>         \"max\": 6, #>         \"ReferenceName\": \"DEMEAUWARE Deliverable 3.1 (p.18-19): NRMMC-EPHC-AHMC (2006), WHO 2006)\", #>         \"ReferenceLink\": \"http://demoware.eu/en/results/deliverables/deliverable-d3-1-appropiate-and-user-friendly-methodologies-for-ra_lca_wfp.pdf/@@download/file/Deliverable%20D3.1%20-%20Appropiate%20and%20user%20friendly%20methodologies%20for%20RA_LCA_WFP.pdf\" #>       } #>     ], #>     \"schemes\": [ #>       { #>         \"TreatmentSchemeID\": 1, #>         \"TreatmentSchemeName\": \"default\", #>         \"TreatmentID\": 16, #>         \"TreatmentName\": \"Primary treatment\" #>       }, #>       { #>         \"TreatmentSchemeID\": 1, #>         \"TreatmentSchemeName\": \"default\", #>         \"TreatmentID\": 17, #>         \"TreatmentName\": \"Secondary treatment\" #>       }, #>       { #>         \"TreatmentSchemeID\": 1, #>         \"TreatmentSchemeName\": \"default\", #>         \"TreatmentID\": 13, #>         \"TreatmentName\": \"Chlorine dioxide\" #>       }, #>       { #>         \"TreatmentSchemeID\": 1, #>         \"TreatmentSchemeName\": \"default\", #>         \"TreatmentID\": 18, #>         \"TreatmentName\": \"Soil-Aquifer passage\" #>       }, #>       { #>         \"TreatmentSchemeID\": 1, #>         \"TreatmentSchemeName\": \"default\", #>         \"TreatmentID\": 24, #>         \"TreatmentName\": \"Filtration\" #>       } #>     ] #>   }, #>   \"doseresponse\": [ #>     { #>       \"PathogenID\": 1, #>       \"PathogenName\": \"Bacillus anthracis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0, #>       \"Host type\": \"guinea pig\", #>       \"Dose units\": \"spores\", #>       \"Route\": \"inhalation\", #>       \"Response\": \"death\", #>       \"Reference\": \"Druett 1953\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Bacillus_anthracis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 2, #>       \"PathogenName\": \"Burkholderia pseudomallei\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.328, #>       \"N50\": 5430, #>       \"Host type\": \"C57BL/6 mice and diabetic rat\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"intranasal,intraperitoneal\", #>       \"Response\": \"death\", #>       \"Reference\": \"Liu, Koo et al. 2002 and Brett and Woods 1996\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Burkholderia_pseudomallei:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.144, #>       \"N50\": 890, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral (in milk)\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Black et al 1988\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Campylobacter_jejuni_and_Campylobacter_coli:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 4, #>       \"PathogenName\": \"Coxiella burnetii\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.357, #>       \"N50\": 493000000, #>       \"Host type\": \"C57BL/1OScN mice\", #>       \"Dose units\": \"PFU\", #>       \"Route\": \"intraperitoneal\", #>       \"Response\": \"death\", #>       \"Reference\": \"Williams et al, 1982\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Coxiella_burnetii:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 5, #>       \"PathogenName\": \"Escherichia coli enterohemorrhagic (EHEC)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0002, #>       \"Host type\": \"pig\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral (in food)\", #>       \"Response\": \"shedding in feces\", #>       \"Reference\": \"Cornick & Helgerson (2004)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Escherichia_coli_enterohemorrhagic_(EHEC):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 6, #>       \"PathogenName\": \"Escherichia coli\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.155, #>       \"N50\": 2110000, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral (in milk)\", #>       \"Response\": \"positive stool isolation\", #>       \"Reference\": \"DuPont et al. (1971)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Escherichia_coli:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 7, #>       \"PathogenName\": \"Francisella tularensis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0473, #>       \"Host type\": \"monkeys\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"inhalation\", #>       \"Response\": \"death\", #>       \"Reference\": \"Day and Berendt, 1972\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Francisella_tularensis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 8, #>       \"PathogenName\": \"Legionella pneumophila\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0599, #>       \"Host type\": \"guinea pig\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"inhalation\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Muller et al. (1983)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Legionella_pneumophila:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 9, #>       \"PathogenName\": \"Listeria monocytogenes (Death as response)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0, #>       \"Host type\": \"C57B1/6J mice\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"death\", #>       \"Reference\": \"Golnazarian, Donnelly et al. 1989\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Listeria_monocytogenes_(Death_as_response):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 10, #>       \"PathogenName\": \"Listeria monocytogenes (Infection)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.253, #>       \"N50\": 277, #>       \"Host type\": \"C57Bl/6J mice\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Golnazarian\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Listeria_monocytogenes_(Infection):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 11, #>       \"PathogenName\": \"Listeria monocytogenes (Stillbirths)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.0422, #>       \"N50\": 1780000000, #>       \"Host type\": \"pooled\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"stillbirths\", #>       \"Reference\": \"Smith, Williams2007\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Listeria_monocytogenes_(Stillbirths):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 12, #>       \"PathogenName\": \"Mycobacterium avium\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0007, #>       \"Host type\": \"deer\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"O'Brien et al(1976)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Mycobacterium_avium:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 13, #>       \"PathogenName\": \"Pseudomonas aeruginosa (Contact lens)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.19, #>       \"N50\": 18500, #>       \"Host type\": \"white rabbit\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"contact lens\", #>       \"Response\": \"corneal ulceration\", #>       \"Reference\": \"Lawin-Brussel et al. (1993)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Pseudomonas_aeruginosa_(Contact_lens):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 14, #>       \"PathogenName\": \"Pseudomonas aeruginosa (bacterimia)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0001, #>       \"Host type\": \"Swiss webster mice (5day old)\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"injected in eyelids\", #>       \"Response\": \"death\", #>       \"Reference\": \"Hazlett, Rosen et al. 1978\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Pseudomonas_aeruginosa_(bacterimia):_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 15, #>       \"PathogenName\": \"Rickettsia rickettsi\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.777, #>       \"N50\": 21.3, #>       \"Host type\": \"Pooled data\", #>       \"Dose units\": \"CFU\", #>       \"Response\": \"morbidity\", #>       \"Reference\": \"Saslaw and Carlisle 1966 and Dupont, Hornick et al. 1973\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Rickettsia_rickettsi:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 16, #>       \"PathogenName\": \"Salmonella Typhi\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.175, #>       \"N50\": 1110000, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral, in milk\", #>       \"Response\": \"disease\", #>       \"Reference\": \"Hornick et al. (1966),Hornick et al. (1970)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Salmonella_Typhi:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 17, #>       \"PathogenName\": \"Salmonella anatum\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.318, #>       \"N50\": 37100, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral, with eggnog\", #>       \"Response\": \"positive stool culture\", #>       \"Reference\": \"McCullough and Elsele,1951\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Salmonella_anatum:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 18, #>       \"PathogenName\": \"Salmonella meleagridis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.389, #>       \"N50\": 16800, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral, with eggnog\", #>       \"Response\": \"infection\", #>       \"Reference\": \"McCullough and Eisele 1951,2\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Salmonella_meleagridis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 19, #>       \"PathogenName\": \"Salmonella nontyphoid\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.21, #>       \"N50\": 49.8, #>       \"Host type\": \"mice\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"intraperitoneal\", #>       \"Response\": \"death\", #>       \"Reference\": \"Meynell and Meynell,1958\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Salmonella_nontyphoid:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 20, #>       \"PathogenName\": \"Salmonella serotype newport\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 3.97e-06, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"McCullough and Elsele,1951\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Salmonella_serotype_newport:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 21, #>       \"PathogenName\": \"Shigella\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.265, #>       \"N50\": 1480, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral (in milk)\", #>       \"Response\": \"positive stool isolation\", #>       \"Reference\": \"DuPont et al. (1972b)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Shigella:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 22, #>       \"PathogenName\": \"Staphylococcus aureus\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 7.64e-08, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU/cm2\", #>       \"Route\": \"subcutaneous\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Rose and Haas 1999\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Staphylococcus_aureus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 23, #>       \"PathogenName\": \"Vibrio cholerae\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.25, #>       \"N50\": 243, #>       \"Host type\": \"human\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"oral (with NaHCO3)\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Hornick et al., (1971)\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Vibrio_cholerae:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 24, #>       \"PathogenName\": \"Yersinia pestis\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0016, #>       \"Host type\": \"mice\", #>       \"Dose units\": \"CFU\", #>       \"Route\": \"intranasal\", #>       \"Response\": \"death\", #>       \"Reference\": \"Lathem et al. 2005\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Yersinia_pestis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 25, #>       \"PathogenName\": \"Adenovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.607, #>       \"Host type\": \"human\", #>       \"Dose units\": \"TCID50\", #>       \"Route\": \"inhalation\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Couch, Cate et al. 1966\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Adenovirus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 26, #>       \"PathogenName\": \"Echovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 1.06, #>       \"N50\": 922, #>       \"Host type\": \"human\", #>       \"Dose units\": \"PFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Schiff et al.,1984\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Echovirus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 27, #>       \"PathogenName\": \"Enteroviruses\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0037, #>       \"Host type\": \"pig\", #>       \"Dose units\": \"PFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Cliver, 1981\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Enteroviruses:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 28, #>       \"PathogenName\": \"Influenza\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.581, #>       \"N50\": 945000, #>       \"Host type\": \"human\", #>       \"Dose units\": \"TCID50\", #>       \"Route\": \"intranasal\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Murphy et al., 1984 & Murphy et al., 1985\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Influenza:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 29, #>       \"PathogenName\": \"Lassa virus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 2.95, #>       \"Host type\": \"guinea pig\", #>       \"Dose units\": \"PFU\", #>       \"Route\": \"subcutaneous\", #>       \"Response\": \"death\", #>       \"Reference\": \"Jahrling et al., 1982\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Lassa_virus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 30, #>       \"PathogenName\": \"Poliovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.491, #>       \"Host type\": \"human\", #>       \"Dose units\": \"PD50 (mouse paralytic doses)\", #>       \"Route\": \"oral (capsule)\", #>       \"Response\": \"alimentary infection\", #>       \"Reference\": \"Koprowski\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Poliovirus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 31, #>       \"PathogenName\": \"Rhinovirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.221, #>       \"N50\": 1.81, #>       \"Host type\": \"human\", #>       \"Dose units\": \"TCID50 doses\", #>       \"Route\": \"intranasal\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Hendley et al., 1972\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Rhinovirus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.253, #>       \"N50\": 6.17, #>       \"Host type\": \"human\", #>       \"Dose units\": \"FFU\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Ward et al, 1986\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Rotavirus:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 33, #>       \"PathogenName\": \"SARS\", #>       \"PathogenGroup\": \"Viruses\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0025, #>       \"Host type\": \"mice hACE-2 and A/J\", #>       \"Dose units\": \"PFU\", #>       \"Route\": \"intranasal\", #>       \"Response\": \"death\", #>       \"Reference\": \"DeDiego et al., 2008 &  De Albuquerque et al., 2006\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/SARS:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 34, #>       \"PathogenName\": \"Cryptosporidium parvum and Cryptosporidium hominis\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0572, #>       \"Host type\": \"human\", #>       \"Dose units\": \"oocysts\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Messner et al. 2001\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Cryptosporidium_parvum_and_Cryptosporidium_hominis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 35, #>       \"PathogenName\": \"Endamoeba coli\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"Best fit model*\": \"beta-Poisson\", #>       \"alpha\": 0.101, #>       \"N50\": 341, #>       \"Host type\": \"human\", #>       \"Dose units\": \"Cysts\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Rendtorff 1954\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Endamoeba_coli:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 0.0199, #>       \"Host type\": \"human\", #>       \"Dose units\": \"Cysts\", #>       \"Route\": \"oral\", #>       \"Response\": \"infection\", #>       \"Reference\": \"Rendtorff 1954\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Giardia_duodenalis:_Dose_Response_Models\" #>     }, #>     { #>       \"PathogenID\": 37, #>       \"PathogenName\": \"Naegleria fowleri\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"Best fit model*\": \"exponential\", #>       \"k\": 3.42e-07, #>       \"Host type\": \"mice\", #>       \"Dose units\": \"no of trophozoites\", #>       \"Route\": \"intravenous\", #>       \"Response\": \"death\", #>       \"Reference\": \"Adams et al. 1976 & Haggerty and John 1978\", #>       \"Link\": \"http://qmrawiki.canr.msu.edu/index.php/Naegleria_fowleri:_Dose_Response_Models\" #>     } #>   ], #>   \"health\": [ #>     { #>       \"PathogenID\": 1, #>       \"PathogenName\": \"Bacillus anthracis\" #>     }, #>     { #>       \"PathogenID\": 2, #>       \"PathogenName\": \"Burkholderia pseudomallei\" #>     }, #>     { #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\" #>     }, #>     { #>       \"PathogenID\": 4, #>       \"PathogenName\": \"Coxiella burnetii\" #>     }, #>     { #>       \"PathogenID\": 5, #>       \"PathogenName\": \"Escherichia coli enterohemorrhagic (EHEC)\" #>     }, #>     { #>       \"PathogenID\": 6, #>       \"PathogenName\": \"Escherichia coli\", #>       \"infection_to_illness\": 0.25, #>       \"dalys_per_case\": 0.0547, #>       \"ReferenceNameInfection\": \"Bartak et al. (2014) Application of risk-based assessment and management to riverbank filtration sites in India\", #>       \"ReferenceNameDalys\": \"Havelaar and Melse (2003) Table 2.7 Quantifying public health risk in the WHO Guidelines - A burden of disease approach\" #>     }, #>     { #>       \"PathogenID\": 7, #>       \"PathogenName\": \"Francisella tularensis\" #>     }, #>     { #>       \"PathogenID\": 8, #>       \"PathogenName\": \"Legionella pneumophila\" #>     }, #>     { #>       \"PathogenID\": 9, #>       \"PathogenName\": \"Listeria monocytogenes (Death as response)\" #>     }, #>     { #>       \"PathogenID\": 10, #>       \"PathogenName\": \"Listeria monocytogenes (Infection)\" #>     }, #>     { #>       \"PathogenID\": 11, #>       \"PathogenName\": \"Listeria monocytogenes (Stillbirths)\" #>     }, #>     { #>       \"PathogenID\": 12, #>       \"PathogenName\": \"Mycobacterium avium\" #>     }, #>     { #>       \"PathogenID\": 13, #>       \"PathogenName\": \"Pseudomonas aeruginosa (Contact lens)\" #>     }, #>     { #>       \"PathogenID\": 14, #>       \"PathogenName\": \"Pseudomonas aeruginosa (bacterimia)\" #>     }, #>     { #>       \"PathogenID\": 15, #>       \"PathogenName\": \"Rickettsia rickettsi\" #>     }, #>     { #>       \"PathogenID\": 16, #>       \"PathogenName\": \"Salmonella Typhi\" #>     }, #>     { #>       \"PathogenID\": 17, #>       \"PathogenName\": \"Salmonella anatum\" #>     }, #>     { #>       \"PathogenID\": 18, #>       \"PathogenName\": \"Salmonella meleagridis\" #>     }, #>     { #>       \"PathogenID\": 19, #>       \"PathogenName\": \"Salmonella nontyphoid\" #>     }, #>     { #>       \"PathogenID\": 20, #>       \"PathogenName\": \"Salmonella serotype newport\" #>     }, #>     { #>       \"PathogenID\": 21, #>       \"PathogenName\": \"Shigella\" #>     }, #>     { #>       \"PathogenID\": 22, #>       \"PathogenName\": \"Staphylococcus aureus\" #>     }, #>     { #>       \"PathogenID\": 23, #>       \"PathogenName\": \"Vibrio cholerae\" #>     }, #>     { #>       \"PathogenID\": 24, #>       \"PathogenName\": \"Yersinia pestis\" #>     }, #>     { #>       \"PathogenID\": 25, #>       \"PathogenName\": \"Adenovirus\" #>     }, #>     { #>       \"PathogenID\": 26, #>       \"PathogenName\": \"Echovirus\" #>     }, #>     { #>       \"PathogenID\": 27, #>       \"PathogenName\": \"Enteroviruses\" #>     }, #>     { #>       \"PathogenID\": 28, #>       \"PathogenName\": \"Influenza\" #>     }, #>     { #>       \"PathogenID\": 29, #>       \"PathogenName\": \"Lassa virus\" #>     }, #>     { #>       \"PathogenID\": 30, #>       \"PathogenName\": \"Poliovirus\" #>     }, #>     { #>       \"PathogenID\": 31, #>       \"PathogenName\": \"Rhinovirus\" #>     }, #>     { #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"infection_to_illness\": 0.5, #>       \"dalys_per_case\": 0.014, #>       \"ReferenceNameInfection\": \"WHO (2011): Guidelines for drinking-water quality. World Health Organisation, Table 7.4\", #>       \"ReferenceNameDalys\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=155\" #>     }, #>     { #>       \"PathogenID\": 33, #>       \"PathogenName\": \"SARS\" #>     }, #>     { #>       \"PathogenID\": 34, #>       \"PathogenName\": \"Cryptosporidium parvum and Cryptosporidium hominis\" #>     }, #>     { #>       \"PathogenID\": 35, #>       \"PathogenName\": \"Endamoeba coli\" #>     }, #>     { #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"infection_to_illness\": 0.7, #>       \"dalys_per_case\": 0.0015, #>       \"ReferenceNameInfection\": \"WHO (2011): Guidelines for drinking-water quality. World Health Organisation, Table 7.4\", #>       \"ReferenceNameDalys\": \"http://apps.who.int/iris/bitstream/10665/44584/1/9789241548151_eng.pdf#page=155\" #>     }, #>     { #>       \"PathogenID\": 37, #>       \"PathogenName\": \"Naegleria fowleri\" #>     } #>   ] #> }"},{"path":"/reference/config_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Config: read configuration — config_read","title":"Config: read configuration — config_read","text":"Config: read configuration","code":""},{"path":"/reference/config_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Config: read configuration — config_read","text":"","code":"config_read(   confDir = system.file(\"extdata/configs/dummy\", package = \"kwb.qmra\") )"},{"path":"/reference/config_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Config: read configuration — config_read","text":"confDir directory read configuration files (Default: system.file('extdata/configs/dummy', package = 'kwb.qmra')\")","code":""},{"path":"/reference/config_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Config: read configuration — config_read","text":"stores configuration R list structure","code":""},{"path":"/reference/config_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Config: create configuration — config_write","title":"Config: create configuration — config_write","text":"Config: create configuration","code":""},{"path":"/reference/config_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Config: create configuration — config_write","text":"","code":"config_write(config, confName = \"dummy\", confDir = tempdir(), zipFiles = TRUE)"},{"path":"/reference/config_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Config: create configuration — config_write","text":"config configuration retrieved config_read() confName name configuration confDir directory save configuration files (Default: tempdir()\") zipFiles also zipfile created folder confDir (default: TRUE)","code":""},{"path":"/reference/config_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Config: create configuration — config_write","text":"writes configuration confDir subfolder defined confName","code":""},{"path":"/reference/config_write_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Config: create dummy configuration — config_write_dummy","title":"Config: create dummy configuration — config_write_dummy","text":"Config: create dummy configuration","code":""},{"path":"/reference/config_write_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Config: create dummy configuration — config_write_dummy","text":"","code":"config_write_dummy(   confDir = system.file(\"extdata/configs/dummy\", package = \"kwb.qmra\") )"},{"path":"/reference/config_write_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Config: create dummy configuration — config_write_dummy","text":"confDir directory save dummy configuration files (Default: system.file('extdata/config', package = 'kwb.qmra')\")","code":""},{"path":"/reference/config_write_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Config: create dummy configuration — config_write_dummy","text":"writes dummy configuration confDir","code":""},{"path":"/reference/create_random_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Create random distribution — create_random_distribution","title":"Create random distribution — create_random_distribution","text":"Create random distribution","code":""},{"path":"/reference/create_random_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create random distribution — create_random_distribution","text":"","code":"create_random_distribution(   type = \"uniform\",   number_of_repeatings = 1,   number_of_events = 365,   value = 10,   min = 10,   max = 1000,   percent_within_minmax = 0.9,   min_zero = 0.01,   log10_min = default_min(min, max, min_zero, f = log10),   log10_max = default_max(max, min_zero * 10, f = log10),   log10_mean = (log10_min + log10_max)/2,   log10_sdev = abs((log10_max - log10_mean)/get_percentile(percent_within_minmax)),   mean = (default_min(min, max, min_zero) + default_max(max, 10 * min_zero))/2,   sdev = abs((default_max(max, 10 * min_zero) -     mean)/get_percentile(percent_within_minmax)),   meanlog = mean(log(default_min(min, max, min_zero) + default_max(max, 10 *     min_zero))/2),   sdlog = abs(sd(c(default_min(min, max, min_zero, f = log), default_max(max, 10 *     min_zero, f = log)))),   mode = (default_min(min, max, min_zero) + default_max(max, 10 * min_zero))/2,   debug = TRUE )"},{"path":"/reference/create_random_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create random distribution — create_random_distribution","text":"type \"uniform\" calls runif, \"log10_uniform\" calls  10^runif(number_of_events, log10_min, log10_max), \"triangle\"  calls rtri, \"lognorm\" calls rlnorm,  \"norm\" calls rnorm \"log10_norm\" calls  10^rnorm(number_of_events, mean = log10_mean,  sdev = log10_sdev), (default: \"uniform\") number_of_repeatings often random distribution parameters generated (default: 1) number_of_events number events value constant value (random number), gets repeated number_of_events times ('type' = 'value') min minimum value (default: 10), used 'type' \"uniform\" \"triangle\" max maximum value (default: 1000), used 'type' \"uniform\" \"triangle\" percent_within_minmax percent data point within min/max (default:  0.9 .e. 90 percent,see also get_percentile min_zero used 'type' \"log10_uniform\"  \"log10_norm\", \"norm\" \"lognorm\" \"min\" value equal zero.  case zero replaced value (default: 0.01), see also  default_min log10_min minimum value (default: default_min(min, max,  min_zero, f = log10)), used 'type' \"log10_uniform\" \"log10_norm\" log10_max maximum value (default: default_max(max,  min_zero * 10, f = log10)), used 'type' \"log10_uniform\" \"log10_norm\" log10_mean mean value (default: (log10_min + log10_max)/2), used  'type' \"log10_norm\" log10_sdev standard deviation (default: abs((log10_max- log10_mean) /  get_percentile(percent_within_minmax))), used 'type'  \"log10_norm\" mean mean value (default: (default_min(min, max, min_zero) /  default_max(max, 10*min_zero)) / 2), used 'type' \"norm\" sdev standard deviation (default: abs((log10_max - log10_mean) /  get_percentile(percent_within_minmax))), used 'type'  \"norm\" meanlog log mean value (default:  mean(log( default_min(min, max, min_zero) +   default_max(max, 10 * min_zero)) / 2)), used 'type' \"lognorm\" sdlog standard deviation (default: abs(sd(c( default_min(min, max, min_zero, f = log),  default_max(max, 10 * min_zero, f = log)))),  used 'type' \"lognorm\" mode (default: default_min(min, max, min_zero) +  default_max(max, 10 * min_zero) / 2), used 'type'  \"triangle\" debug print debug information (default: TRUE)","code":""},{"path":"/reference/create_random_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create random distribution — create_random_distribution","text":"list parameters user defined random distribution corresponding values","code":""},{"path":[]},{"path":"/reference/default_max.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Max — default_max","title":"Default Max — default_max","text":"Default Max","code":""},{"path":"/reference/default_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Max — default_max","text":"","code":"default_max(org_max, new_max, f = c)"},{"path":"/reference/default_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Max — default_max","text":"org_max original maximum value new_max new maximum value replacement f function apply \"org_max\" transform correct  dimension (e.g. \"log\" case \"lognorm\" \"log10\" case log10_norm)  (default: c())","code":""},{"path":"/reference/default_max.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default Max — default_max","text":"","code":"default_max(org_max = 2, new_max = 0.01, f = log10) #> [1] 0.30103 default_max(org_max = 0, new_max = 0.01, f = log10) #> [1] -2 default_max(org_max = 2, new_max = 0.01, f = log) #> [1] 0.6931472 default_max(org_max = 0, new_max = 0.01, f = log) #> [1] -4.60517"},{"path":"/reference/default_min.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Min — default_min","title":"Default Min — default_min","text":"Default Min","code":""},{"path":"/reference/default_min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Min — default_min","text":"","code":"default_min(org_min, org_max, new_min, f = c)"},{"path":"/reference/default_min.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Min — default_min","text":"org_min original minimum value org_max original maximum value new_min new minimum value replacement f function apply org_min new_min transform correct  dimension (e.g. \"log\" case \"lognorm\" \"log10\" case log10_norm), (default: c())","code":""},{"path":"/reference/default_min.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default Min — default_min","text":"","code":"default_min(org_min = 2, org_max = 100, new_min = 0.01, f = log10) #> [1] 0.30103 default_min(org_min = 0, org_max = 100, new_min = 0.01, f = log10) #> [1] -2 default_min(org_min = 2, org_max = 100, new_min = 0.01, f = log) #> [1] 0.6931472 default_min(org_min = 0, org_max = 100, new_min = 0.01, f = log) #> [1] -4.60517"},{"path":"/reference/distribution_repeater.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: distributon repeater — distribution_repeater","title":"Helper function: distributon repeater — distribution_repeater","text":"Helper function: distributon repeater","code":""},{"path":"/reference/distribution_repeater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: distributon repeater — distribution_repeater","text":"","code":"distribution_repeater(   number_of_repeatings = 10,   number_of_events = 365,   func,   ... )"},{"path":"/reference/distribution_repeater.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: distributon repeater — distribution_repeater","text":"number_of_repeatings often random distribution parameters generated (default: 1) number_of_events number events func distribution function repeated (e.g. runif, rlnorm, rnorm) ... parameters passed func","code":""},{"path":"/reference/distribution_repeater.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: distributon repeater — distribution_repeater","text":"data.frame columns repeatID, eventID values","code":""},{"path":"/reference/distribution_repeater.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function: distributon repeater — distribution_repeater","text":"","code":"distribution_repeater(   number_of_repeatings = 2,   number_of_events = 10,   func = runif,   min = 1,   max = 10 ) #>    repeatID eventID   values #> 1         1       1 2.229129 #> 2         1       2 7.991098 #> 3         1       3 2.982084 #> 4         1       4 6.635676 #> 5         1       5 3.166199 #> 6         1       6 7.286491 #> 7         1       7 1.736225 #> 8         1       8 7.141960 #> 9         1       9 5.166174 #> 10        1      10 6.634595 #> 11        2       1 8.420980 #> 12        2       2 1.280050 #> 13        2       3 9.179748 #> 14        2       4 3.153545 #> 15        2       5 8.763911 #> 16        2       6 9.560668 #> 17        2       7 7.837767 #> 18        2       8 2.884393 #> 19        2       9 3.918186 #> 20        2      10 6.993737"},{"path":"/reference/dr.betapoisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose-response model: beta-poisson — dr.betapoisson","title":"Dose-response model: beta-poisson — dr.betapoisson","text":"Dose-response model: beta-poisson","code":""},{"path":"/reference/dr.betapoisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dose-response model: beta-poisson — dr.betapoisson","text":"","code":"dr.betapoisson(   dose = sfsmisc::lseq(from = 1, to = 10^10, length = 1000),   alpha = 0.328,   N50 = 5430 )"},{"path":"/reference/dr.betapoisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dose-response model: beta-poisson — dr.betapoisson","text":"dose vector dose data (default:  sfsmisc::lseq(= 0.1, = 10^10, length = 1000)) alpha alpha (default: 3.28E-01) N50 N50 (default: 5.43E+03)","code":""},{"path":"/reference/dr.betapoisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dose-response model: beta-poisson — dr.betapoisson","text":"tibble","code":""},{"path":"/reference/dr.db_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download dose-response model database from QMRAwiki — dr.db_download","title":"Download dose-response model database from QMRAwiki — dr.db_download","text":"Download dose-response model database QMRAwiki","code":""},{"path":"/reference/dr.db_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download dose-response model database from QMRAwiki — dr.db_download","text":"","code":"dr.db_download(fromInternet = FALSE)"},{"path":"/reference/dr.db_download.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Download dose-response model database from QMRAwiki — dr.db_download","text":"http://qmrawiki.canr.msu.edu/index.php?title=Table_of_Recommended_Best-Fit_Parameters","code":""},{"path":"/reference/dr.db_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download dose-response model database from QMRAwiki — dr.db_download","text":"fromInternet download internet (default: FALSE), FALSE import local copy","code":""},{"path":"/reference/dr.db_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download dose-response model database from QMRAwiki — dr.db_download","text":"tibble different microbial parameters","code":""},{"path":"/reference/dr.db_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate table with different doses for dr.db_download() — dr.db_model","title":"Generate table with different doses for dr.db_download() — dr.db_model","text":"Generate table different doses dr.db_download()","code":""},{"path":"/reference/dr.db_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate table with different doses for dr.db_download() — dr.db_model","text":"","code":"dr.db_model(   dr.db = dr.db_download(),   dose = sfsmisc::lseq(from = 1, to = 10^10, length = 1000) )"},{"path":"/reference/dr.db_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate table with different doses for dr.db_download() — dr.db_model","text":"dr.db retrieved dr.db_download(), default: dr.db_download() dose vector dose data (default:  sfsmisc::lseq(=0.1, = 10^10,length = 1000))","code":""},{"path":"/reference/dr.db_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate table with different doses for dr.db_download() — dr.db_model","text":"tibble","code":""},{"path":"/reference/dr.expo.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose-response model: exponential — dr.expo","title":"Dose-response model: exponential — dr.expo","text":"Dose-response model: exponential","code":""},{"path":"/reference/dr.expo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dose-response model: exponential — dr.expo","text":"","code":"dr.expo(dose = sfsmisc::lseq(from = 1, to = 10^10, length = 1000), k = 0.572)"},{"path":"/reference/dr.expo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dose-response model: exponential — dr.expo","text":"dose vector dose data (default:  sfsmisc::lseq(= 0.1, = 10^10, length = 1000)) k k-value (default: 5.72E-01)","code":""},{"path":"/reference/dr.expo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dose-response model: exponential — dr.expo","text":"tibble","code":""},{"path":"/reference/generate_random_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Create random distribution based on configuration file — generate_random_values","title":"Create random distribution based on configuration file — generate_random_values","text":"Create random distribution based configuration file","code":""},{"path":"/reference/generate_random_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create random distribution based on configuration file — generate_random_values","text":"","code":"generate_random_values(   config,   number_of_repeatings = 1,   number_of_events,   debug = TRUE )"},{"path":"/reference/generate_random_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create random distribution based on configuration file — generate_random_values","text":"config retrieved config_read() number_of_repeatings often random distribution parameters generated (default: 1) number_of_events number events debug print debug information (default: TRUE)","code":""},{"path":"/reference/generate_random_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create random distribution based on configuration file — generate_random_values","text":"list random distributions based configuration file","code":""},{"path":"/reference/get_percentile.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: get percentile — get_percentile","title":"Helper function: get percentile — get_percentile","text":"Helper function: get percentile","code":""},{"path":"/reference/get_percentile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: get percentile — get_percentile","text":"","code":"get_percentile(percent_within_minmax = 0.9)"},{"path":"/reference/get_percentile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: get percentile — get_percentile","text":"percent_within_minmax percent data point within min/max (default:  0.9 .e. 90 percent)","code":""},{"path":"/reference/get_percentile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function: get percentile — get_percentile","text":"","code":"get_percentile(0.9) #> [1] 1.644854 get_percentile(0.95) #> [1] 1.959964"},{"path":"/reference/myggtheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: create default ggplot theme — myggtheme","title":"Helper function: create default ggplot theme — myggtheme","text":"Helper function: create default ggplot theme","code":""},{"path":"/reference/myggtheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: create default ggplot theme — myggtheme","text":"","code":"myggtheme()"},{"path":"/reference/myggtheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: create default ggplot theme — myggtheme","text":"default ggplot theme kwb.qmra","code":""},{"path":"/reference/number_of_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: gets number of exposures from config — number_of_exposures","title":"Helper function: gets number of exposures from config — number_of_exposures","text":"Helper function: gets number exposures config","code":""},{"path":"/reference/number_of_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: gets number of exposures from config — number_of_exposures","text":"","code":"number_of_exposures(config)"},{"path":"/reference/number_of_exposures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: gets number of exposures from config — number_of_exposures","text":"config retrieved config_read()","code":""},{"path":"/reference/number_of_exposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: gets number of exposures from config — number_of_exposures","text":"number exposures","code":""},{"path":"/reference/number_of_repeatings.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: gets number of repeatings from config — number_of_repeatings","title":"Helper function: gets number of repeatings from config — number_of_repeatings","text":"Helper function: gets number repeatings config","code":""},{"path":"/reference/number_of_repeatings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: gets number of repeatings from config — number_of_repeatings","text":"","code":"number_of_repeatings(config)"},{"path":"/reference/number_of_repeatings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: gets number of repeatings from config — number_of_repeatings","text":"config retrieved config_read()","code":""},{"path":"/reference/number_of_repeatings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: gets number of repeatings from config — number_of_repeatings","text":"number repeatings (used bayesian analysis)","code":""},{"path":"/reference/opencpu_config_read.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenCPU wrapper: import config from CSV and convert to JSON — opencpu_config_read","title":"OpenCPU wrapper: import config from CSV and convert to JSON — opencpu_config_read","text":"OpenCPU wrapper: import config CSV convert JSON","code":""},{"path":"/reference/opencpu_config_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenCPU wrapper: import config from CSV and convert to JSON — opencpu_config_read","text":"","code":"opencpu_config_read(   confDir = system.file(\"extdata/configs/dummy\", package = \"kwb.qmra\") )"},{"path":"/reference/opencpu_config_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenCPU wrapper: import config from CSV and convert to JSON — opencpu_config_read","text":"confDir directory read configuration files (Default: system.file('extdata/configs/dummy', package = 'kwb.qmra')\")","code":""},{"path":"/reference/opencpu_config_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenCPU wrapper: import config from CSV and convert to JSON — opencpu_config_read","text":"stores configuration JSON format","code":""},{"path":"/reference/opencpu_config_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenCPU wrapper: import config from CSV and convert to JSON — opencpu_config_read","text":"","code":"### Example json config file config_json <- kwb.qmra::opencpu_config_read() #> Rows: 3 Columns: 10 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (2): name, type #> dbl (5): value, min, max, mode, mean #> lgl (3): sd, meanlog, sdlog #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 37 Columns: 13 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (3): PathogenName, PathogenGroup, type #> dbl (4): PathogenID, simulate, min, max #> lgl (6): value, mode, mean, sd, meanlog, sdlog #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 38 Columns: 13 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (4): TreatmentName, TreatmentGroup, PathogenGroup, type #> dbl (3): TreatmentID, min, max #> lgl (6): value, mode, mean, sd, meanlog, sdlog #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 5 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (2): TreatmentSchemeName, TreatmentName #> dbl (2): TreatmentSchemeID, TreatmentID #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 37 Columns: 13 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (9): PathogenName, PathogenGroup, Best fit model*, Host type, Dose units... #> dbl (4): PathogenID, k, alpha, N50 #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 37 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (1): PathogenName #> dbl (3): PathogenID, infection_to_illness, dalys_per_case #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(config_json) #> [1] \"{\\n  \\\"exposure\\\": [\\n    {\\n      \\\"name\\\": \\\"number_of_repeatings\\\",\\n      \\\"type\\\": \\\"value\\\",\\n      \\\"value\\\": 10\\n    },\\n    {\\n      \\\"name\\\": \\\"number_of_exposures\\\",\\n      \\\"type\\\": \\\"value\\\",\\n      \\\"value\\\": 365\\n    },\\n    {\\n      \\\"name\\\": \\\"volume_perEvent\\\",\\n      \\\"type\\\": \\\"triangle\\\",\\n      \\\"min\\\": 0.5,\\n      \\\"max\\\": 3,\\n      \\\"mode\\\": 1.5,\\n      \\\"mean\\\": 2\\n    }\\n  ],\\n  \\\"inflow\\\": [\\n    {\\n      \\\"PathogenID\\\": 1,\\n      \\\"PathogenName\\\": \\\"Bacillus anthracis\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 2,\\n      \\\"PathogenName\\\": \\\"Burkholderia pseudomallei\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 3,\\n      \\\"PathogenName\\\": \\\"Campylobacter jejuni and Campylobacter coli\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 1,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 4,\\n      \\\"PathogenName\\\": \\\"Coxiella burnetii\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 5,\\n      \\\"PathogenName\\\": \\\"Escherichia coli enterohemorrhagic (EHEC)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 6,\\n      \\\"PathogenName\\\": \\\"Escherichia coli\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 7,\\n      \\\"PathogenName\\\": \\\"Francisella tularensis\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 8,\\n      \\\"PathogenName\\\": \\\"Legionella pneumophila\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 9,\\n      \\\"PathogenName\\\": \\\"Listeria monocytogenes (Death as response)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 10,\\n      \\\"PathogenName\\\": \\\"Listeria monocytogenes (Infection)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 11,\\n      \\\"PathogenName\\\": \\\"Listeria monocytogenes (Stillbirths)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 12,\\n      \\\"PathogenName\\\": \\\"Mycobacterium avium\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 13,\\n      \\\"PathogenName\\\": \\\"Pseudomonas aeruginosa (Contact lens)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 14,\\n      \\\"PathogenName\\\": \\\"Pseudomonas aeruginosa (bacterimia)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 15,\\n      \\\"PathogenName\\\": \\\"Rickettsia rickettsi\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 16,\\n      \\\"PathogenName\\\": \\\"Salmonella Typhi\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 17,\\n      \\\"PathogenName\\\": \\\"Salmonella anatum\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 18,\\n      \\\"PathogenName\\\": \\\"Salmonella meleagridis\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 19,\\n      \\\"PathogenName\\\": \\\"Salmonella nontyphoid\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 20,\\n      \\\"PathogenName\\\": \\\"Salmonella serotype newport\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 21,\\n      \\\"PathogenName\\\": \\\"Shigella\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 22,\\n      \\\"PathogenName\\\": \\\"Staphylococcus aureus\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 23,\\n      \\\"PathogenName\\\": \\\"Vibrio cholerae\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 24,\\n      \\\"PathogenName\\\": \\\"Yersinia pestis\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 25,\\n      \\\"PathogenName\\\": \\\"Adenovirus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 26,\\n      \\\"PathogenName\\\": \\\"Echovirus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 27,\\n      \\\"PathogenName\\\": \\\"Enteroviruses\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 28,\\n      \\\"PathogenName\\\": \\\"Influenza\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 29,\\n      \\\"PathogenName\\\": \\\"Lassa virus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 30,\\n      \\\"PathogenName\\\": \\\"Poliovirus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 31,\\n      \\\"PathogenName\\\": \\\"Rhinovirus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 32,\\n      \\\"PathogenName\\\": \\\"Rotavirus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"simulate\\\": 1,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 33,\\n      \\\"PathogenName\\\": \\\"SARS\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 34,\\n      \\\"PathogenName\\\": \\\"Cryptosporidium parvum and Cryptosporidium hominis\\\",\\n      \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 35,\\n      \\\"PathogenName\\\": \\\"Endamoeba coli\\\",\\n      \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 36,\\n      \\\"PathogenName\\\": \\\"Giardia duodenalis\\\",\\n      \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n      \\\"simulate\\\": 1,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    },\\n    {\\n      \\\"PathogenID\\\": 37,\\n      \\\"PathogenName\\\": \\\"Naegleria fowleri\\\",\\n      \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n      \\\"simulate\\\": 0,\\n      \\\"type\\\": \\\"uniform\\\",\\n      \\\"min\\\": 10,\\n      \\\"max\\\": 10000\\n    }\\n  ],\\n  \\\"treatment\\\": {\\n    \\\"processes\\\": [\\n      {\\n        \\\"TreatmentID\\\": 1,\\n        \\\"TreatmentName\\\": \\\"Conventional clarification\\\",\\n        \\\"TreatmentGroup\\\": \\\"Coagulation, flocculation and sedimentation\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0.2,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 1,\\n        \\\"TreatmentName\\\": \\\"Conventional clarification\\\",\\n        \\\"TreatmentGroup\\\": \\\"Coagulation, flocculation and sedimentation\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 1,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 1,\\n        \\\"TreatmentName\\\": \\\"Conventional clarification\\\",\\n        \\\"TreatmentGroup\\\": \\\"Coagulation, flocculation and sedimentation\\\",\\n        \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0.1,\\n        \\\"max\\\": 3.4\\n      },\\n      {\\n        \\\"TreatmentID\\\": 2,\\n        \\\"TreatmentName\\\": \\\"Dissolved air flotation\\\",\\n        \\\"TreatmentGroup\\\": \\\"Coagulation, flocculation and sedimentation\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0.6,\\n        \\\"max\\\": 2.6\\n      },\\n      {\\n        \\\"TreatmentID\\\": 3,\\n        \\\"TreatmentName\\\": \\\"High-rate clarification\\\",\\n        \\\"TreatmentGroup\\\": \\\"Coagulation, flocculation and sedimentation\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 2.8\\n      },\\n      {\\n        \\\"TreatmentID\\\": 4,\\n        \\\"TreatmentName\\\": \\\"Lime softening\\\",\\n        \\\"TreatmentGroup\\\": \\\"Coagulation, flocculation and sedimentation\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 1,\\n        \\\"max\\\": 4\\n      },\\n      {\\n        \\\"TreatmentID\\\": 4,\\n        \\\"TreatmentName\\\": \\\"Lime softening\\\",\\n        \\\"TreatmentGroup\\\": \\\"Coagulation, flocculation and sedimentation\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 4,\\n        \\\"TreatmentName\\\": \\\"Lime softening\\\",\\n        \\\"TreatmentGroup\\\": \\\"Coagulation, flocculation and sedimentation\\\",\\n        \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 4\\n      },\\n      {\\n        \\\"TreatmentID\\\": 5,\\n        \\\"TreatmentName\\\": \\\"Granular high-rate filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0.2,\\n        \\\"max\\\": 4.4\\n      },\\n      {\\n        \\\"TreatmentID\\\": 5,\\n        \\\"TreatmentName\\\": \\\"Granular high-rate filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0.4,\\n        \\\"max\\\": 3.3\\n      },\\n      {\\n        \\\"TreatmentID\\\": 5,\\n        \\\"TreatmentName\\\": \\\"Granular high-rate filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0,\\n        \\\"max\\\": 3.5\\n      },\\n      {\\n        \\\"TreatmentID\\\": 6,\\n        \\\"TreatmentName\\\": \\\"Membrane filtration (micro, ultra-, nanofiltration, reverse osmosis)\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 1,\\n        \\\"max\\\": 7\\n      },\\n      {\\n        \\\"TreatmentID\\\": 6,\\n        \\\"TreatmentName\\\": \\\"Membrane filtration (micro, ultra-, nanofiltration, reverse osmosis)\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2.3,\\n        \\\"max\\\": 7\\n      },\\n      {\\n        \\\"TreatmentID\\\": 6,\\n        \\\"TreatmentName\\\": \\\"Membrane filtration (micro, ultra-, nanofiltration, reverse osmosis)\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 1,\\n        \\\"max\\\": 6.5\\n      },\\n      {\\n        \\\"TreatmentID\\\": 7,\\n        \\\"TreatmentName\\\": \\\"Precoat filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0.2,\\n        \\\"max\\\": 2.3\\n      },\\n      {\\n        \\\"TreatmentID\\\": 7,\\n        \\\"TreatmentName\\\": \\\"Precoat filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 3,\\n        \\\"max\\\": 6.7\\n      },\\n      {\\n        \\\"TreatmentID\\\": 7,\\n        \\\"TreatmentName\\\": \\\"Precoat filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 1,\\n        \\\"max\\\": 1.7\\n      },\\n      {\\n        \\\"TreatmentID\\\": 8,\\n        \\\"TreatmentName\\\": \\\"Slow sand filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 6\\n      },\\n      {\\n        \\\"TreatmentID\\\": 8,\\n        \\\"TreatmentName\\\": \\\"Slow sand filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0.3,\\n        \\\"max\\\": 5\\n      },\\n      {\\n        \\\"TreatmentID\\\": 8,\\n        \\\"TreatmentName\\\": \\\"Slow sand filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Filtration\\\",\\n        \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0.25,\\n        \\\"max\\\": 4\\n      },\\n      {\\n        \\\"TreatmentID\\\": 9,\\n        \\\"TreatmentName\\\": \\\"Bank filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Pretreatment\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 6\\n      },\\n      {\\n        \\\"TreatmentID\\\": 9,\\n        \\\"TreatmentName\\\": \\\"Bank filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Pretreatment\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 1,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 9,\\n        \\\"TreatmentName\\\": \\\"Bank filtration\\\",\\n        \\\"TreatmentGroup\\\": \\\"Pretreatment\\\",\\n        \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2.1,\\n        \\\"max\\\": 8.3\\n      },\\n      {\\n        \\\"TreatmentID\\\": 10,\\n        \\\"TreatmentName\\\": \\\"Roughing filters\\\",\\n        \\\"TreatmentGroup\\\": \\\"Pretreatment\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0.2,\\n        \\\"max\\\": 2.3\\n      },\\n      {\\n        \\\"TreatmentID\\\": 11,\\n        \\\"TreatmentName\\\": \\\"Storage reservoirs\\\",\\n        \\\"TreatmentGroup\\\": \\\"Pretreatment\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 0.7,\\n        \\\"max\\\": 2.2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 11,\\n        \\\"TreatmentName\\\": \\\"Storage reservoirs\\\",\\n        \\\"TreatmentGroup\\\": \\\"Pretreatment\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 1.4,\\n        \\\"max\\\": 2.3\\n      },\\n      {\\n        \\\"TreatmentID\\\": 12,\\n        \\\"TreatmentName\\\": \\\"Chlorine\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 12,\\n        \\\"TreatmentName\\\": \\\"Chlorine\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 12,\\n        \\\"TreatmentName\\\": \\\"Chlorine\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 13,\\n        \\\"TreatmentName\\\": \\\"Chlorine dioxide\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 13,\\n        \\\"TreatmentName\\\": \\\"Chlorine dioxide\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 13,\\n        \\\"TreatmentName\\\": \\\"Chlorine dioxide\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 14,\\n        \\\"TreatmentName\\\": \\\"Ozone\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 14,\\n        \\\"TreatmentName\\\": \\\"Ozone\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 14,\\n        \\\"TreatmentName\\\": \\\"Ozone\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 2,\\n        \\\"max\\\": 2\\n      },\\n      {\\n        \\\"TreatmentID\\\": 15,\\n        \\\"TreatmentName\\\": \\\"UV\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 4,\\n        \\\"max\\\": 4\\n      },\\n      {\\n        \\\"TreatmentID\\\": 15,\\n        \\\"TreatmentName\\\": \\\"UV\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 4,\\n        \\\"max\\\": 4\\n      },\\n      {\\n        \\\"TreatmentID\\\": 15,\\n        \\\"TreatmentName\\\": \\\"UV\\\",\\n        \\\"TreatmentGroup\\\": \\\"Primary disinfection\\\",\\n        \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n        \\\"type\\\": \\\"uniform\\\",\\n        \\\"min\\\": 4,\\n        \\\"max\\\": 4\\n      }\\n    ],\\n    \\\"schemes\\\": [\\n      {\\n        \\\"TreatmentSchemeID\\\": 1,\\n        \\\"TreatmentSchemeName\\\": \\\"Berlin (BF + Slow sand)\\\",\\n        \\\"TreatmentID\\\": 8,\\n        \\\"TreatmentName\\\": \\\"Slow sand filtration\\\"\\n      },\\n      {\\n        \\\"TreatmentSchemeID\\\": 1,\\n        \\\"TreatmentSchemeName\\\": \\\"Berlin (BF + Slow sand)\\\",\\n        \\\"TreatmentID\\\": 9,\\n        \\\"TreatmentName\\\": \\\"Bank filtration\\\"\\n      },\\n      {\\n        \\\"TreatmentSchemeID\\\": 2,\\n        \\\"TreatmentSchemeName\\\": \\\"Depth & surface filtration\\\",\\n        \\\"TreatmentID\\\": 1,\\n        \\\"TreatmentName\\\": \\\"Conventional clarification\\\"\\n      },\\n      {\\n        \\\"TreatmentSchemeID\\\": 2,\\n        \\\"TreatmentSchemeName\\\": \\\"Depth & surface filtration\\\",\\n        \\\"TreatmentID\\\": 5,\\n        \\\"TreatmentName\\\": \\\"Granular high-rate filtration\\\"\\n      },\\n      {\\n        \\\"TreatmentSchemeID\\\": 2,\\n        \\\"TreatmentSchemeName\\\": \\\"Depth & surface filtration\\\",\\n        \\\"TreatmentID\\\": 15,\\n        \\\"TreatmentName\\\": \\\"UV\\\"\\n      }\\n    ]\\n  },\\n  \\\"doseresponse\\\": [\\n    {\\n      \\\"PathogenID\\\": 1,\\n      \\\"PathogenName\\\": \\\"Bacillus anthracis\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0,\\n      \\\"Host type\\\": \\\"guinea pig\\\",\\n      \\\"Dose units\\\": \\\"spores\\\",\\n      \\\"Route\\\": \\\"inhalation\\\",\\n      \\\"Response\\\": \\\"death\\\",\\n      \\\"Reference\\\": \\\"Druett 1953\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Bacillus_anthracis:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 2,\\n      \\\"PathogenName\\\": \\\"Burkholderia pseudomallei\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.328,\\n      \\\"N50\\\": 5430,\\n      \\\"Host type\\\": \\\"C57BL/6 mice and diabetic rat\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"intranasal,intraperitoneal\\\",\\n      \\\"Response\\\": \\\"death\\\",\\n      \\\"Reference\\\": \\\"Liu, Koo et al. 2002 and Brett and Woods 1996\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Burkholderia_pseudomallei:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 3,\\n      \\\"PathogenName\\\": \\\"Campylobacter jejuni and Campylobacter coli\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.144,\\n      \\\"N50\\\": 890,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral (in milk)\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Black et al 1988\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Campylobacter_jejuni_and_Campylobacter_coli:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 4,\\n      \\\"PathogenName\\\": \\\"Coxiella burnetii\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.357,\\n      \\\"N50\\\": 493000000,\\n      \\\"Host type\\\": \\\"C57BL/1OScN mice\\\",\\n      \\\"Dose units\\\": \\\"PFU\\\",\\n      \\\"Route\\\": \\\"intraperitoneal\\\",\\n      \\\"Response\\\": \\\"death\\\",\\n      \\\"Reference\\\": \\\"Williams et al, 1982\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Coxiella_burnetii:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 5,\\n      \\\"PathogenName\\\": \\\"Escherichia coli enterohemorrhagic (EHEC)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.0002,\\n      \\\"Host type\\\": \\\"pig\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral (in food)\\\",\\n      \\\"Response\\\": \\\"shedding in feces\\\",\\n      \\\"Reference\\\": \\\"Cornick & Helgerson (2004)\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Escherichia_coli_enterohemorrhagic_(EHEC):_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 6,\\n      \\\"PathogenName\\\": \\\"Escherichia coli\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.155,\\n      \\\"N50\\\": 2110000,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral (in milk)\\\",\\n      \\\"Response\\\": \\\"positive stool isolation\\\",\\n      \\\"Reference\\\": \\\"DuPont et al. (1971)\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Escherichia_coli:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 7,\\n      \\\"PathogenName\\\": \\\"Francisella tularensis\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.0473,\\n      \\\"Host type\\\": \\\"monkeys\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"inhalation\\\",\\n      \\\"Response\\\": \\\"death\\\",\\n      \\\"Reference\\\": \\\"Day and Berendt, 1972\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Francisella_tularensis:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 8,\\n      \\\"PathogenName\\\": \\\"Legionella pneumophila\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.0599,\\n      \\\"Host type\\\": \\\"guinea pig\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"inhalation\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Muller et al. (1983)\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Legionella_pneumophila:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 9,\\n      \\\"PathogenName\\\": \\\"Listeria monocytogenes (Death as response)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0,\\n      \\\"Host type\\\": \\\"C57B1/6J mice\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral\\\",\\n      \\\"Response\\\": \\\"death\\\",\\n      \\\"Reference\\\": \\\"Golnazarian, Donnelly et al. 1989\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Listeria_monocytogenes_(Death_as_response):_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 10,\\n      \\\"PathogenName\\\": \\\"Listeria monocytogenes (Infection)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.253,\\n      \\\"N50\\\": 277,\\n      \\\"Host type\\\": \\\"C57Bl/6J mice\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Golnazarian\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Listeria_monocytogenes_(Infection):_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 11,\\n      \\\"PathogenName\\\": \\\"Listeria monocytogenes (Stillbirths)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.0422,\\n      \\\"N50\\\": 1780000000,\\n      \\\"Host type\\\": \\\"pooled\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral\\\",\\n      \\\"Response\\\": \\\"stillbirths\\\",\\n      \\\"Reference\\\": \\\"Smith, Williams2007\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Listeria_monocytogenes_(Stillbirths):_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 12,\\n      \\\"PathogenName\\\": \\\"Mycobacterium avium\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.0007,\\n      \\\"Host type\\\": \\\"deer\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"O'Brien et al(1976)\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Mycobacterium_avium:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 13,\\n      \\\"PathogenName\\\": \\\"Pseudomonas aeruginosa (Contact lens)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.19,\\n      \\\"N50\\\": 18500,\\n      \\\"Host type\\\": \\\"white rabbit\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"contact lens\\\",\\n      \\\"Response\\\": \\\"corneal ulceration\\\",\\n      \\\"Reference\\\": \\\"Lawin-Brussel et al. (1993)\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Pseudomonas_aeruginosa_(Contact_lens):_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 14,\\n      \\\"PathogenName\\\": \\\"Pseudomonas aeruginosa (bacterimia)\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.0001,\\n      \\\"Host type\\\": \\\"Swiss webster mice (5day old)\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"injected in eyelids\\\",\\n      \\\"Response\\\": \\\"death\\\",\\n      \\\"Reference\\\": \\\"Hazlett, Rosen et al. 1978\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Pseudomonas_aeruginosa_(bacterimia):_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 15,\\n      \\\"PathogenName\\\": \\\"Rickettsia rickettsi\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.777,\\n      \\\"N50\\\": 21.3,\\n      \\\"Host type\\\": \\\"Pooled data\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Response\\\": \\\"morbidity\\\",\\n      \\\"Reference\\\": \\\"Saslaw and Carlisle 1966 and Dupont, Hornick et al. 1973\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Rickettsia_rickettsi:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 16,\\n      \\\"PathogenName\\\": \\\"Salmonella Typhi\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.175,\\n      \\\"N50\\\": 1110000,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral, in milk\\\",\\n      \\\"Response\\\": \\\"disease\\\",\\n      \\\"Reference\\\": \\\"Hornick et al. (1966),Hornick et al. (1970)\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Salmonella_Typhi:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 17,\\n      \\\"PathogenName\\\": \\\"Salmonella anatum\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.318,\\n      \\\"N50\\\": 37100,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral, with eggnog\\\",\\n      \\\"Response\\\": \\\"positive stool culture\\\",\\n      \\\"Reference\\\": \\\"McCullough and Elsele,1951\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Salmonella_anatum:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 18,\\n      \\\"PathogenName\\\": \\\"Salmonella meleagridis\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.389,\\n      \\\"N50\\\": 16800,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral, with eggnog\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"McCullough and Eisele 1951,2\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Salmonella_meleagridis:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 19,\\n      \\\"PathogenName\\\": \\\"Salmonella nontyphoid\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.21,\\n      \\\"N50\\\": 49.8,\\n      \\\"Host type\\\": \\\"mice\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"intraperitoneal\\\",\\n      \\\"Response\\\": \\\"death\\\",\\n      \\\"Reference\\\": \\\"Meynell and Meynell,1958\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Salmonella_nontyphoid:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 20,\\n      \\\"PathogenName\\\": \\\"Salmonella serotype newport\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 3.97e-06,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"McCullough and Elsele,1951\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Salmonella_serotype_newport:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 21,\\n      \\\"PathogenName\\\": \\\"Shigella\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.265,\\n      \\\"N50\\\": 1480,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral (in milk)\\\",\\n      \\\"Response\\\": \\\"positive stool isolation\\\",\\n      \\\"Reference\\\": \\\"DuPont et al. (1972b)\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Shigella:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 22,\\n      \\\"PathogenName\\\": \\\"Staphylococcus aureus\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 7.64e-08,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"CFU/cm2\\\",\\n      \\\"Route\\\": \\\"subcutaneous\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Rose and Haas 1999\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Staphylococcus_aureus:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 23,\\n      \\\"PathogenName\\\": \\\"Vibrio cholerae\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.25,\\n      \\\"N50\\\": 243,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"oral (with NaHCO3)\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Hornick et al., (1971)\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Vibrio_cholerae:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 24,\\n      \\\"PathogenName\\\": \\\"Yersinia pestis\\\",\\n      \\\"PathogenGroup\\\": \\\"Bacteria\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.0016,\\n      \\\"Host type\\\": \\\"mice\\\",\\n      \\\"Dose units\\\": \\\"CFU\\\",\\n      \\\"Route\\\": \\\"intranasal\\\",\\n      \\\"Response\\\": \\\"death\\\",\\n      \\\"Reference\\\": \\\"Lathem et al. 2005\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Yersinia_pestis:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 25,\\n      \\\"PathogenName\\\": \\\"Adenovirus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.607,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"TCID50\\\",\\n      \\\"Route\\\": \\\"inhalation\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Couch, Cate et al. 1966\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Adenovirus:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 26,\\n      \\\"PathogenName\\\": \\\"Echovirus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 1.06,\\n      \\\"N50\\\": 922,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"PFU\\\",\\n      \\\"Route\\\": \\\"oral\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Schiff et al.,1984\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Echovirus:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 27,\\n      \\\"PathogenName\\\": \\\"Enteroviruses\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.0037,\\n      \\\"Host type\\\": \\\"pig\\\",\\n      \\\"Dose units\\\": \\\"PFU\\\",\\n      \\\"Route\\\": \\\"oral\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Cliver, 1981\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Enteroviruses:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 28,\\n      \\\"PathogenName\\\": \\\"Influenza\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.581,\\n      \\\"N50\\\": 945000,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"TCID50\\\",\\n      \\\"Route\\\": \\\"intranasal\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Murphy et al., 1984 & Murphy et al., 1985\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Influenza:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 29,\\n      \\\"PathogenName\\\": \\\"Lassa virus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 2.95,\\n      \\\"Host type\\\": \\\"guinea pig\\\",\\n      \\\"Dose units\\\": \\\"PFU\\\",\\n      \\\"Route\\\": \\\"subcutaneous\\\",\\n      \\\"Response\\\": \\\"death\\\",\\n      \\\"Reference\\\": \\\"Jahrling et al., 1982\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Lassa_virus:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 30,\\n      \\\"PathogenName\\\": \\\"Poliovirus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.491,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"PD50 (mouse paralytic doses)\\\",\\n      \\\"Route\\\": \\\"oral (capsule)\\\",\\n      \\\"Response\\\": \\\"alimentary infection\\\",\\n      \\\"Reference\\\": \\\"Koprowski\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Poliovirus:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 31,\\n      \\\"PathogenName\\\": \\\"Rhinovirus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.221,\\n      \\\"N50\\\": 1.81,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"TCID50 doses\\\",\\n      \\\"Route\\\": \\\"intranasal\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Hendley et al., 1972\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Rhinovirus:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 32,\\n      \\\"PathogenName\\\": \\\"Rotavirus\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.253,\\n      \\\"N50\\\": 6.17,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"FFU\\\",\\n      \\\"Route\\\": \\\"oral\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Ward et al, 1986\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Rotavirus:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 33,\\n      \\\"PathogenName\\\": \\\"SARS\\\",\\n      \\\"PathogenGroup\\\": \\\"Viruses\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.0025,\\n      \\\"Host type\\\": \\\"mice hACE-2 and A/J\\\",\\n      \\\"Dose units\\\": \\\"PFU\\\",\\n      \\\"Route\\\": \\\"intranasal\\\",\\n      \\\"Response\\\": \\\"death\\\",\\n      \\\"Reference\\\": \\\"DeDiego et al., 2008 &  De Albuquerque et al., 2006\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/SARS:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 34,\\n      \\\"PathogenName\\\": \\\"Cryptosporidium parvum and Cryptosporidium hominis\\\",\\n      \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.0572,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"oocysts\\\",\\n      \\\"Route\\\": \\\"oral\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Messner et al. 2001\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Cryptosporidium_parvum_and_Cryptosporidium_hominis:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 35,\\n      \\\"PathogenName\\\": \\\"Endamoeba coli\\\",\\n      \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n      \\\"Best fit model*\\\": \\\"beta-Poisson\\\",\\n      \\\"alpha\\\": 0.101,\\n      \\\"N50\\\": 341,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"Cysts\\\",\\n      \\\"Route\\\": \\\"oral\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Rendtorff 1954\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Endamoeba_coli:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 36,\\n      \\\"PathogenName\\\": \\\"Giardia duodenalis\\\",\\n      \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 0.0199,\\n      \\\"Host type\\\": \\\"human\\\",\\n      \\\"Dose units\\\": \\\"Cysts\\\",\\n      \\\"Route\\\": \\\"oral\\\",\\n      \\\"Response\\\": \\\"infection\\\",\\n      \\\"Reference\\\": \\\"Rendtorff 1954\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Giardia_duodenalis:_Dose_Response_Models\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 37,\\n      \\\"PathogenName\\\": \\\"Naegleria fowleri\\\",\\n      \\\"PathogenGroup\\\": \\\"Protozoa\\\",\\n      \\\"Best fit model*\\\": \\\"exponential\\\",\\n      \\\"k\\\": 3.42e-07,\\n      \\\"Host type\\\": \\\"mice\\\",\\n      \\\"Dose units\\\": \\\"no of trophozoites\\\",\\n      \\\"Route\\\": \\\"intravenous\\\",\\n      \\\"Response\\\": \\\"death\\\",\\n      \\\"Reference\\\": \\\"Adams et al. 1976 & Haggerty and John 1978\\\",\\n      \\\"Link\\\": \\\"http://qmrawiki.canr.msu.edu/index.php/Naegleria_fowleri:_Dose_Response_Models\\\"\\n    }\\n  ],\\n  \\\"health\\\": [\\n    {\\n      \\\"PathogenID\\\": 1,\\n      \\\"PathogenName\\\": \\\"Bacillus anthracis\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 2,\\n      \\\"PathogenName\\\": \\\"Burkholderia pseudomallei\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 3,\\n      \\\"PathogenName\\\": \\\"Campylobacter jejuni and Campylobacter coli\\\",\\n      \\\"infection_to_illness\\\": 0.7,\\n      \\\"dalys_per_case\\\": 0.0046\\n    },\\n    {\\n      \\\"PathogenID\\\": 4,\\n      \\\"PathogenName\\\": \\\"Coxiella burnetii\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 5,\\n      \\\"PathogenName\\\": \\\"Escherichia coli enterohemorrhagic (EHEC)\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 6,\\n      \\\"PathogenName\\\": \\\"Escherichia coli\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 7,\\n      \\\"PathogenName\\\": \\\"Francisella tularensis\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 8,\\n      \\\"PathogenName\\\": \\\"Legionella pneumophila\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 9,\\n      \\\"PathogenName\\\": \\\"Listeria monocytogenes (Death as response)\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 10,\\n      \\\"PathogenName\\\": \\\"Listeria monocytogenes (Infection)\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 11,\\n      \\\"PathogenName\\\": \\\"Listeria monocytogenes (Stillbirths)\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 12,\\n      \\\"PathogenName\\\": \\\"Mycobacterium avium\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 13,\\n      \\\"PathogenName\\\": \\\"Pseudomonas aeruginosa (Contact lens)\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 14,\\n      \\\"PathogenName\\\": \\\"Pseudomonas aeruginosa (bacterimia)\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 15,\\n      \\\"PathogenName\\\": \\\"Rickettsia rickettsi\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 16,\\n      \\\"PathogenName\\\": \\\"Salmonella Typhi\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 17,\\n      \\\"PathogenName\\\": \\\"Salmonella anatum\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 18,\\n      \\\"PathogenName\\\": \\\"Salmonella meleagridis\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 19,\\n      \\\"PathogenName\\\": \\\"Salmonella nontyphoid\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 20,\\n      \\\"PathogenName\\\": \\\"Salmonella serotype newport\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 21,\\n      \\\"PathogenName\\\": \\\"Shigella\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 22,\\n      \\\"PathogenName\\\": \\\"Staphylococcus aureus\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 23,\\n      \\\"PathogenName\\\": \\\"Vibrio cholerae\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 24,\\n      \\\"PathogenName\\\": \\\"Yersinia pestis\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 25,\\n      \\\"PathogenName\\\": \\\"Adenovirus\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 26,\\n      \\\"PathogenName\\\": \\\"Echovirus\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 27,\\n      \\\"PathogenName\\\": \\\"Enteroviruses\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 28,\\n      \\\"PathogenName\\\": \\\"Influenza\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 29,\\n      \\\"PathogenName\\\": \\\"Lassa virus\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 30,\\n      \\\"PathogenName\\\": \\\"Poliovirus\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 31,\\n      \\\"PathogenName\\\": \\\"Rhinovirus\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 32,\\n      \\\"PathogenName\\\": \\\"Rotavirus\\\",\\n      \\\"infection_to_illness\\\": 0.03,\\n      \\\"dalys_per_case\\\": 0.014\\n    },\\n    {\\n      \\\"PathogenID\\\": 33,\\n      \\\"PathogenName\\\": \\\"SARS\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 34,\\n      \\\"PathogenName\\\": \\\"Cryptosporidium parvum and Cryptosporidium hominis\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 35,\\n      \\\"PathogenName\\\": \\\"Endamoeba coli\\\"\\n    },\\n    {\\n      \\\"PathogenID\\\": 36,\\n      \\\"PathogenName\\\": \\\"Giardia duodenalis\\\",\\n      \\\"infection_to_illness\\\": 0.3,\\n      \\\"dalys_per_case\\\": 0.0015\\n    },\\n    {\\n      \\\"PathogenID\\\": 37,\\n      \\\"PathogenName\\\": \\\"Naegleria fowleri\\\"\\n    }\\n  ]\\n}\""},{"path":"/reference/opencpu_simulate_risk.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenCPU wrapper: run risk calculation and convert results to JSON format — opencpu_simulate_risk","title":"OpenCPU wrapper: run risk calculation and convert results to JSON format — opencpu_simulate_risk","text":"OpenCPU wrapper: run risk calculation convert results JSON format","code":""},{"path":"/reference/opencpu_simulate_risk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenCPU wrapper: run risk calculation and convert results to JSON format — opencpu_simulate_risk","text":"","code":"opencpu_simulate_risk(   config = config_read(),   usePoisson = TRUE,   debug = TRUE,   lean = TRUE )"},{"path":"/reference/opencpu_simulate_risk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OpenCPU wrapper: run risk calculation and convert results to JSON format — opencpu_simulate_risk","text":"config config object retrieved kwb.qmra::config_read() usePoisson poisson proccess (see function dose_perEvent()) used calculate dose_perEvent (TRUE) just exposure_perEvent  column (FALSE), (default: TRUE) debug print debug information (default: TRUE) lean TRUE, \"lean\" version function called, see kwb.qmra:::simulate_risk_lean, (default: TRUE)","code":""},{"path":"/reference/opencpu_simulate_risk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OpenCPU wrapper: run risk calculation and convert results to JSON format — opencpu_simulate_risk","text":"JSON list parameters user defined random distribution  corresponding values","code":""},{"path":"/reference/opencpu_simulate_risk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenCPU wrapper: run risk calculation and convert results to JSON format — opencpu_simulate_risk","text":"","code":"### Example simulation run ## Read from JSON config_json <- kwb.qmra::opencpu_config_read() #> Rows: 3 Columns: 10 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (2): name, type #> dbl (5): value, min, max, mode, mean #> lgl (3): sd, meanlog, sdlog #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 37 Columns: 13 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (3): PathogenName, PathogenGroup, type #> dbl (4): PathogenID, simulate, min, max #> lgl (6): value, mode, mean, sd, meanlog, sdlog #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 38 Columns: 13 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (4): TreatmentName, TreatmentGroup, PathogenGroup, type #> dbl (3): TreatmentID, min, max #> lgl (6): value, mode, mean, sd, meanlog, sdlog #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 5 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (2): TreatmentSchemeName, TreatmentName #> dbl (2): TreatmentSchemeID, TreatmentID #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 37 Columns: 13 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (9): PathogenName, PathogenGroup, Best fit model*, Host type, Dose units... #> dbl (4): PathogenID, k, alpha, N50 #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 37 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (1): PathogenName #> dbl (3): PathogenID, infection_to_illness, dalys_per_case #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. config <- jsonlite::fromJSON(config_json) ## Optionally directly import from CSVs # config <- kwb.qmra::config_read() risk <- kwb.qmra::opencpu_simulate_risk(config) #>  #> # STEP 0: BASIC CONFIGURATION #>  #> Simulated 3 pathogen(s): Campylobacter jejuni and Campylobacter coli, Rotavirus, Giardia duodenalis #> Number of random distribution repeatings: 10 #> Number of exposure events: 365 #>  #> # STEP 1: INFLOW #>  #> Simulated pathogen: Campylobacter jejuni and Campylobacter coli #> Create 10 random distribution(s): uniform (n: 365, min: 10.000000, max: 10000.000000) #> Warning: row names were found from a short variable and have been discarded #> Simulated pathogen: Rotavirus #> Create 10 random distribution(s): uniform (n: 365, min: 10.000000, max: 10000.000000) #> Warning: row names were found from a short variable and have been discarded #> Simulated pathogen: Giardia duodenalis #> Create 10 random distribution(s): uniform (n: 365, min: 10.000000, max: 10000.000000) #> Warning: row names were found from a short variable and have been discarded #> Providing inflow events ... ok. (0.00s)  #>  #> # STEP 2: TREATMENT SCHEMES #>  #> Create 10 random distribution(s): uniform (n: 365, min: 0.200000, max: 2.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 1.000000, max: 2.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.100000, max: 3.400000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.200000, max: 4.400000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.400000, max: 3.300000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.000000, max: 3.500000) #> Create 10 random distribution(s): uniform (n: 365, min: 2.000000, max: 6.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.300000, max: 5.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 0.250000, max: 4.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 2.000000, max: 6.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 1.000000, max: 2.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 2.100000, max: 8.300000) #> Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) #> Create 10 random distribution(s): uniform (n: 365, min: 4.000000, max: 4.000000) #>  #> # STEP 3: EXPOSURE #>  #> Simulated exposure: volume per event #> Create 10 random distribution(s): triangle (n: 365, min: 0.500000, max: 3.000000, mode = 1.500000) #>  #> # STEP 4: DOSE RESPONSE #>  #>  #> # STEP 5: HEALTH #>  risk_json <- jsonlite::toJSON(risk, pretty = TRUE) writeLines(text = risk_json, \"risk.json\")"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/plot_doseresponse.html","id":null,"dir":"Reference","previous_headings":"","what":"plot reduction — plot_doseresponse","title":"plot reduction — plot_doseresponse","text":"plotting","code":""},{"path":"/reference/plot_doseresponse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot reduction — plot_doseresponse","text":"","code":"plot_doseresponse(risk)"},{"path":"/reference/plot_doseresponse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot reduction — plot_doseresponse","text":"risk list retrieved simulate_risk()","code":""},{"path":"/reference/plot_doseresponse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot reduction — plot_doseresponse","text":"ggplot reduction","code":""},{"path":"/reference/plot_effluent.html","id":null,"dir":"Reference","previous_headings":"","what":"plot effluent — plot_effluent","title":"plot effluent — plot_effluent","text":"plotting","code":""},{"path":"/reference/plot_effluent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot effluent — plot_effluent","text":"","code":"plot_effluent(risk)"},{"path":"/reference/plot_effluent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot effluent — plot_effluent","text":"risk list retrieved simulate_risk()","code":""},{"path":"/reference/plot_effluent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot effluent — plot_effluent","text":"ggplot effluent","code":""},{"path":"/reference/plot_event_dalys.html","id":null,"dir":"Reference","previous_headings":"","what":"plot dalys_per_event — plot_event_dalys","title":"plot dalys_per_event — plot_event_dalys","text":"plotting","code":""},{"path":"/reference/plot_event_dalys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot dalys_per_event — plot_event_dalys","text":"","code":"plot_event_dalys(risk)"},{"path":"/reference/plot_event_dalys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot dalys_per_event — plot_event_dalys","text":"risk list retrieved simulate_risk()","code":""},{"path":"/reference/plot_event_dalys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot dalys_per_event — plot_event_dalys","text":"ggplot dalys_per_event","code":""},{"path":"/reference/plot_event_dose.html","id":null,"dir":"Reference","previous_headings":"","what":"plot dose per event — plot_event_dose","title":"plot dose per event — plot_event_dose","text":"plotting","code":""},{"path":"/reference/plot_event_dose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot dose per event — plot_event_dose","text":"","code":"plot_event_dose(risk)"},{"path":"/reference/plot_event_dose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot dose per event — plot_event_dose","text":"risk list retrieved simulate_risk()","code":""},{"path":"/reference/plot_event_dose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot dose per event — plot_event_dose","text":"ggplot dose per event","code":""},{"path":"/reference/plot_event_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"plot exposure per event — plot_event_exposure","title":"plot exposure per event — plot_event_exposure","text":"plotting","code":""},{"path":"/reference/plot_event_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot exposure per event — plot_event_exposure","text":"","code":"plot_event_exposure(risk)"},{"path":"/reference/plot_event_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot exposure per event — plot_event_exposure","text":"risk list retrieved simulate_risk()","code":""},{"path":"/reference/plot_event_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot exposure per event — plot_event_exposure","text":"ggplot exposure per event","code":""},{"path":"/reference/plot_event_illnessProb.html","id":null,"dir":"Reference","previous_headings":"","what":"plot illness probability — plot_event_illnessProb","title":"plot illness probability — plot_event_illnessProb","text":"plotting","code":""},{"path":"/reference/plot_event_illnessProb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot illness probability — plot_event_illnessProb","text":"","code":"plot_event_illnessProb(risk)"},{"path":"/reference/plot_event_illnessProb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot illness probability — plot_event_illnessProb","text":"risk list retrieved simulate_risk()","code":""},{"path":"/reference/plot_event_illnessProb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot illness probability — plot_event_illnessProb","text":"ggplot illness probability","code":""},{"path":"/reference/plot_event_infectionProb.html","id":null,"dir":"Reference","previous_headings":"","what":"plot infection probability — plot_event_infectionProb","title":"plot infection probability — plot_event_infectionProb","text":"plotting","code":""},{"path":"/reference/plot_event_infectionProb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot infection probability — plot_event_infectionProb","text":"","code":"plot_event_infectionProb(risk)"},{"path":"/reference/plot_event_infectionProb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot infection probability — plot_event_infectionProb","text":"risk list retrieved simulate_risk()","code":""},{"path":"/reference/plot_event_infectionProb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot infection probability — plot_event_infectionProb","text":"ggplot infection probability","code":""},{"path":"/reference/plot_event_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"plot volume per event — plot_event_volume","title":"plot volume per event — plot_event_volume","text":"plotting volume","code":""},{"path":"/reference/plot_event_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot volume per event — plot_event_volume","text":"","code":"plot_event_volume(risk)"},{"path":"/reference/plot_event_volume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot volume per event — plot_event_volume","text":"risk list retrieved simulate_risk()","code":""},{"path":"/reference/plot_event_volume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot volume per event — plot_event_volume","text":"ggplot volume per event","code":""},{"path":"/reference/plot_inflow.html","id":null,"dir":"Reference","previous_headings":"","what":"plot inflow — plot_inflow","title":"plot inflow — plot_inflow","text":"plotting","code":""},{"path":"/reference/plot_inflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot inflow — plot_inflow","text":"","code":"plot_inflow(risk)"},{"path":"/reference/plot_inflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot inflow — plot_inflow","text":"risk list retrieved simulate_risk","code":""},{"path":"/reference/plot_inflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot inflow — plot_inflow","text":"ggplot inflow","code":""},{"path":"/reference/plot_reduction.html","id":null,"dir":"Reference","previous_headings":"","what":"plot reduction — plot_reduction","title":"plot reduction — plot_reduction","text":"plotting","code":""},{"path":"/reference/plot_reduction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot reduction — plot_reduction","text":"","code":"plot_reduction(risk)"},{"path":"/reference/plot_reduction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot reduction — plot_reduction","text":"risk list retrieved simulate_risk()","code":""},{"path":"/reference/plot_reduction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot reduction — plot_reduction","text":"ggplot reduction","code":""},{"path":"/reference/plot_total_dalys.html","id":null,"dir":"Reference","previous_headings":"","what":"plot total DALYs — plot_total_dalys","title":"plot total DALYs — plot_total_dalys","text":"plotting","code":""},{"path":"/reference/plot_total_dalys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot total DALYs — plot_total_dalys","text":"","code":"plot_total_dalys(risk, labelling = FALSE, title = \"\", tolerance = 1e-06)"},{"path":"/reference/plot_total_dalys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot total DALYs — plot_total_dalys","text":"risk list retrieved simulate_risk() labelling TRUE labels absolute DALYs plotted (default:  FALSE) title title plot (default: \"\") tolerance accecptable tolerance level risk (default: 1E-6)","code":""},{"path":"/reference/plot_total_dalys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot total DALYs — plot_total_dalys","text":"ggplot total DALYs","code":""},{"path":"/reference/plot_total_illnessProb.html","id":null,"dir":"Reference","previous_headings":"","what":"plot total illness probability — plot_total_illnessProb","title":"plot total illness probability — plot_total_illnessProb","text":"plotting","code":""},{"path":"/reference/plot_total_illnessProb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot total illness probability — plot_total_illnessProb","text":"","code":"plot_total_illnessProb(risk, tolerance = 1e-04)"},{"path":"/reference/plot_total_illnessProb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot total illness probability — plot_total_illnessProb","text":"risk list retrieved simulate_risk() tolerance accecptable tolerance level risk (default: 1E-4)","code":""},{"path":"/reference/plot_total_illnessProb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot total illness probability — plot_total_illnessProb","text":"ggplot total illness probability","code":""},{"path":"/reference/plot_total_infectionProb.html","id":null,"dir":"Reference","previous_headings":"","what":"plot total infection probability — plot_total_infectionProb","title":"plot total infection probability — plot_total_infectionProb","text":"plotting","code":""},{"path":"/reference/plot_total_infectionProb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot total infection probability — plot_total_infectionProb","text":"","code":"plot_total_infectionProb(risk, tolerance = 1e-04)"},{"path":"/reference/plot_total_infectionProb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot total infection probability — plot_total_infectionProb","text":"risk list retrieved simulate_risk() tolerance accecptable tolerance level risk (default: 1E-4)","code":""},{"path":"/reference/plot_total_infectionProb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot total infection probability — plot_total_infectionProb","text":"ggplot total infection probability","code":""},{"path":"/reference/poisson_dose.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: poisson distribution based on exposure per event — poisson_dose","title":"Helper function: poisson distribution based on exposure per event — poisson_dose","text":"Helper function: poisson distribution based exposure per event","code":""},{"path":"/reference/poisson_dose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: poisson distribution based on exposure per event — poisson_dose","text":"","code":"poisson_dose(exposure_perEvent)"},{"path":"/reference/poisson_dose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: poisson distribution based on exposure per event — poisson_dose","text":"exposure_perEvent exposed organisms per event","code":""},{"path":"/reference/poisson_dose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: poisson distribution based on exposure per event — poisson_dose","text":"dose per event based poisson process","code":""},{"path":"/reference/report_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create report (not working for ","title":"Create report (not working for ","text":"Create report (working \"shiny\" reports)","code":""},{"path":"/reference/report_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create report (not working for ","text":"","code":"report_workflow(   confDirs = system.file(\"extdata/configs/\", package = \"kwb.qmra\"),   report_template_dir = system.file(\"extdata/report\", package = \"kwb.qmra\"),   report_template_name = \"workflow.Rmd\",   report_output_dir = NULL,   openReport = TRUE )"},{"path":"/reference/report_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create report (not working for ","text":"confDirs directory containing subdirectory/ies QMRA configurations default: system.file(\"extdata/configs/\", package = \"kwb.qmra\") report_template_dir report template directory  (default: system.file(\"extdata/report\", package = \"kwb.qmra\")) report_template_name default: \"workflow.Rmd\" report_output_dir directory report saved, NULL  report_template_dir used (default: NULL) openReport open report browser default: TRUE","code":""},{"path":"/reference/report_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create report (not working for ","text":"generate html report","code":""},{"path":"/reference/risk_dummy_json.html","id":null,"dir":"Reference","previous_headings":"","what":"risk_dummy_json: example risk_json object returned by kwb.qmra::opencpu_simulate_risk() — risk_dummy_json","title":"risk_dummy_json: example risk_json object returned by kwb.qmra::opencpu_simulate_risk() — risk_dummy_json","text":"JSON risk result object generated R script (data-raw/risk_json.R)","code":""},{"path":"/reference/risk_dummy_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"risk_dummy_json: example risk_json object returned by kwb.qmra::opencpu_simulate_risk() — risk_dummy_json","text":"","code":"data(risk_dummy_json)"},{"path":"/reference/risk_dummy_json.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"risk_dummy_json: example risk_json object returned by kwb.qmra::opencpu_simulate_risk() — risk_dummy_json","text":"json list risk results generated opencpu_simulate_risk, using dataset `config_dummy_json`","code":""},{"path":"/reference/risk_dummy_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"risk_dummy_json: example risk_json object returned by kwb.qmra::opencpu_simulate_risk() — risk_dummy_json","text":"","code":"data(\"risk_dummy_json\") risk <- jsonlite::fromJSON(risk_dummy_json) ### only show \"stats\" elements (skip \"events\" and \"total\" due to much data) risk_stats <- list(stats_total = risk$stats_total,                    stats_logremoval = risk$stats_logremoval) jsonlite::toJSON(risk_stats, pretty = TRUE) #> { #>   \"stats_total\": [ #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"dalys_sum\", #>       \"min\": 0.0001, #>       \"p05\": 0.0001, #>       \"p25\": 0.0002, #>       \"mean\": 0.0002, #>       \"median\": 0.0003, #>       \"p75\": 0.0003, #>       \"p95\": 0.0003, #>       \"max\": 0.0003 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"dose_sum\", #>       \"min\": 1, #>       \"p05\": 1.9, #>       \"p25\": 3, #>       \"mean\": 4.2, #>       \"median\": 4.5, #>       \"p75\": 5.75, #>       \"p95\": 6, #>       \"max\": 6 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"events\", #>       \"min\": 365, #>       \"p05\": 365, #>       \"p25\": 365, #>       \"mean\": 365, #>       \"median\": 365, #>       \"p75\": 365, #>       \"p95\": 365, #>       \"max\": 365 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"exposure_sum\", #>       \"min\": 2.4141, #>       \"p05\": 2.576, #>       \"p25\": 2.8244, #>       \"mean\": 3.5872, #>       \"median\": 3.2268, #>       \"p75\": 4.4081, #>       \"p95\": 4.9695, #>       \"max\": 5.1303 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"illnessProb_sum\", #>       \"min\": 0.0128, #>       \"p05\": 0.0242, #>       \"p25\": 0.038, #>       \"mean\": 0.0518, #>       \"median\": 0.0551, #>       \"p75\": 0.0702, #>       \"p95\": 0.0732, #>       \"max\": 0.0732 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"infectionProb_sum\", #>       \"min\": 0.0184, #>       \"p05\": 0.0344, #>       \"p25\": 0.0541, #>       \"mean\": 0.0733, #>       \"median\": 0.078, #>       \"p75\": 0.0991, #>       \"p95\": 0.1033, #>       \"max\": 0.1033 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"inflow_median\", #>       \"min\": 4653.3805, #>       \"p05\": 4748.3957, #>       \"p25\": 4933.9815, #>       \"mean\": 5075.777, #>       \"median\": 5116.1414, #>       \"p75\": 5196.9233, #>       \"p95\": 5369.9929, #>       \"max\": 5452.4783 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"logreduction_median\", #>       \"min\": 7.7191, #>       \"p05\": 7.7974, #>       \"p25\": 7.9129, #>       \"mean\": 7.9632, #>       \"median\": 7.9904, #>       \"p75\": 8.042, #>       \"p95\": 8.058, #>       \"max\": 8.0603 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"volume_sum\", #>       \"min\": 596.2623, #>       \"p05\": 597.6677, #>       \"p25\": 606.7883, #>       \"mean\": 610.3644, #>       \"median\": 608.1938, #>       \"p75\": 613.861, #>       \"p95\": 626.7628, #>       \"max\": 630.3435 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"dalys_sum\", #>       \"min\": 0.0168, #>       \"p05\": 0.0173, #>       \"p25\": 0.0196, #>       \"mean\": 0.021, #>       \"median\": 0.0208, #>       \"p75\": 0.0229, #>       \"p95\": 0.0245, #>       \"max\": 0.0246 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"dose_sum\", #>       \"min\": 3423, #>       \"p05\": 3757.8, #>       \"p25\": 4339.25, #>       \"mean\": 5017.6, #>       \"median\": 4814.5, #>       \"p75\": 5712.25, #>       \"p95\": 6475.35, #>       \"max\": 6996 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"events\", #>       \"min\": 365, #>       \"p05\": 365, #>       \"p25\": 365, #>       \"mean\": 365, #>       \"median\": 365, #>       \"p75\": 365, #>       \"p95\": 365, #>       \"max\": 365 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"exposure_sum\", #>       \"min\": 3505.3026, #>       \"p05\": 3798.133, #>       \"p25\": 4286.3844, #>       \"mean\": 5006.6546, #>       \"median\": 4750.8716, #>       \"p75\": 5751.648, #>       \"p95\": 6441.1899, #>       \"max\": 6895.9955 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"illnessProb_sum\", #>       \"min\": 1, #>       \"p05\": 1, #>       \"p25\": 1, #>       \"mean\": 1, #>       \"median\": 1, #>       \"p75\": 1, #>       \"p95\": 1, #>       \"max\": 1 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"infectionProb_sum\", #>       \"min\": 1, #>       \"p05\": 1, #>       \"p25\": 1, #>       \"mean\": 1, #>       \"median\": 1, #>       \"p75\": 1, #>       \"p95\": 1, #>       \"max\": 1 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"inflow_median\", #>       \"min\": 4710.4905, #>       \"p05\": 4739.7344, #>       \"p25\": 4791.3663, #>       \"mean\": 4964.467, #>       \"median\": 4971.1302, #>       \"p75\": 5106.3243, #>       \"p95\": 5228.0037, #>       \"max\": 5228.0943 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"logreduction_median\", #>       \"min\": 3.8804, #>       \"p05\": 3.8953, #>       \"p25\": 3.9922, #>       \"mean\": 4.1318, #>       \"median\": 4.121, #>       \"p75\": 4.2702, #>       \"p95\": 4.3587, #>       \"max\": 4.3695 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"volume_sum\", #>       \"min\": 596.2623, #>       \"p05\": 597.6677, #>       \"p25\": 606.7883, #>       \"mean\": 610.3644, #>       \"median\": 608.1938, #>       \"p75\": 613.861, #>       \"p95\": 626.7628, #>       \"max\": 630.3435 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"dalys_sum\", #>       \"min\": 0.0035, #>       \"p05\": 0.0036, #>       \"p25\": 0.0038, #>       \"mean\": 0.0042, #>       \"median\": 0.0041, #>       \"p75\": 0.0044, #>       \"p95\": 0.0051, #>       \"max\": 0.0054 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"dose_sum\", #>       \"min\": 55, #>       \"p05\": 59.5, #>       \"p25\": 95.5, #>       \"mean\": 109.1, #>       \"median\": 99, #>       \"p75\": 117.25, #>       \"p95\": 180.4, #>       \"max\": 202 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"events\", #>       \"min\": 365, #>       \"p05\": 365, #>       \"p25\": 365, #>       \"mean\": 365, #>       \"median\": 365, #>       \"p75\": 365, #>       \"p95\": 365, #>       \"max\": 365 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"exposure_sum\", #>       \"min\": 51.5657, #>       \"p05\": 52.5866, #>       \"p25\": 91.004, #>       \"mean\": 112.7844, #>       \"median\": 104.0966, #>       \"p75\": 122.1383, #>       \"p95\": 196.8526, #>       \"max\": 202.18 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"illnessProb_sum\", #>       \"min\": 0.2198, #>       \"p05\": 0.2269, #>       \"p25\": 0.2411, #>       \"mean\": 0.2603, #>       \"median\": 0.2544, #>       \"p75\": 0.2725, #>       \"p95\": 0.3067, #>       \"max\": 0.3235 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"infectionProb_sum\", #>       \"min\": 1, #>       \"p05\": 1, #>       \"p25\": 1, #>       \"mean\": 1, #>       \"median\": 1, #>       \"p75\": 1, #>       \"p95\": 1, #>       \"max\": 1 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"inflow_median\", #>       \"min\": 4462.2161, #>       \"p05\": 4548.8245, #>       \"p25\": 4727.0798, #>       \"mean\": 4914.3861, #>       \"median\": 4923.0337, #>       \"p75\": 5037.1534, #>       \"p95\": 5308.4335, #>       \"max\": 5461.4185 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"logreduction_median\", #>       \"min\": 7.0088, #>       \"p05\": 7.127, #>       \"p25\": 7.2791, #>       \"mean\": 7.3232, #>       \"median\": 7.3125, #>       \"p75\": 7.4015, #>       \"p95\": 7.5006, #>       \"max\": 7.5273 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"volume_sum\", #>       \"min\": 596.2623, #>       \"p05\": 597.6677, #>       \"p25\": 606.7883, #>       \"mean\": 610.3644, #>       \"median\": 608.1938, #>       \"p75\": 613.861, #>       \"p95\": 626.7628, #>       \"max\": 630.3435 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"dalys_sum\", #>       \"min\": 0.0001, #>       \"p05\": 0.0001, #>       \"p25\": 0.0001, #>       \"mean\": 0.0002, #>       \"median\": 0.0002, #>       \"p75\": 0.0003, #>       \"p95\": 0.0004, #>       \"max\": 0.0004 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"dose_sum\", #>       \"min\": 1, #>       \"p05\": 1.45, #>       \"p25\": 2, #>       \"mean\": 3.7, #>       \"median\": 3.5, #>       \"p75\": 5.75, #>       \"p95\": 6, #>       \"max\": 6 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"events\", #>       \"min\": 365, #>       \"p05\": 365, #>       \"p25\": 365, #>       \"mean\": 365, #>       \"median\": 365, #>       \"p75\": 365, #>       \"p95\": 365, #>       \"max\": 365 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"exposure_sum\", #>       \"min\": 1.6829, #>       \"p05\": 1.8597, #>       \"p25\": 2.5111, #>       \"mean\": 2.8584, #>       \"median\": 2.6394, #>       \"p75\": 3.137, #>       \"p95\": 4.1788, #>       \"max\": 4.7658 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"illnessProb_sum\", #>       \"min\": 0.0128, #>       \"p05\": 0.0186, #>       \"p25\": 0.0255, #>       \"mean\": 0.0462, #>       \"median\": 0.0442, #>       \"p75\": 0.0706, #>       \"p95\": 0.074, #>       \"max\": 0.0746 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"infectionProb_sum\", #>       \"min\": 0.0184, #>       \"p05\": 0.0265, #>       \"p25\": 0.0364, #>       \"mean\": 0.0653, #>       \"median\": 0.0627, #>       \"p75\": 0.0996, #>       \"p95\": 0.1043, #>       \"max\": 0.1052 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"inflow_median\", #>       \"min\": 4653.3805, #>       \"p05\": 4748.3957, #>       \"p25\": 4933.9815, #>       \"mean\": 5075.777, #>       \"median\": 5116.1414, #>       \"p75\": 5196.9233, #>       \"p95\": 5369.9929, #>       \"max\": 5452.4783 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"logreduction_median\", #>       \"min\": 7.1716, #>       \"p05\": 7.1908, #>       \"p25\": 7.266, #>       \"mean\": 7.391, #>       \"median\": 7.3989, #>       \"p75\": 7.5208, #>       \"p95\": 7.6096, #>       \"max\": 7.6542 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"PathogenID\": 3, #>       \"PathogenName\": \"Campylobacter jejuni and Campylobacter coli\", #>       \"key\": \"volume_sum\", #>       \"min\": 596.2623, #>       \"p05\": 597.6677, #>       \"p25\": 606.7883, #>       \"mean\": 610.3644, #>       \"median\": 608.1938, #>       \"p75\": 613.861, #>       \"p95\": 626.7628, #>       \"max\": 630.3435 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"dalys_sum\", #>       \"min\": 0, #>       \"p05\": 0, #>       \"p25\": 0, #>       \"mean\": 7.0932e-06, #>       \"median\": 0, #>       \"p75\": 0, #>       \"p95\": 0, #>       \"max\": 0 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"dose_sum\", #>       \"min\": 0, #>       \"p05\": 0, #>       \"p25\": 0, #>       \"mean\": 0.8, #>       \"median\": 0, #>       \"p75\": 1.5, #>       \"p95\": 3.1, #>       \"max\": 4 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"events\", #>       \"min\": 365, #>       \"p05\": 365, #>       \"p25\": 365, #>       \"mean\": 365, #>       \"median\": 365, #>       \"p75\": 365, #>       \"p95\": 365, #>       \"max\": 365 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"exposure_sum\", #>       \"min\": 0.607, #>       \"p05\": 0.6075, #>       \"p25\": 0.6292, #>       \"mean\": 0.7022, #>       \"median\": 0.6966, #>       \"p75\": 0.7415, #>       \"p95\": 0.8261, #>       \"max\": 0.8306 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"illnessProb_sum\", #>       \"min\": 0, #>       \"p05\": 0, #>       \"p25\": 0, #>       \"mean\": 0.0047, #>       \"median\": 0, #>       \"p75\": 0.0088, #>       \"p95\": 0.0182, #>       \"max\": 0.0234 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"infectionProb_sum\", #>       \"min\": 0, #>       \"p05\": 0, #>       \"p25\": 0, #>       \"mean\": 0.0155, #>       \"median\": 0, #>       \"p75\": 0.0293, #>       \"p95\": 0.0596, #>       \"max\": 0.0765 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"inflow_median\", #>       \"min\": 4710.4905, #>       \"p05\": 4739.7344, #>       \"p25\": 4791.3663, #>       \"mean\": 4964.467, #>       \"median\": 4971.1302, #>       \"p75\": 5106.3243, #>       \"p95\": 5228.0037, #>       \"max\": 5228.0943 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"logreduction_median\", #>       \"min\": 7.1917, #>       \"p05\": 7.2191, #>       \"p25\": 7.3043, #>       \"mean\": 7.3374, #>       \"median\": 7.3217, #>       \"p75\": 7.3775, #>       \"p95\": 7.4715, #>       \"max\": 7.542 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"PathogenID\": 36, #>       \"PathogenName\": \"Giardia duodenalis\", #>       \"key\": \"volume_sum\", #>       \"min\": 596.2623, #>       \"p05\": 597.6677, #>       \"p25\": 606.7883, #>       \"mean\": 610.3644, #>       \"median\": 608.1938, #>       \"p75\": 613.861, #>       \"p95\": 626.7628, #>       \"max\": 630.3435 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"dalys_sum\", #>       \"min\": 0, #>       \"p05\": 0.0001, #>       \"p25\": 0.0002, #>       \"mean\": 0.0003, #>       \"median\": 0.0003, #>       \"p75\": 0.0005, #>       \"p95\": 0.0006, #>       \"max\": 0.0006 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"dose_sum\", #>       \"min\": 0, #>       \"p05\": 0.9, #>       \"p25\": 2, #>       \"mean\": 3.3, #>       \"median\": 3, #>       \"p75\": 5, #>       \"p95\": 5.55, #>       \"max\": 6 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"events\", #>       \"min\": 365, #>       \"p05\": 365, #>       \"p25\": 365, #>       \"mean\": 365, #>       \"median\": 365, #>       \"p75\": 365, #>       \"p95\": 365, #>       \"max\": 365 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"exposure_sum\", #>       \"min\": 2.3873, #>       \"p05\": 2.8178, #>       \"p25\": 3.5178, #>       \"mean\": 4.0366, #>       \"median\": 3.9838, #>       \"p75\": 4.62, #>       \"p95\": 5.2298, #>       \"max\": 5.2663 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"illnessProb_sum\", #>       \"min\": 0, #>       \"p05\": 0.0071, #>       \"p25\": 0.0157, #>       \"mean\": 0.0243, #>       \"median\": 0.0235, #>       \"p75\": 0.0339, #>       \"p95\": 0.0404, #>       \"max\": 0.0416 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"infectionProb_sum\", #>       \"min\": 0, #>       \"p05\": 0.2058, #>       \"p25\": 0.4574, #>       \"mean\": 0.5614, #>       \"median\": 0.5815, #>       \"p75\": 0.7426, #>       \"p95\": 0.7981, #>       \"max\": 0.8104 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"inflow_median\", #>       \"min\": 4462.2161, #>       \"p05\": 4548.8245, #>       \"p25\": 4727.0798, #>       \"mean\": 4914.3861, #>       \"median\": 4923.0337, #>       \"p75\": 5037.1534, #>       \"p95\": 5308.4335, #>       \"max\": 5461.4185 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"logreduction_median\", #>       \"min\": 7.3243, #>       \"p05\": 7.3481, #>       \"p25\": 7.4304, #>       \"mean\": 7.4605, #>       \"median\": 7.4664, #>       \"p75\": 7.5158, #>       \"p95\": 7.5335, #>       \"max\": 7.5363 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"PathogenID\": 32, #>       \"PathogenName\": \"Rotavirus\", #>       \"key\": \"volume_sum\", #>       \"min\": 596.2623, #>       \"p05\": 597.6677, #>       \"p25\": 606.7883, #>       \"mean\": 610.3644, #>       \"median\": 608.1938, #>       \"p75\": 613.861, #>       \"p95\": 626.7628, #>       \"max\": 630.3435 #>     } #>   ], #>   \"stats_logremoval\": [ #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"TreatmentID\": 8, #>       \"TreatmentName\": \"Slow sand filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"min\": 2.0014, #>       \"p05\": 2.1995, #>       \"p25\": 2.9496, #>       \"mean\": 3.9522, #>       \"median\": 3.9282, #>       \"p75\": 4.9495, #>       \"p95\": 5.8008, #>       \"max\": 5.9951 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"TreatmentID\": 8, #>       \"TreatmentName\": \"Slow sand filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"min\": 0.3012, #>       \"p05\": 0.5401, #>       \"p25\": 1.4754, #>       \"mean\": 2.6434, #>       \"median\": 2.6309, #>       \"p75\": 3.8296, #>       \"p95\": 4.7445, #>       \"max\": 4.9998 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"TreatmentID\": 8, #>       \"TreatmentName\": \"Slow sand filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"min\": 0.2506, #>       \"p05\": 0.422, #>       \"p25\": 1.147, #>       \"mean\": 2.1011, #>       \"median\": 2.0889, #>       \"p75\": 3.0362, #>       \"p95\": 3.7995, #>       \"max\": 3.9984 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"TreatmentID\": 9, #>       \"TreatmentName\": \"Bank filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"min\": 2.0045, #>       \"p05\": 2.2171, #>       \"p25\": 3.0059, #>       \"mean\": 4.0067, #>       \"median\": 3.9859, #>       \"p75\": 5.0289, #>       \"p95\": 5.7863, #>       \"max\": 5.9987 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"TreatmentID\": 9, #>       \"TreatmentName\": \"Bank filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"min\": 1, #>       \"p05\": 1.0486, #>       \"p25\": 1.2518, #>       \"mean\": 1.5053, #>       \"median\": 1.5114, #>       \"p75\": 1.7531, #>       \"p95\": 1.949, #>       \"max\": 2 #>     }, #>     { #>       \"TreatmentSchemeID\": 1, #>       \"TreatmentSchemeName\": \"Berlin (BF + Slow sand)\", #>       \"TreatmentID\": 9, #>       \"TreatmentName\": \"Bank filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"min\": 2.1003, #>       \"p05\": 2.4273, #>       \"p25\": 3.6641, #>       \"mean\": 5.2238, #>       \"median\": 5.2596, #>       \"p75\": 6.7806, #>       \"p95\": 8.0118, #>       \"max\": 8.2997 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"TreatmentID\": 1, #>       \"TreatmentName\": \"Conventional clarification\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"min\": 0.2003, #>       \"p05\": 0.2924, #>       \"p25\": 0.6525, #>       \"mean\": 1.1022, #>       \"median\": 1.0981, #>       \"p75\": 1.5512, #>       \"p95\": 1.9016, #>       \"max\": 1.9996 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"TreatmentID\": 1, #>       \"TreatmentName\": \"Conventional clarification\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"min\": 1.0005, #>       \"p05\": 1.052, #>       \"p25\": 1.2548, #>       \"mean\": 1.4979, #>       \"median\": 1.4931, #>       \"p75\": 1.7456, #>       \"p95\": 1.9424, #>       \"max\": 2 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"TreatmentID\": 1, #>       \"TreatmentName\": \"Conventional clarification\", #>       \"PathogenGroup\": \"Viruses\", #>       \"min\": 0.1006, #>       \"p05\": 0.2664, #>       \"p25\": 0.8919, #>       \"mean\": 1.7376, #>       \"median\": 1.7231, #>       \"p75\": 2.5986, #>       \"p95\": 3.2464, #>       \"max\": 3.3992 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"TreatmentID\": 5, #>       \"TreatmentName\": \"Granular high-rate filtration\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"min\": 0.2034, #>       \"p05\": 0.4124, #>       \"p25\": 1.2579, #>       \"mean\": 2.3108, #>       \"median\": 2.3515, #>       \"p75\": 3.3656, #>       \"p95\": 4.2145, #>       \"max\": 4.3988 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"TreatmentID\": 5, #>       \"TreatmentName\": \"Granular high-rate filtration\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"min\": 0.4004, #>       \"p05\": 0.5533, #>       \"p25\": 1.1291, #>       \"mean\": 1.8465, #>       \"median\": 1.8459, #>       \"p75\": 2.5724, #>       \"p95\": 3.1581, #>       \"max\": 3.2993 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"TreatmentID\": 5, #>       \"TreatmentName\": \"Granular high-rate filtration\", #>       \"PathogenGroup\": \"Viruses\", #>       \"min\": 0.0009, #>       \"p05\": 0.1595, #>       \"p25\": 0.8356, #>       \"mean\": 1.7211, #>       \"median\": 1.7191, #>       \"p75\": 2.5967, #>       \"p95\": 3.3046, #>       \"max\": 3.4973 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"TreatmentID\": 15, #>       \"TreatmentName\": \"UV\", #>       \"PathogenGroup\": \"Bacteria\", #>       \"min\": 4, #>       \"p05\": 4, #>       \"p25\": 4, #>       \"mean\": 4, #>       \"median\": 4, #>       \"p75\": 4, #>       \"p95\": 4, #>       \"max\": 4 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"TreatmentID\": 15, #>       \"TreatmentName\": \"UV\", #>       \"PathogenGroup\": \"Protozoa\", #>       \"min\": 4, #>       \"p05\": 4, #>       \"p25\": 4, #>       \"mean\": 4, #>       \"median\": 4, #>       \"p75\": 4, #>       \"p95\": 4, #>       \"max\": 4 #>     }, #>     { #>       \"TreatmentSchemeID\": 2, #>       \"TreatmentSchemeName\": \"Depth & surface filtration\", #>       \"TreatmentID\": 15, #>       \"TreatmentName\": \"UV\", #>       \"PathogenGroup\": \"Viruses\", #>       \"min\": 4, #>       \"p05\": 4, #>       \"p25\": 4, #>       \"mean\": 4, #>       \"median\": 4, #>       \"p75\": 4, #>       \"p95\": 4, #>       \"max\": 4 #>     } #>   ] #> }"},{"path":"/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run shiny app — run_app","title":"Run shiny app — run_app","text":"Run shiny app","code":""},{"path":"/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run shiny app — run_app","text":"","code":"run_app(   appDir = system.file(\"extdata/shiny\", package = \"kwb.qmra\"),   launch.browser = TRUE,   ... )"},{"path":"/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run shiny app — run_app","text":"appDir directory shiny app (default: system.file(\"extdata/shiny\", package = \"kwb.qmra\")) launch.browser true, system's default web browser launched automatically app started. Defaults true interactive sessions . value parameter can also function call application's URL. ... additional parameters passed shiny::runApp","code":""},{"path":"/reference/simulate_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate: exposure — simulate_exposure","title":"Simulate: exposure — simulate_exposure","text":"Simulate: exposure","code":""},{"path":"/reference/simulate_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate: exposure — simulate_exposure","text":"","code":"simulate_exposure(config, debug = TRUE)"},{"path":"/reference/simulate_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate: exposure — simulate_exposure","text":"config retrieved config_read() debug print debug information (default: TRUE)","code":""},{"path":"/reference/simulate_exposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate: exposure — simulate_exposure","text":"list parameters user defined exposure scenario (number events  volumes per Event)","code":""},{"path":"/reference/simulate_inflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate: inflow — simulate_inflow","title":"Simulate: inflow — simulate_inflow","text":"Simulate: inflow","code":""},{"path":"/reference/simulate_inflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate: inflow — simulate_inflow","text":"","code":"simulate_inflow(config, debug = TRUE, lean = FALSE)"},{"path":"/reference/simulate_inflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate: inflow — simulate_inflow","text":"config retrieved config_read() debug print debug information (default: TRUE) lean TRUE, \"events\" returned (reduced version, .e. without column PathogenName ID columns class integer), otherwise list events element events\" corresponding parameters element paras. default FALSE, .e. events parameters returned list.","code":""},{"path":"/reference/simulate_inflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate: inflow — simulate_inflow","text":"list parameters user defined random distribution   corresponding values","code":""},{"path":"/reference/simulate_risk.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate: risk — simulate_risk","title":"Simulate: risk — simulate_risk","text":"Simulate: risk","code":""},{"path":"/reference/simulate_risk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate: risk — simulate_risk","text":"","code":"simulate_risk(config, usePoisson = TRUE, debug = TRUE, lean = FALSE)"},{"path":"/reference/simulate_risk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate: risk — simulate_risk","text":"config retrieved config_read() usePoisson poisson proccess (see function dose_perEvent()) used calculate dose_perEvent (TRUE) just exposure_perEvent  column (FALSE), (default: TRUE) debug print debug information (default: TRUE) lean TRUE, \"lean\" version function called, see kwb.qmra:::simulate_risk_lean","code":""},{"path":"/reference/simulate_risk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate: risk — simulate_risk","text":"list parameters user defined random distribution  corresponding values","code":""},{"path":"/reference/simulate_treatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate: treatment — simulate_treatment","title":"Simulate: treatment — simulate_treatment","text":"Simulate: treatment","code":""},{"path":"/reference/simulate_treatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate: treatment — simulate_treatment","text":"","code":"simulate_treatment(config, wide = FALSE, debug = TRUE, lean = FALSE)"},{"path":"/reference/simulate_treatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate: treatment — simulate_treatment","text":"config retrieved config_read() wide TRUE results converted wide format (default:  FALSE) debug print debug information (default: TRUE) lean lean (default: FALSE)","code":""},{"path":"/reference/simulate_treatment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate: treatment — simulate_treatment","text":"list parameters user defined random distribution  corresponding values","code":""},{"path":"/reference/who_getTreatment.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment: get WHO reductions — who_getTreatment","title":"Treatment: get WHO reductions — who_getTreatment","text":"Treatment: get reductions","code":""},{"path":"/reference/who_getTreatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treatment: get WHO reductions — who_getTreatment","text":"","code":"who_getTreatment()"},{"path":"/reference/who_getTreatment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treatment: get WHO reductions — who_getTreatment","text":"list $untidy  $tidy data frames","code":""},{"path":[]},{"path":"/reference/xlogscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: prepare xlogscale appearence — xlogscale","title":"Helper function: prepare xlogscale appearence — xlogscale","text":"Helper function: prepare xlogscale appearence","code":""},{"path":"/reference/xlogscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: prepare xlogscale appearence — xlogscale","text":"","code":"xlogscale(paraVals, userLimit = NULL, by = 1)"},{"path":"/reference/xlogscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: prepare xlogscale appearence — xlogscale","text":"paraVals values used userLimit vector specificing user limits used case paraVals  included parameter seq() (default: 1)","code":""},{"path":"/reference/xlogscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: prepare xlogscale appearence — xlogscale","text":"default ggplot theme kwb.qmra","code":""},{"path":"/reference/ylogscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: prepare ylogscale appearence — ylogscale","title":"Helper function: prepare ylogscale appearence — ylogscale","text":"Helper function: prepare ylogscale appearence","code":""},{"path":"/reference/ylogscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: prepare ylogscale appearence — ylogscale","text":"","code":"ylogscale(paraVals, userLimit = NULL, by = 1)"},{"path":"/reference/ylogscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: prepare ylogscale appearence — ylogscale","text":"paraVals values used userLimit vector specificing user limits used case paraVals  included parameter seq() (default: 1)","code":""},{"path":"/reference/ylogscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: prepare ylogscale appearence — ylogscale","text":"default ggplot theme kwb.qmra","code":""},{"path":"/news/index.html","id":"kwbqmra-031-2022-06-08","dir":"Changelog","previous_headings":"","what":"kwb.qmra 0.3.1 2022-06-08","title":"kwb.qmra 0.3.1 2022-06-08","text":"Harmonise kwb.pkgbuild","code":""},{"path":"/news/index.html","id":"kwbqmra-030-2021-02-23","dir":"Changelog","previous_headings":"","what":"kwb.qmra 0.3.0 2021-02-23","title":"kwb.qmra 0.3.0 2021-02-23","text":"Adaptions project Smart-Control: Added stats summary outputs risk output list (.e. stats_total stats_logreductions) Added wrapper functions OpenCPU (kwb.qmra::opencpu_config_read, kwb.qmra::opencpu_simulate_risk) example JSON datasets based dummy config (config_json `risk_json) Fixes: fix deprecation warning dplyr::tbl_df() replacing dplyr::as_tibble() Continuous integration: moved github-actions (instead travis-ci appveyor)","code":""},{"path":"/news/index.html","id":"kwbqmra-020-2019-07-19","dir":"Changelog","previous_headings":"","what":"kwb.qmra 0.2.0 2019-07-19","title":"kwb.qmra 0.2.0 2019-07-19","text":"Improvements R package (originally developed within EU project DEMOWARE) made within EU project AquaNES: Test: add vignette test_random_distributions_inflow.Rmd testing random distrution functions inflow data (using data stored qmra.db R package) (#21, (#24)) Delete “docs” folder (documentation auto-build gh-pages branch) (#19) fix bug due dplyr update (0.7.8 -> 0.8.0.1) (#18) create_random_distribution: “norm/log10_norm” (\"percentile min/max variable) (#17) create_random_distribution: “lognorm” (fix avoid NaN) (#16)) create_random_distribution() add log10_norm (#14) distribution together new vignette usage_log10_norm.Rmd rename loguniform log10_uniform create_random_distribution() add loguniform distribution together new vignette usage_loguniform.Rmd (#23) bugfix: distribution_repeater(), works now number_of_events == 1 (#22) details changes see also Milestone: v0.2.0","code":""},{"path":"/news/index.html","id":"kwbqmra-011-2016-09-15","dir":"Changelog","previous_headings":"","what":"kwb.qmra 0.1.1 2016-09-15","title":"kwb.qmra 0.1.1 2016-09-15","text":"version developed within DEMOWARE project also released Zenodo used quantitative microbiological risk assessment different wastewater reuse options Old Ford (see: Zenodo)","code":""}]
